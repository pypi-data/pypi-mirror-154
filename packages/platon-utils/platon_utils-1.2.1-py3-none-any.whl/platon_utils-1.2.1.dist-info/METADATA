Metadata-Version: 2.1
Name: platon-utils
Version: 1.2.1
Summary: platon-utils: Common utility functions for python code that interacts with PlatON
Home-page: https://github.com/platon/platon-utils
Author: Shinnng
Author-email: shinnng@outlook.com
License: MIT
Keywords: platon
Platform: UNKNOWN
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: Implementation :: PyPy
Requires-Python: >=3.5,!=3.5.2,<4
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: platon-hash (>=1.2.0)
Requires-Dist: platon-typing (>=1.2.0)
Requires-Dist: cytoolz (<1.0.0,>=0.10.1) ; implementation_name == "cpython"
Requires-Dist: toolz (<1,>0.8.2) ; implementation_name == "pypy"
Provides-Extra: dev
Requires-Dist: bumpversion (<1,>=0.5.3) ; extra == 'dev'
Requires-Dist: pytest-watch (<5,>=4.1.0) ; extra == 'dev'
Requires-Dist: wheel (<1.0.0,>=0.30.0) ; extra == 'dev'
Requires-Dist: twine (<2,>=1.13) ; extra == 'dev'
Requires-Dist: ipython ; extra == 'dev'
Requires-Dist: hypothesis (<5.0.0,>=4.43.0) ; extra == 'dev'
Requires-Dist: pytest (==5.4.1) ; extra == 'dev'
Requires-Dist: pytest-xdist ; extra == 'dev'
Requires-Dist: tox (==3.14.6) ; extra == 'dev'
Requires-Dist: black (<19,>=18.6b4) ; extra == 'dev'
Requires-Dist: flake8 (==3.7.9) ; extra == 'dev'
Requires-Dist: isort (<5,>=4.2.15) ; extra == 'dev'
Requires-Dist: mypy (==0.720) ; extra == 'dev'
Requires-Dist: pydocstyle (<6,>=5.0.0) ; extra == 'dev'
Requires-Dist: pytest (<4.0.0,>=3.4.1) ; extra == 'dev'
Requires-Dist: Sphinx (<2,>=1.6.5) ; extra == 'dev'
Requires-Dist: sphinx-rtd-theme (<2,>=0.1.9) ; extra == 'dev'
Requires-Dist: towncrier (<20,>=19.2.0) ; extra == 'dev'
Provides-Extra: doc
Requires-Dist: Sphinx (<2,>=1.6.5) ; extra == 'doc'
Requires-Dist: sphinx-rtd-theme (<2,>=0.1.9) ; extra == 'doc'
Requires-Dist: towncrier (<20,>=19.2.0) ; extra == 'doc'
Provides-Extra: lint
Requires-Dist: black (<19,>=18.6b4) ; extra == 'lint'
Requires-Dist: flake8 (==3.7.9) ; extra == 'lint'
Requires-Dist: isort (<5,>=4.2.15) ; extra == 'lint'
Requires-Dist: mypy (==0.720) ; extra == 'lint'
Requires-Dist: pydocstyle (<6,>=5.0.0) ; extra == 'lint'
Requires-Dist: pytest (<4.0.0,>=3.4.1) ; extra == 'lint'
Provides-Extra: test
Requires-Dist: hypothesis (<5.0.0,>=4.43.0) ; extra == 'test'
Requires-Dist: pytest (==5.4.1) ; extra == 'test'
Requires-Dist: pytest-xdist ; extra == 'test'
Requires-Dist: tox (==3.14.6) ; extra == 'test'

# PlatON Utilities

[![Join the chat at https://gitter.im/platon/platon-utils](https://badges.gitter.im/platon/platon-utils.svg)](https://gitter.im/platon/platon-utils?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)
[![Build Status](https://circleci.com/gh/platon/platon-utils.svg?style=shield)](https://circleci.com/gh/platon/platon-utils)
[![PyPI version](https://badge.fury.io/py/platon-utils.svg)](https://badge.fury.io/py/platon-utils)
[![Python versions](https://img.shields.io/pypi/pyversions/platon-utils.svg)](https://pypi.python.org/pypi/platon-utils)
[![Docs build](https://readthedocs.org/projects/platon-utils/badge/?version=latest)](http://platon-utils.readthedocs.io/en/latest/?badge=latest)
   

Common utility functions for python code that interacts with PlatON

Read more in the [documentation on ReadTheDocs](https://platon-utils.readthedocs.io/). [View the change log](https://platon-utils.readthedocs.io/en/latest/release_notes.html).

## Quickstart

```sh
pip install platon-utils
```

## Developer Setup

If you would like to hack on platon-utils, please check out the [Snake Charmers
Tactical Manual](https://github.com/platon/snake-charmers-tactical-manual)
for information on how we do:

- Testing
- Pull Requests
- Code Style
- Documentation

### Development Environment Setup

You can set up your dev environment with:

```sh
git clone git@github.com:platon/platon-utils.git
cd platon-utils
virtualenv -p python3 venv
. venv/bin/activate
pip install -e .[dev]
pip install -e platon-hash[pycryptodome]
```

### Testing Setup

During development, you might like to have tests run on every file save.

Show flake8 errors on file change:

```sh
# Test flake8
when-changed -v -s -r -1 platon_utils/ tests/ -c "clear; flake8 platon_utils tests && echo 'flake8 success' || echo 'error'"
```

Run multi-process tests in one command, but without color:

```sh
# in the project root:
pytest --numprocesses=4 --looponfail --maxfail=1
# the same thing, succinctly:
pytest -n 4 -f --maxfail=1
```

Run in one thread, with color and desktop notifications:

```sh
cd venv
ptw --onfail "notify-send -t 5000 'Test failure' 'python 3 test on platon-utils failed'" ../tests ../platon_utils
```

### Release setup

To release a new version:

```sh
make release bump=$$VERSION_PART_TO_BUMP$$
```

#### How to bumpversion

The version format for this repo is `{major}.{minor}.{patch}` for stable, and
`{major}.{minor}.{patch}-{stage}.{devnum}` for unstable (`stage` can be alpha or beta).

To issue the next version in line, specify which part to bump,
like `make release bump=minor` or `make release bump=devnum`. This is typically done from the
master branch, except when releasing a beta (in which case the beta is released from master,
and the previous stable branch is released from said branch).

If you are in a beta version, `make release bump=stage` will switch to a stable.

To issue an unstable version when the current version is stable, specify the
new version explicitly, like `make release bump="--new-version 4.0.0-alpha.1 devnum"`


