# English translations for make_pdf.
# Copyright (C) 2021 EorlBruder
# This file is distributed under the same license as the make_pdf project.
# EorlBruder <eorl@bruder.space>, 2021.
#
msgid ""
msgstr ""
"Project-Id-Version:  0.1.0\n"
"Report-Msgid-Bugs-To: eorl@bruder.space\n"
"POT-Creation-Date: 2021-08-06 02:53+0200\n"
"PO-Revision-Date: 2021-08-01 15:25+0200\n"
"Last-Translator: EorlBruder <eorl@bruder.space>\n"
"Language: en\n"
"Language-Team: en <eorl@bruder.space>\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: src/make_pdf/base.py:7
msgid "help_message_default"
msgstr "Show this message and exit."

#: src/make_pdf/base.py:10
msgid "help_message_no_toc"
msgstr "Don't generate a table-of-contents."

#: src/make_pdf/base.py:14
msgid "help_message_two_columns"
msgstr "Generate the file in two columns instead of one."

#: src/make_pdf/base.py:18
msgid "help_message_title_page"
msgstr "Generate a title-page."

#: src/make_pdf/base.py:31
msgid "help_message_theme"
msgstr ""
"Sets the theme to be used. Themes lay in $CONF_DIR. They can provide a "
"logo and a text to be displayed under the logo. The default theme only "
"prints the authors name in the upper left corner."

#: src/make_pdf/base.py:32
msgid "help_message_draft"
msgstr ""
"Generates the document with a draft-watermark. The generated file will be"
" named 'basename'-draft.pdf."

#: src/make_pdf/base.py:33
msgid "help_message_language"
msgstr ""
"Sets the document language. Currently only works for [english, german]. "
"Default is german."

#: src/make_pdf/base.py:34
msgid "help_message_title"
msgstr ""
"Set the title of the document. This is not necessary, if you've set the "
"title in the source-file, but for example when converting an odt this is "
"required."

#: src/make_pdf/base.py:35
msgid "help_message_author"
msgstr ""
"Set the author of the document. This is not necessary, if you've set the "
"author in the source-file."

#: src/make_pdf/base.py:36
msgid "help_message_date"
msgstr ""
"Set the date of the document. This is not necessary, if you've set the "
"date in the source-file."

#: src/make_pdf/base.py:38
msgid "help_message_no_automatic_date"
msgstr ""
"Don't automatically set the current date, if no date is provided in the "
"metadata."

#: src/make_pdf/base.py:40
msgid "help_message_print"
msgstr "Generates the document to be printed."

#: src/make_pdf/base.py:41
msgid "help_message_diff"
msgstr ""
"Creates diff of the base file with the old, provided file. Automatically "
"sets document as a draft. To provide multiple files, please use this "
"Parameter more than once."

#: src/make_pdf/base.py:42
msgid "help_message_debug_latex"
msgstr "Prints the resulting latex-file to stdout."

#: src/make_pdf/base.py:43
msgid "help_message_verbose"
msgstr "Show verbose output."

#: src/make_pdf/base.py:44
msgid "help_message_no_footer"
msgstr "Generates a document without a footer."

#: src/make_pdf/base.py:45
msgid "help_message_no_header"
msgstr "Generates a document without a header."

#: src/make_pdf/base.py:65
msgid "help_message_cli"
msgstr ""
"This tool generates a PDF from one or more markdown-file. It takes "
"various options, for example a theme.The created file will by default be "
"named 'basename'-final.pdf. You can use multiple Markdown-files, which "
"will be rendered one after the other. The basename of the first-markdown "
"file ist used for the pdf."

#: src/make_pdf/base.py:85
msgid "message_stitching_diff_files_together"
msgstr "All provided diff-files are being stitched together."

#: src/make_pdf/commands/letter.py:11
msgid "help_message_letter"
msgstr ""
"Generates a letter from the document. Requires additional variables to be"
" set in the metadata, or provided by an extra file."

#: src/make_pdf/commands/letter.py:13
msgid "help_message_letter_to"
msgstr ""
"Sets the metadata with information for whom the letter is. Either an "
"existing .yml or .tex file with the correct metadata set-up or a "
"corresponding <to>-to.tex lays in $CONF_DIR."

#: src/make_pdf/commands/letter.py:14
msgid "help_message_letter_from"
msgstr ""
"Sets the metadata with information for who is sending the letter. Either "
"an existing .yml or .tex file with the correct metadata set-up or a "
"corresponding <from>-from.tex or <from>-from.yml lay in $CONF_DIR. If a "
"theme is provided this falls back to looking for a <theme>-from.tex or "
"<theme>-from.yml."

#: src/make_pdf/commands/letter.py:56
msgid "message_type_is_letter"
msgstr "Generating a letter from the input-file."

#: src/make_pdf/commands/letter.py:98
msgid "error_to_file_not_found"
msgstr "No valid to-file with this name found!"

#: src/make_pdf/commands/letter.py:100
msgid "message_to_metadata_set"
msgstr "Getting metadata for the 'to'-information from {0}"

#: src/make_pdf/commands/letter.py:104
msgid "error_from_file_not_found"
msgstr "No from-file with this name found!"

#: src/make_pdf/commands/letter.py:106
msgid "message_from_metadata_set"
msgstr "Getting metadata for the 'from'-information from {0}"

#: src/make_pdf/commands/newsletter.py:13
msgid "help_message_newsletter"
msgstr ""
"Generates as a themed newsletter. This will put all sections in boxes and"
" sets the header to a fixed name with boxes."

#: src/make_pdf/commands/newsletter.py:52
msgid "message_type_is_newsletter"
msgstr "Generating a themed newsletter from the input-file."

#: src/make_pdf/commands/param_extractor.py:50
msgid "message_set_to_draft"
msgstr "Set the file to draft-mode!"

#: src/make_pdf/commands/param_extractor.py:52
msgid "message_using_title"
msgstr "Using '{0}' as the title."

#: src/make_pdf/commands/param_extractor.py:55
msgid "message_using_author"
msgstr "Using '{0}' as the author."

#: src/make_pdf/commands/param_extractor.py:57
msgid "message_using_date"
msgstr "Using '{0}' as the date."

#: src/make_pdf/commands/param_extractor.py:60
msgid "message_no_automatic_date_will_be_set"
msgstr "No automatic date will be set, if no date is provided!"

#: src/make_pdf/commands/param_extractor.py:64
msgid "message_generate_for_printing"
msgstr "Will generate the file ready for printing."

#: src/make_pdf/commands/param_extractor.py:68
msgid "message_only_debug_latex"
msgstr "Will only print the resulting latex-file to stdout and then exit."

#: src/make_pdf/commands/param_extractor.py:71
msgid "message_generate_no_footer"
msgstr "Document will be generated without a footer."

#: src/make_pdf/commands/param_extractor.py:74
msgid "message_generate_no_header"
msgstr "Document will be generated without a header."

#: src/make_pdf/commands/param_extractor.py:90
msgid "error_no_content_files"
msgstr ""
"No files with actual content provided! You probably only provided yml-"
"metadata-files."

#: src/make_pdf/commands/param_extractor.py:105
msgid "error_no_diff_content_files"
msgstr ""
"No files with actual content provided for diffing! You probably only "
"provided yml-metadata-files."

#: src/make_pdf/commands/param_extractor.py:109
msgid "message_diffing_with_file"
msgstr "Created a diff with the provided diff-files."

#: src/make_pdf/commands/param_extractor.py:164
msgid "error_theme_not_existing"
msgstr "No files for the provided theme exist!"

#: src/make_pdf/commands/param_extractor.py:165
msgid "message_using_theme"
msgstr "Using the theme {0}"

#: src/make_pdf/commands/param_extractor.py:187
msgid "error_language_not_supported"
msgstr "The provided language is not supported or wasn't recognized!"

#: src/make_pdf/commands/param_extractor.py:188
msgid "message_language_used"
msgstr "Using {0} as the language for the document."

#: src/make_pdf/commands/param_extractor.py:202
msgid "message_using_outfile"
msgstr "Will generate the file '{0}'."

#: src/make_pdf/commands/plain.py:13
msgid "help_message_plain"
msgstr "Generate a plain document, for example for a report or an article."

#: src/make_pdf/commands/plain.py:18
msgid "help_message_plain_short"
msgstr ""
"Generates a short layout. This sets title and author in the header of the"
" first page and not in the text."

#: src/make_pdf/commands/plain.py:19
msgid "help_message_plain_legal"
msgstr "Add 'ยง' to all section-titles."

#: src/make_pdf/commands/plain.py:67
msgid "message_type_is_plain"
msgstr "Generating a plain document from the input-file."

#: src/make_pdf/commands/plain.py:89
msgid "message_title_page_will_be_generated"
msgstr "Will generate a title-page."

#: src/make_pdf/commands/plain.py:91
msgid "message_no_toc_will_be_generated"
msgstr "Will not generate a table of contents"

#: src/make_pdf/commands/plain.py:93
msgid "message_two_columns_layout_will_be_used"
msgstr "The file will be generated with two columns instead of one."

#: src/make_pdf/commands/plain.py:95
msgid "message_short_is_set"
msgstr "Generating the file with a short layout."

#: src/make_pdf/commands/plain.py:96
msgid "message_legal_is_set"
msgstr "Adding 'ยง' to all section-titles."

#: src/make_pdf/commands/presentation.py:9
msgid "help_message_presentation"
msgstr "Generates a presentation from the document."

#: src/make_pdf/commands/presentation.py:11
msgid "help_message_presentation_aspect_ration"
msgstr ""
"Set the aspect-ratio. Default is 169 (for 16:9). Further options are in "
"accordance with beamers config: https://pandoc.org/MANUAL.html#variables-"
"for-beamer-slides."

#: src/make_pdf/commands/presentation.py:52
msgid "message_type_is_presentation"
msgstr "Generating a presentation from the input-file."

#: src/make_pdf/commands/presentation.py:73
msgid "aspect_ratio_is_set"
msgstr "Aspect ratio set to {0}"

#: src/make_pdf/converters/file_converter.py:31
msgid "message_set_locale_to"
msgstr "Setting locale for the call to {0}."

#: src/make_pdf/converters/file_converter.py:40
msgid "message_writing_file"
msgstr "Generating the file '{0}'."

#: src/make_pdf/preprocessors/criticmarkup_preprocessor.py:23
msgid "message_evaluating_criticmarkup"
msgstr "Evaluating CriticMarkup annotations."

#: src/make_pdf/preprocessors/diff_preprocessor.py:17
msgid "message_diffing_files"
msgstr "The files are being compared and the diff being created."

#: src/make_pdf/preprocessors/file_stitcher.py:9
msgid "message_stitching_files_together"
msgstr "All provided input-files are being stitched together."

