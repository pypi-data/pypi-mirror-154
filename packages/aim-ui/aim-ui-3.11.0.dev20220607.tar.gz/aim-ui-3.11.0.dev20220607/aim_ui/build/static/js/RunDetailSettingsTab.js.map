{"version":3,"sources":["pages/RunDetail/RunDetailSettingsTab.tsx","components/ConfirmModal/ConfirmModal.tsx"],"names":["RunDetailSettingsTab","runHash","isArchived","history","useHistory","React","useState","openDeleteModal","setOpenDeleteModal","useEffect","analytics","ANALYTICS_EVENT_KEYS","runDetails","tabs","settings","tabView","className","title","description","btnTooltip","btnText","onAction","archiveRun","runDetailAppModel","btnProps","variant","classNames","RunDetailSettingsTab__actionCardsCnt__btn__archive","RunDetailSettingsTab__actionCardsCnt__btn__unarchive","open","onCancel","onSubmit","deleteRun","push","text","icon","name","statusType","confirmBtnText","memo","ConfirmModal","props","onClose","aria-labelledby","aria-describedby","PaperProps","elevation","size","color","withOnlyIcon","onClick","tint","component","weight","id","children","cancelBtnText","autoFocus","defaultProps","displayName"],"mappings":"qNAeA,SAASA,EAAT,GAGiF,IAF/EC,EAE8E,EAF9EA,QACAC,EAC8E,EAD9EA,WAEMC,EAAUC,cAChB,EAA8CC,IAAMC,UAAkB,GAAtE,mBAAOC,EAAP,KAAwBC,EAAxB,KA8BA,OAJAH,IAAMI,WAAU,WACdC,IAAmBC,IAAqBC,WAAWC,KAAKC,SAASC,WAChE,IAGD,cAAC,IAAD,UACE,sBAAKC,UAAU,uBAAf,UACE,sBAAKA,UAAU,uCAAf,UACE,cAAC,IAAD,CACEC,MAAOf,EAAa,gBAAkB,cACtCgB,YACEhB,EACI,sEACA,yEAENiB,WAAYjB,EAAa,YAAc,UACvCkB,QAASlB,EAAa,YAAc,UACpCmB,SAzCV,WACEX,IACEC,IAAqBC,WAAWC,KAAKC,SAASQ,YAEhDC,IAAkBD,WAAWrB,GAAUC,IAsC/BsB,SAAU,CACRC,QAAS,WACTT,UAAWU,IAAW,CACpBC,oDAAqDzB,EACrD0B,qDACE1B,OAKR,cAAC,IAAD,CACEe,MAAM,aACNC,YAAY,oEACZC,WAAW,aACXC,QAAQ,SACRC,SAzCV,WACEb,GAAmB,IAyCXgB,SAAU,CACRC,QAAS,YACTT,UAAW,0DAIjB,cAAC,IAAD,CACEa,KAAMtB,EACNuB,SA9CR,WACEtB,GAAmB,IA8CbuB,SA5DR,WACErB,IACEC,IAAqBC,WAAWC,KAAKC,SAASkB,WAEhDT,IAAkBS,UAAU/B,GAAS,WACnCE,EAAQ8B,KAAK,aAwDTC,KAAK,4CACLC,KAAM,cAAC,IAAD,CAAMC,KAAK,WACjBnB,MAAM,aACNoB,WAAW,QACXC,eAAe,gBAOVC,yBAAKvC,I,iCCrGpB,4DAWA,SAASwC,EACPC,GAEA,OACE,cAAC,IAAD,UACE,eAAC,IAAD,CACEZ,KAAMY,EAAMZ,KACZa,QAASD,EAAMX,SACfa,kBAAgB,eAChBC,mBAAiB,qBACjBC,WAAY,CACVC,UAAW,IAEb9B,UAAS,qCAAgCyB,EAAMJ,YARjD,UAUE,sBAAKrB,UAAU,qBAAf,UACE,cAAC,IAAD,CACE+B,KAAK,QACL/B,UAAU,4BACVgC,MAAM,YACNC,cAAY,EACZC,QAAST,EAAMX,SALjB,SAOE,cAAC,IAAD,CAAMM,KAAK,YAGb,sBAAKpB,UAAU,iCAAf,UACE,qBAAKA,UAAU,qBAAf,SAAqCyB,EAAMN,OAC1CM,EAAMxB,OACL,cAAC,IAAD,CAAM8B,KAAM,GAAII,KAAM,IAAKC,UAAU,KAAKC,OAAQ,IAAlD,SACGZ,EAAMxB,WAKb,gCACGwB,EAAMvB,aACL,cAAC,IAAD,CACEF,UAAU,4BACVqC,OAAQ,IACRD,UAAU,IACVE,GAAG,qBAJL,SAMGb,EAAMvB,cAIX,gCACGuB,EAAMP,MACL,cAAC,IAAD,CACElB,UAAU,qBACVqC,OAAQ,IACRD,UAAU,IACVL,KAAM,GACNO,GAAG,qBALL,SAOGb,EAAMP,MAAQ,KAGlBO,EAAMc,UAAYd,EAAMc,kBAK/B,sBAAKvC,UAAU,uBAAf,UACE,cAAC,IAAD,CACEkC,QAAST,EAAMX,SACfd,UAAU,6BAFZ,SAIGyB,EAAMe,gBAET,cAAC,IAAD,CACEN,QAAST,EAAMV,SACfiB,MAAM,UACNvB,QAAQ,YACRT,UAAU,8BACVyC,WAAS,EALX,SAOGhB,EAAMH,yBAQnBE,EAAakB,aAAe,CAC1BpB,eAAgB,UAChBkB,cAAe,SACfnB,WAAY,QAGdG,EAAamB,YAAc,eAEZtD,QAAMkC,KAAyBC,I","file":"static/js/RunDetailSettingsTab.js?version=03bd04ef296c1f97cb58","sourcesContent":["import React, { memo } from 'react';\nimport classNames from 'classnames';\nimport { useHistory } from 'react-router-dom';\n\nimport ConfirmModal from 'components/ConfirmModal/ConfirmModal';\nimport { ActionCard, Icon } from 'components/kit';\nimport ErrorBoundary from 'components/ErrorBoundary/ErrorBoundary';\n\nimport { ANALYTICS_EVENT_KEYS } from 'config/analytics/analyticsKeysMap';\n\nimport runDetailAppModel from 'services/models/runs/runDetailAppModel';\nimport * as analytics from 'services/analytics';\n\nimport { IRunDetailSettingsTabProps } from './types';\n\nfunction RunDetailSettingsTab({\n  runHash,\n  isArchived,\n}: IRunDetailSettingsTabProps): React.FunctionComponentElement<React.ReactNode> {\n  const history = useHistory();\n  const [openDeleteModal, setOpenDeleteModal] = React.useState<boolean>(false);\n\n  function onRunArchive() {\n    analytics.trackEvent(\n      ANALYTICS_EVENT_KEYS.runDetails.tabs.settings.archiveRun,\n    );\n    runDetailAppModel.archiveRun(runHash, !isArchived);\n  }\n\n  function onRunDelete() {\n    analytics.trackEvent(\n      ANALYTICS_EVENT_KEYS.runDetails.tabs.settings.deleteRun,\n    );\n    runDetailAppModel.deleteRun(runHash, () => {\n      history.push('/runs');\n    });\n  }\n\n  function handleDeleteModalOpen() {\n    setOpenDeleteModal(true);\n  }\n\n  function handleDeleteModalClose() {\n    setOpenDeleteModal(false);\n  }\n\n  React.useEffect(() => {\n    analytics.pageView(ANALYTICS_EVENT_KEYS.runDetails.tabs.settings.tabView);\n  }, []);\n\n  return (\n    <ErrorBoundary>\n      <div className='RunDetailSettingsTab'>\n        <div className='RunDetailSettingsTab__actionCardsCnt'>\n          <ActionCard\n            title={isArchived ? 'Unarchive Run' : 'Archive Run'}\n            description={\n              isArchived\n                ? 'Unarchive runs will appear in search both on Dashboard and Explore.'\n                : 'Archived runs will not appear in search both on Dashboard and Explore.'\n            }\n            btnTooltip={isArchived ? 'Unarchive' : 'Archive'}\n            btnText={isArchived ? 'Unarchive' : 'Archive'}\n            onAction={onRunArchive}\n            btnProps={{\n              variant: 'outlined',\n              className: classNames({\n                RunDetailSettingsTab__actionCardsCnt__btn__archive: !isArchived,\n                RunDetailSettingsTab__actionCardsCnt__btn__unarchive:\n                  isArchived,\n              }),\n            }}\n          />\n\n          <ActionCard\n            title='Delete Run'\n            description='Once you delete a run, there is no going back. Please be certain.'\n            btnTooltip='Delete Run'\n            btnText='Delete'\n            onAction={handleDeleteModalOpen}\n            btnProps={{\n              variant: 'contained',\n              className: 'RunDetailSettingsTab__actionCardsCnt__btn__delete',\n            }}\n          />\n        </div>\n        <ConfirmModal\n          open={openDeleteModal}\n          onCancel={handleDeleteModalClose}\n          onSubmit={onRunDelete}\n          text='Are you sure you want to delete this run?'\n          icon={<Icon name='delete' />}\n          title='Delete run'\n          statusType='error'\n          confirmBtnText='Delete'\n        />\n      </div>\n    </ErrorBoundary>\n  );\n}\n\nexport default memo(RunDetailSettingsTab);\n","import React from 'react';\n\nimport { Dialog } from '@material-ui/core';\n\nimport { Button, Text, Icon } from 'components/kit';\nimport ErrorBoundary from 'components/ErrorBoundary/ErrorBoundary';\n\nimport { IConfirmModalProps } from 'types/components/ConfirmModal/ConfirmModal';\n\nimport './ConfirmModal.scss';\n\nfunction ConfirmModal(\n  props: IConfirmModalProps,\n): React.FunctionComponentElement<React.ReactNode> {\n  return (\n    <ErrorBoundary>\n      <Dialog\n        open={props.open}\n        onClose={props.onCancel}\n        aria-labelledby='dialog-title'\n        aria-describedby='dialog-description'\n        PaperProps={{\n          elevation: 10,\n        }}\n        className={`ConfirmModal ConfirmModal__${props.statusType}`}\n      >\n        <div className='ConfirmModal__Body'>\n          <Button\n            size='small'\n            className='ConfirmModal__Close__Icon'\n            color='secondary'\n            withOnlyIcon\n            onClick={props.onCancel}\n          >\n            <Icon name='close' />\n          </Button>\n\n          <div className='ConfirmModal__Title__Container'>\n            <div className='ConfirmModal__Icon'>{props.icon}</div>\n            {props.title && (\n              <Text size={16} tint={100} component='h4' weight={600}>\n                {props.title}\n              </Text>\n            )}\n          </div>\n\n          <div>\n            {props.description && (\n              <Text\n                className='ConfirmModal__description'\n                weight={400}\n                component='p'\n                id='dialog-description'\n              >\n                {props.description}\n              </Text>\n            )}\n\n            <div>\n              {props.text && (\n                <Text\n                  className='ConfirmModal__text'\n                  weight={400}\n                  component='p'\n                  size={14}\n                  id='dialog-description'\n                >\n                  {props.text || ''}\n                </Text>\n              )}\n              {props.children && props.children}\n            </div>\n          </div>\n        </div>\n\n        <div className='ConfirmModal__Footer'>\n          <Button\n            onClick={props.onCancel}\n            className='ConfirmModal__CancelButton'\n          >\n            {props.cancelBtnText}\n          </Button>\n          <Button\n            onClick={props.onSubmit}\n            color='primary'\n            variant='contained'\n            className='ConfirmModal__ConfirmButton'\n            autoFocus\n          >\n            {props.confirmBtnText}\n          </Button>\n        </div>\n      </Dialog>\n    </ErrorBoundary>\n  );\n}\n\nConfirmModal.defaultProps = {\n  confirmBtnText: 'Confirm',\n  cancelBtnText: 'Cancel',\n  statusType: 'info',\n};\n\nConfirmModal.displayName = 'ConfirmModal';\n\nexport default React.memo<IConfirmModalProps>(ConfirmModal);\n"],"sourceRoot":""}