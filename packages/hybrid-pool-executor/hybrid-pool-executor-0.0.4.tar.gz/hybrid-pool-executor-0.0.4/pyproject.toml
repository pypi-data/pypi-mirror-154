[build-system]
requires = ["setuptools>=62.0.0", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "hybrid-pool-executor"
description = "Pool executor supporting thread, process and async."
readme = "README.rst"
authors = [{ name = "Leavers", email = "leavers930@gmail.com" }]
license = { text = "MIT License" }
dependencies = []
classifiers = [
    "Development Status :: 3 - Alpha",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Natural Language :: English",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Topic :: Utilities",
    "Topic :: Software Development",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
keywords = ["concurrent", "thread"]
requires-python = ">=3.8"
dynamic = ["version"]

[project.optional-dependencies]
extra = ["cloudpickle"]
dev = [
    "bumpver",
    "black",
    "coverage[toml]>=5.3",
    "isort>=5.0.0",
    "mypy",
    "pyproject-autoflake",
    "pyproject-flake8",
    "pytest>=6.2.5",
    "pytest-asyncio",
    "pytest-timeout",
    "sphinx",
    "sphinx-rtd-theme",
    "tox",
]

[tool.setuptools.packages.find]
include = ["hybrid_pool_executor*"]
exclude = ["tests"]

[tool.setuptools.dynamic]
version = { attr = "hybrid_pool_executor.__version__" }

[tool.bumpver]
current_version = "0.0.4"
version_pattern = "MAJOR.MINOR.PATCH"
commit_message  = "Bump version {old_version} -> {new_version}"
commit = true
tag = false
push = false

[tool.bumpver.file_patterns]
# use "bumpver update --major/minor/patch --dry" to test
"pyproject.toml" = ['version = "{version}"']
"hybrid_pool_executor/__init__.py" = ['__version__ = "{version}"']

[tool.black]
line-length = 88

[tool.isort]
profile = "black"
src_paths = ["hybrid_pool_executor", "tests", "setup.py"]

[tool.pytest.ini_options]
asyncio_mode = "strict"

[tool.coverage.run]
branch = true
source = ["hybrid_pool_executor"]
parallel = true

[tool.coverage.report]
show_missing = true
exclude_lines = ["pragma: nocover"]

[tool.flake8]
max-line-length = 88
extend-ignore = "E203,"
# better to use whitelist: "exclude" makes flake8 process a huge amount of files
# exclude = [".git", "__pycache__", "build", "dist"]

[tool.autoflake]
in-place = true
recursive = true
remove-all-unused-imports = true
ignore-init-module-imports = true
remove-duplicate-keys = true
remove-unused-variables = true

[tool.mypy]
ignore_missing_imports = true
show_error_codes = true
# use comment "type: ignore" to ignore single line
# use comment "type: ignore[error-code] to ignore single error"
