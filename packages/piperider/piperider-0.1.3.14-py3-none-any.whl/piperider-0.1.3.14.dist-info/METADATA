Metadata-Version: 2.1
Name: piperider
Version: 0.1.3.14
Summary: PiperRider CLI
Home-page: https://github.com/InfuseAI/piperider
Author: InfuseAI Dev Team
Author-email: dev@infuseai.io
Project-URL: Bug Tracker, https://github.com/InfuseAI/piperider/issues
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Operating System :: OS Independent
Classifier: Development Status :: 4 - Beta
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: ruamel.yaml
Requires-Dist: sqlalchemy
Requires-Dist: sentry-sdk
Requires-Dist: rich
Requires-Dist: click
Requires-Dist: python-dateutil
Requires-Dist: inquirer
Provides-Extra: dev
Requires-Dist: pytest (>=4.6) ; extra == 'dev'
Requires-Dist: pytest-flake8 ; extra == 'dev'
Requires-Dist: flake8 (==3.9.2) ; extra == 'dev'
Requires-Dist: pytest-mypy ; extra == 'dev'
Requires-Dist: pytest-cov ; extra == 'dev'
Requires-Dist: twine ; extra == 'dev'
Provides-Extra: postgres
Requires-Dist: psycopg2-binary ; extra == 'postgres'
Provides-Extra: snowflake
Requires-Dist: snowflake-sqlalchemy ; extra == 'snowflake'

# PipeRider

For data practitioner who wants to trust their data by:

- Defining the shape of data, so they can **make sure the data will be expected in the future**
- Save time on debugging data,**easily discover & discuss any data problems from upstream**
- Socially **collaborate across teams on the dataset through data catalog and data insights**

# Install

```bash
$ pip install piperider
```

### Install with connectors

By default, we support the built-in sqlite connector, there are extra connectors:

* snowflake
* postgres

Install with postgres connector:

```
pip install piperider[postgres]
```

It could be more than one connector with comma:

```
pip install piperider[postgres,snowflake]
```

# Command

## Attach piperider to a dbt project

```bash
$ piperider init
```

This command creates `/.piperider` under a dbt project root and generate necessary configurations.

## Scan models

```bash
$ piperider run
```

This command scans the models from datasource and create assessment results in `/.piperider/output`

## Generate reports

```bash
$ piperider generate-report <piperider result file>
```

generate a static html report under current path. 
