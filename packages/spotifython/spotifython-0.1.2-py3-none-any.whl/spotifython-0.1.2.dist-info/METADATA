Metadata-Version: 2.1
Name: spotifython
Version: 0.1.2
Summary: An async caching python interface to readonly parts of the spotify api.
Home-page: https://github.com/vawvaw/spotifython
Author: VAWVAW
Author-email: vawvaw@vaw-valentin.de
License: GPLv3
Project-URL: Bug Tracker, https://github.com/vawvaw/spotifython/issues
Project-URL: Documentation, https://spotifython.readthedocs.io/
Classifier: Development Status :: 3 - Alpha
Classifier: Framework :: aiohttp
Classifier: Intended Audience :: Developers
Classifier: Programming Language :: Python :: 3.10
Classifier: License :: OSI Approved :: GNU General Public License v3 (GPLv3)
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Topic :: Internet
Classifier: Topic :: Software Development :: Libraries
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Utilities
Classifier: Typing :: Typed
Requires-Python: >=3.10
Description-Content-Type: text/x-rst
License-File: LICENSE
Requires-Dist: aiohttp (<4,>=3.7.4)

spotifython
===========

A readonly wrapper for the Spotify API that relies on heavy caching to minimise the number of requests.

Key Features
------------
- using ``async`` and ``await``
- caching requested data (note that non public data will be cached)

Installing
----------
**python 3.10 or higher is required**

.. code:: sh

    # Linux/macOS
    python3 -m pip install -U spotifython
.. code:: sh

    # Windows
    py -3 -m pip install -U spotifython

To install the development version, run:

.. code:: sh

    $ git clone https://github.com/vawvaw/spotifython
    $ cd spotipython
    $ python3 -m pip install -U .


Quick Example
-------------
.. code:: py

    import spotifython
    import asyncio

    async def main():
        scope = spotifython.Scope(playlist_read_private=True, user_library_read=True)
        authentication = spotifython.Authentication(
            client_id="client_id",
            client_secret="client_secret",
            scope=scope
        )
        client = spotifython.Client(authentication=authentication)

        playlists = await client.user_playlists()
        for playlist in playlists:
            print(await playlist.name)

        await client.close()

    asyncio.run(main())

Links
-----
- `Documentation <https://spotifython.readthedocs.io/en/latest/index.html>`_
- `Spotify API Documentation <https://developer.spotify.com/documentation/web-api/>`_
