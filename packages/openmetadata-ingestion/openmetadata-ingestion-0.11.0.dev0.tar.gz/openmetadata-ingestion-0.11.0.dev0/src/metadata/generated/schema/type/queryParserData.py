# generated by datamodel-codegen:
#   filename:  schema/type/queryParserData.json
#   timestamp: 2022-06-14T09:18:33+00:00

from __future__ import annotations

from typing import Any, Dict, List, Optional

from pydantic import BaseModel, Extra, Field


class QueryParserData(BaseModel):
    class Config:
        extra = Extra.forbid

    tables: List[str] = Field(..., description='List of tables used in query')
    tableAliases: Optional[Dict[str, Any]] = Field(
        None, description='Table names mapped with alias used in query'
    )
    columns: Optional[Dict[str, Any]] = Field(
        None, description='Table columns used in query'
    )
    database: str = Field(..., description='Database of the associated with query')
    sql: str = Field(..., description='SQL query')
    serviceName: str = Field(
        ..., description='Name that identifies this database service.'
    )
    date: Optional[str] = Field(None, description='Date of execution of SQL query')
    databaseSchema: Optional[str] = Field(
        None, description='Database schema of the associated with query'
    )
