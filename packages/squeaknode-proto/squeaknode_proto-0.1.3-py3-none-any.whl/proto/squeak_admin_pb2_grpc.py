# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from proto import lnd_pb2 as proto_dot_lnd__pb2
from proto import squeak_admin_pb2 as proto_dot_squeak__admin__pb2


class SqueakAdminStub(object):
    """Interface exported by the server.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.LndGetInfo = channel.unary_unary(
                '/squeaknode.SqueakAdmin/LndGetInfo',
                request_serializer=proto_dot_lnd__pb2.GetInfoRequest.SerializeToString,
                response_deserializer=proto_dot_lnd__pb2.GetInfoResponse.FromString,
                )
        self.LndWalletBalance = channel.unary_unary(
                '/squeaknode.SqueakAdmin/LndWalletBalance',
                request_serializer=proto_dot_lnd__pb2.WalletBalanceRequest.SerializeToString,
                response_deserializer=proto_dot_lnd__pb2.WalletBalanceResponse.FromString,
                )
        self.LndNewAddress = channel.unary_unary(
                '/squeaknode.SqueakAdmin/LndNewAddress',
                request_serializer=proto_dot_lnd__pb2.NewAddressRequest.SerializeToString,
                response_deserializer=proto_dot_lnd__pb2.NewAddressResponse.FromString,
                )
        self.LndListChannels = channel.unary_unary(
                '/squeaknode.SqueakAdmin/LndListChannels',
                request_serializer=proto_dot_lnd__pb2.ListChannelsRequest.SerializeToString,
                response_deserializer=proto_dot_lnd__pb2.ListChannelsResponse.FromString,
                )
        self.LndPendingChannels = channel.unary_unary(
                '/squeaknode.SqueakAdmin/LndPendingChannels',
                request_serializer=proto_dot_lnd__pb2.PendingChannelsRequest.SerializeToString,
                response_deserializer=proto_dot_lnd__pb2.PendingChannelsResponse.FromString,
                )
        self.LndGetTransactions = channel.unary_unary(
                '/squeaknode.SqueakAdmin/LndGetTransactions',
                request_serializer=proto_dot_lnd__pb2.GetTransactionsRequest.SerializeToString,
                response_deserializer=proto_dot_lnd__pb2.TransactionDetails.FromString,
                )
        self.LndListPeers = channel.unary_unary(
                '/squeaknode.SqueakAdmin/LndListPeers',
                request_serializer=proto_dot_lnd__pb2.ListPeersRequest.SerializeToString,
                response_deserializer=proto_dot_lnd__pb2.ListPeersResponse.FromString,
                )
        self.LndConnectPeer = channel.unary_unary(
                '/squeaknode.SqueakAdmin/LndConnectPeer',
                request_serializer=proto_dot_lnd__pb2.ConnectPeerRequest.SerializeToString,
                response_deserializer=proto_dot_lnd__pb2.ConnectPeerResponse.FromString,
                )
        self.LndDisconnectPeer = channel.unary_unary(
                '/squeaknode.SqueakAdmin/LndDisconnectPeer',
                request_serializer=proto_dot_lnd__pb2.DisconnectPeerRequest.SerializeToString,
                response_deserializer=proto_dot_lnd__pb2.DisconnectPeerResponse.FromString,
                )
        self.LndOpenChannelSync = channel.unary_unary(
                '/squeaknode.SqueakAdmin/LndOpenChannelSync',
                request_serializer=proto_dot_lnd__pb2.OpenChannelRequest.SerializeToString,
                response_deserializer=proto_dot_lnd__pb2.ChannelPoint.FromString,
                )
        self.LndCloseChannel = channel.unary_stream(
                '/squeaknode.SqueakAdmin/LndCloseChannel',
                request_serializer=proto_dot_lnd__pb2.CloseChannelRequest.SerializeToString,
                response_deserializer=proto_dot_lnd__pb2.CloseStatusUpdate.FromString,
                )
        self.LndSubscribeChannelEvents = channel.unary_stream(
                '/squeaknode.SqueakAdmin/LndSubscribeChannelEvents',
                request_serializer=proto_dot_lnd__pb2.ChannelEventSubscription.SerializeToString,
                response_deserializer=proto_dot_lnd__pb2.ChannelEventUpdate.FromString,
                )
        self.LndSendCoins = channel.unary_unary(
                '/squeaknode.SqueakAdmin/LndSendCoins',
                request_serializer=proto_dot_lnd__pb2.SendCoinsRequest.SerializeToString,
                response_deserializer=proto_dot_lnd__pb2.SendCoinsResponse.FromString,
                )
        self.CreateSigningProfile = channel.unary_unary(
                '/squeaknode.SqueakAdmin/CreateSigningProfile',
                request_serializer=proto_dot_squeak__admin__pb2.CreateSigningProfileRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.CreateSigningProfileReply.FromString,
                )
        self.CreateContactProfile = channel.unary_unary(
                '/squeaknode.SqueakAdmin/CreateContactProfile',
                request_serializer=proto_dot_squeak__admin__pb2.CreateContactProfileRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.CreateContactProfileReply.FromString,
                )
        self.ImportSigningProfile = channel.unary_unary(
                '/squeaknode.SqueakAdmin/ImportSigningProfile',
                request_serializer=proto_dot_squeak__admin__pb2.ImportSigningProfileRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.ImportSigningProfileReply.FromString,
                )
        self.GetProfiles = channel.unary_unary(
                '/squeaknode.SqueakAdmin/GetProfiles',
                request_serializer=proto_dot_squeak__admin__pb2.GetProfilesRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.GetProfilesReply.FromString,
                )
        self.GetSigningProfiles = channel.unary_unary(
                '/squeaknode.SqueakAdmin/GetSigningProfiles',
                request_serializer=proto_dot_squeak__admin__pb2.GetSigningProfilesRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.GetSigningProfilesReply.FromString,
                )
        self.GetContactProfiles = channel.unary_unary(
                '/squeaknode.SqueakAdmin/GetContactProfiles',
                request_serializer=proto_dot_squeak__admin__pb2.GetContactProfilesRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.GetContactProfilesReply.FromString,
                )
        self.GetSqueakProfile = channel.unary_unary(
                '/squeaknode.SqueakAdmin/GetSqueakProfile',
                request_serializer=proto_dot_squeak__admin__pb2.GetSqueakProfileRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.GetSqueakProfileReply.FromString,
                )
        self.GetSqueakProfileByPubKey = channel.unary_unary(
                '/squeaknode.SqueakAdmin/GetSqueakProfileByPubKey',
                request_serializer=proto_dot_squeak__admin__pb2.GetSqueakProfileByPubKeyRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.GetSqueakProfileByPubKeyReply.FromString,
                )
        self.GetSqueakProfileByName = channel.unary_unary(
                '/squeaknode.SqueakAdmin/GetSqueakProfileByName',
                request_serializer=proto_dot_squeak__admin__pb2.GetSqueakProfileByNameRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.GetSqueakProfileByNameReply.FromString,
                )
        self.SetSqueakProfileFollowing = channel.unary_unary(
                '/squeaknode.SqueakAdmin/SetSqueakProfileFollowing',
                request_serializer=proto_dot_squeak__admin__pb2.SetSqueakProfileFollowingRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.SetSqueakProfileFollowingReply.FromString,
                )
        self.RenameSqueakProfile = channel.unary_unary(
                '/squeaknode.SqueakAdmin/RenameSqueakProfile',
                request_serializer=proto_dot_squeak__admin__pb2.RenameSqueakProfileRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.RenameSqueakProfileReply.FromString,
                )
        self.GetSqueakProfilePrivateKey = channel.unary_unary(
                '/squeaknode.SqueakAdmin/GetSqueakProfilePrivateKey',
                request_serializer=proto_dot_squeak__admin__pb2.GetSqueakProfilePrivateKeyRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.GetSqueakProfilePrivateKeyReply.FromString,
                )
        self.DeleteSqueakProfile = channel.unary_unary(
                '/squeaknode.SqueakAdmin/DeleteSqueakProfile',
                request_serializer=proto_dot_squeak__admin__pb2.DeleteSqueakProfileRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.DeleteSqueakProfileReply.FromString,
                )
        self.SetSqueakProfileImage = channel.unary_unary(
                '/squeaknode.SqueakAdmin/SetSqueakProfileImage',
                request_serializer=proto_dot_squeak__admin__pb2.SetSqueakProfileImageRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.SetSqueakProfileImageReply.FromString,
                )
        self.ClearSqueakProfileImage = channel.unary_unary(
                '/squeaknode.SqueakAdmin/ClearSqueakProfileImage',
                request_serializer=proto_dot_squeak__admin__pb2.ClearSqueakProfileImageRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.ClearSqueakProfileImageReply.FromString,
                )
        self.MakeSqueak = channel.unary_unary(
                '/squeaknode.SqueakAdmin/MakeSqueak',
                request_serializer=proto_dot_squeak__admin__pb2.MakeSqueakRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.MakeSqueakReply.FromString,
                )
        self.MakeResqueak = channel.unary_unary(
                '/squeaknode.SqueakAdmin/MakeResqueak',
                request_serializer=proto_dot_squeak__admin__pb2.MakeResqueakRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.MakeResqueakReply.FromString,
                )
        self.GetSqueakDisplay = channel.unary_unary(
                '/squeaknode.SqueakAdmin/GetSqueakDisplay',
                request_serializer=proto_dot_squeak__admin__pb2.GetSqueakDisplayRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.GetSqueakDisplayReply.FromString,
                )
        self.GetTimelineSqueakDisplays = channel.unary_unary(
                '/squeaknode.SqueakAdmin/GetTimelineSqueakDisplays',
                request_serializer=proto_dot_squeak__admin__pb2.GetTimelineSqueakDisplaysRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.GetTimelineSqueakDisplaysReply.FromString,
                )
        self.GetPubKeySqueakDisplays = channel.unary_unary(
                '/squeaknode.SqueakAdmin/GetPubKeySqueakDisplays',
                request_serializer=proto_dot_squeak__admin__pb2.GetPubKeySqueakDisplaysRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.GetPubKeySqueakDisplaysReply.FromString,
                )
        self.GetSearchSqueakDisplays = channel.unary_unary(
                '/squeaknode.SqueakAdmin/GetSearchSqueakDisplays',
                request_serializer=proto_dot_squeak__admin__pb2.GetSearchSqueakDisplaysRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.GetSearchSqueakDisplaysReply.FromString,
                )
        self.GetAncestorSqueakDisplays = channel.unary_unary(
                '/squeaknode.SqueakAdmin/GetAncestorSqueakDisplays',
                request_serializer=proto_dot_squeak__admin__pb2.GetAncestorSqueakDisplaysRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.GetAncestorSqueakDisplaysReply.FromString,
                )
        self.GetReplySqueakDisplays = channel.unary_unary(
                '/squeaknode.SqueakAdmin/GetReplySqueakDisplays',
                request_serializer=proto_dot_squeak__admin__pb2.GetReplySqueakDisplaysRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.GetReplySqueakDisplaysReply.FromString,
                )
        self.DeleteSqueak = channel.unary_unary(
                '/squeaknode.SqueakAdmin/DeleteSqueak',
                request_serializer=proto_dot_squeak__admin__pb2.DeleteSqueakRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.DeleteSqueakReply.FromString,
                )
        self.CreatePeer = channel.unary_unary(
                '/squeaknode.SqueakAdmin/CreatePeer',
                request_serializer=proto_dot_squeak__admin__pb2.CreatePeerRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.CreatePeerReply.FromString,
                )
        self.GetPeer = channel.unary_unary(
                '/squeaknode.SqueakAdmin/GetPeer',
                request_serializer=proto_dot_squeak__admin__pb2.GetPeerRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.GetPeerReply.FromString,
                )
        self.GetPeerByAddress = channel.unary_unary(
                '/squeaknode.SqueakAdmin/GetPeerByAddress',
                request_serializer=proto_dot_squeak__admin__pb2.GetPeerByAddressRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.GetPeerByAddressReply.FromString,
                )
        self.GetPeers = channel.unary_unary(
                '/squeaknode.SqueakAdmin/GetPeers',
                request_serializer=proto_dot_squeak__admin__pb2.GetPeersRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.GetPeersReply.FromString,
                )
        self.SetPeerAutoconnect = channel.unary_unary(
                '/squeaknode.SqueakAdmin/SetPeerAutoconnect',
                request_serializer=proto_dot_squeak__admin__pb2.SetPeerAutoconnectRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.SetPeerAutoconnectReply.FromString,
                )
        self.SetPeerShareForFree = channel.unary_unary(
                '/squeaknode.SqueakAdmin/SetPeerShareForFree',
                request_serializer=proto_dot_squeak__admin__pb2.SetPeerShareForFreeRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.SetPeerShareForFreeReply.FromString,
                )
        self.RenamePeer = channel.unary_unary(
                '/squeaknode.SqueakAdmin/RenamePeer',
                request_serializer=proto_dot_squeak__admin__pb2.RenamePeerRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.RenamePeerReply.FromString,
                )
        self.DeletePeer = channel.unary_unary(
                '/squeaknode.SqueakAdmin/DeletePeer',
                request_serializer=proto_dot_squeak__admin__pb2.DeletePeerRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.DeletePeerReply.FromString,
                )
        self.GetBuyOffers = channel.unary_unary(
                '/squeaknode.SqueakAdmin/GetBuyOffers',
                request_serializer=proto_dot_squeak__admin__pb2.GetBuyOffersRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.GetBuyOffersReply.FromString,
                )
        self.GetBuyOffer = channel.unary_unary(
                '/squeaknode.SqueakAdmin/GetBuyOffer',
                request_serializer=proto_dot_squeak__admin__pb2.GetBuyOfferRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.GetBuyOfferReply.FromString,
                )
        self.DownloadSqueaks = channel.unary_unary(
                '/squeaknode.SqueakAdmin/DownloadSqueaks',
                request_serializer=proto_dot_squeak__admin__pb2.DownloadSqueaksRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.DownloadSqueaksReply.FromString,
                )
        self.DownloadSqueak = channel.unary_unary(
                '/squeaknode.SqueakAdmin/DownloadSqueak',
                request_serializer=proto_dot_squeak__admin__pb2.DownloadSqueakRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.DownloadSqueakReply.FromString,
                )
        self.DownloadSqueakSecretKey = channel.unary_unary(
                '/squeaknode.SqueakAdmin/DownloadSqueakSecretKey',
                request_serializer=proto_dot_squeak__admin__pb2.DownloadSqueakSecretKeyRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.DownloadSqueakSecretKeyReply.FromString,
                )
        self.DownloadOffers = channel.unary_unary(
                '/squeaknode.SqueakAdmin/DownloadOffers',
                request_serializer=proto_dot_squeak__admin__pb2.DownloadOffersRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.DownloadOffersReply.FromString,
                )
        self.DownloadReplies = channel.unary_unary(
                '/squeaknode.SqueakAdmin/DownloadReplies',
                request_serializer=proto_dot_squeak__admin__pb2.DownloadRepliesRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.DownloadRepliesReply.FromString,
                )
        self.DownloadPubKeySqueaks = channel.unary_unary(
                '/squeaknode.SqueakAdmin/DownloadPubKeySqueaks',
                request_serializer=proto_dot_squeak__admin__pb2.DownloadPubKeySqueaksRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.DownloadPubKeySqueaksReply.FromString,
                )
        self.PayOffer = channel.unary_unary(
                '/squeaknode.SqueakAdmin/PayOffer',
                request_serializer=proto_dot_squeak__admin__pb2.PayOfferRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.PayOfferReply.FromString,
                )
        self.DecryptSqueak = channel.unary_unary(
                '/squeaknode.SqueakAdmin/DecryptSqueak',
                request_serializer=proto_dot_squeak__admin__pb2.DecryptSqueakRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.DecryptSqueakReply.FromString,
                )
        self.GetSentPayments = channel.unary_unary(
                '/squeaknode.SqueakAdmin/GetSentPayments',
                request_serializer=proto_dot_squeak__admin__pb2.GetSentPaymentsRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.GetSentPaymentsReply.FromString,
                )
        self.GetSentPaymentsForSqueak = channel.unary_unary(
                '/squeaknode.SqueakAdmin/GetSentPaymentsForSqueak',
                request_serializer=proto_dot_squeak__admin__pb2.GetSentPaymentsForSqueakRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.GetSentPaymentsForSqueakReply.FromString,
                )
        self.GetSentPaymentsForPubkey = channel.unary_unary(
                '/squeaknode.SqueakAdmin/GetSentPaymentsForPubkey',
                request_serializer=proto_dot_squeak__admin__pb2.GetSentPaymentsForPubkeyRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.GetSentPaymentsForPubkeyReply.FromString,
                )
        self.GetSentPaymentsForPeer = channel.unary_unary(
                '/squeaknode.SqueakAdmin/GetSentPaymentsForPeer',
                request_serializer=proto_dot_squeak__admin__pb2.GetSentPaymentsForPeerRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.GetSentPaymentsForPeerReply.FromString,
                )
        self.GetSentPayment = channel.unary_unary(
                '/squeaknode.SqueakAdmin/GetSentPayment',
                request_serializer=proto_dot_squeak__admin__pb2.GetSentPaymentRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.GetSentPaymentReply.FromString,
                )
        self.GetSentOffers = channel.unary_unary(
                '/squeaknode.SqueakAdmin/GetSentOffers',
                request_serializer=proto_dot_squeak__admin__pb2.GetSentOffersRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.GetSentOffersReply.FromString,
                )
        self.GetReceivedPayments = channel.unary_unary(
                '/squeaknode.SqueakAdmin/GetReceivedPayments',
                request_serializer=proto_dot_squeak__admin__pb2.GetReceivedPaymentsRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.GetReceivedPaymentsReply.FromString,
                )
        self.GetReceivedPaymentsForSqueak = channel.unary_unary(
                '/squeaknode.SqueakAdmin/GetReceivedPaymentsForSqueak',
                request_serializer=proto_dot_squeak__admin__pb2.GetReceivedPaymentsForSqueakRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.GetReceivedPaymentsForSqueakReply.FromString,
                )
        self.GetReceivedPaymentsForPubkey = channel.unary_unary(
                '/squeaknode.SqueakAdmin/GetReceivedPaymentsForPubkey',
                request_serializer=proto_dot_squeak__admin__pb2.GetReceivedPaymentsForPubkeyRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.GetReceivedPaymentsForPubkeyReply.FromString,
                )
        self.GetReceivedPaymentsForPeer = channel.unary_unary(
                '/squeaknode.SqueakAdmin/GetReceivedPaymentsForPeer',
                request_serializer=proto_dot_squeak__admin__pb2.GetReceivedPaymentsForPeerRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.GetReceivedPaymentsForPeerReply.FromString,
                )
        self.SubscribeReceivedPayments = channel.unary_stream(
                '/squeaknode.SqueakAdmin/SubscribeReceivedPayments',
                request_serializer=proto_dot_squeak__admin__pb2.SubscribeReceivedPaymentsRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.ReceivedPayment.FromString,
                )
        self.GetNetwork = channel.unary_unary(
                '/squeaknode.SqueakAdmin/GetNetwork',
                request_serializer=proto_dot_squeak__admin__pb2.GetNetworkRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.GetNetworkReply.FromString,
                )
        self.GetPaymentSummary = channel.unary_unary(
                '/squeaknode.SqueakAdmin/GetPaymentSummary',
                request_serializer=proto_dot_squeak__admin__pb2.GetPaymentSummaryRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.GetPaymentSummaryReply.FromString,
                )
        self.GetPaymentSummaryForSqueak = channel.unary_unary(
                '/squeaknode.SqueakAdmin/GetPaymentSummaryForSqueak',
                request_serializer=proto_dot_squeak__admin__pb2.GetPaymentSummaryForSqueakRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.GetPaymentSummaryForSqueakReply.FromString,
                )
        self.GetPaymentSummaryForPubkey = channel.unary_unary(
                '/squeaknode.SqueakAdmin/GetPaymentSummaryForPubkey',
                request_serializer=proto_dot_squeak__admin__pb2.GetPaymentSummaryForPubkeyRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.GetPaymentSummaryForPubkeyReply.FromString,
                )
        self.GetPaymentSummaryForPeer = channel.unary_unary(
                '/squeaknode.SqueakAdmin/GetPaymentSummaryForPeer',
                request_serializer=proto_dot_squeak__admin__pb2.GetPaymentSummaryForPeerRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.GetPaymentSummaryForPeerReply.FromString,
                )
        self.ReprocessReceivedPayments = channel.unary_unary(
                '/squeaknode.SqueakAdmin/ReprocessReceivedPayments',
                request_serializer=proto_dot_squeak__admin__pb2.ReprocessReceivedPaymentsRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.ReprocessReceivedPaymentsReply.FromString,
                )
        self.LikeSqueak = channel.unary_unary(
                '/squeaknode.SqueakAdmin/LikeSqueak',
                request_serializer=proto_dot_squeak__admin__pb2.LikeSqueakRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.LikeSqueakReply.FromString,
                )
        self.UnlikeSqueak = channel.unary_unary(
                '/squeaknode.SqueakAdmin/UnlikeSqueak',
                request_serializer=proto_dot_squeak__admin__pb2.UnlikeSqueakRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.UnlikeSqueakReply.FromString,
                )
        self.GetLikedSqueakDisplays = channel.unary_unary(
                '/squeaknode.SqueakAdmin/GetLikedSqueakDisplays',
                request_serializer=proto_dot_squeak__admin__pb2.GetLikedSqueakDisplaysRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.GetLikedSqueakDisplaysReply.FromString,
                )
        self.ConnectPeer = channel.unary_unary(
                '/squeaknode.SqueakAdmin/ConnectPeer',
                request_serializer=proto_dot_squeak__admin__pb2.ConnectPeerRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.ConnectPeerReply.FromString,
                )
        self.GetConnectedPeers = channel.unary_unary(
                '/squeaknode.SqueakAdmin/GetConnectedPeers',
                request_serializer=proto_dot_squeak__admin__pb2.GetConnectedPeersRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.GetConnectedPeersReply.FromString,
                )
        self.GetConnectedPeer = channel.unary_unary(
                '/squeaknode.SqueakAdmin/GetConnectedPeer',
                request_serializer=proto_dot_squeak__admin__pb2.GetConnectedPeerRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.GetConnectedPeerReply.FromString,
                )
        self.DisconnectPeer = channel.unary_unary(
                '/squeaknode.SqueakAdmin/DisconnectPeer',
                request_serializer=proto_dot_squeak__admin__pb2.DisconnectPeerRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.DisconnectPeerReply.FromString,
                )
        self.SubscribeConnectedPeers = channel.unary_stream(
                '/squeaknode.SqueakAdmin/SubscribeConnectedPeers',
                request_serializer=proto_dot_squeak__admin__pb2.SubscribeConnectedPeersRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.GetConnectedPeersReply.FromString,
                )
        self.SubscribeConnectedPeer = channel.unary_stream(
                '/squeaknode.SqueakAdmin/SubscribeConnectedPeer',
                request_serializer=proto_dot_squeak__admin__pb2.SubscribeConnectedPeerRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.GetConnectedPeerReply.FromString,
                )
        self.SubscribeBuyOffers = channel.unary_stream(
                '/squeaknode.SqueakAdmin/SubscribeBuyOffers',
                request_serializer=proto_dot_squeak__admin__pb2.SubscribeBuyOffersRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.GetBuyOfferReply.FromString,
                )
        self.SubscribeSqueakDisplay = channel.unary_stream(
                '/squeaknode.SqueakAdmin/SubscribeSqueakDisplay',
                request_serializer=proto_dot_squeak__admin__pb2.SubscribeSqueakDisplayRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.GetSqueakDisplayReply.FromString,
                )
        self.SubscribeReplySqueakDisplays = channel.unary_stream(
                '/squeaknode.SqueakAdmin/SubscribeReplySqueakDisplays',
                request_serializer=proto_dot_squeak__admin__pb2.SubscribeReplySqueakDisplaysRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.GetSqueakDisplayReply.FromString,
                )
        self.SubscribePubKeySqueakDisplays = channel.unary_stream(
                '/squeaknode.SqueakAdmin/SubscribePubKeySqueakDisplays',
                request_serializer=proto_dot_squeak__admin__pb2.SubscribePubKeySqueakDisplaysRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.GetSqueakDisplayReply.FromString,
                )
        self.SubscribeAncestorSqueakDisplays = channel.unary_stream(
                '/squeaknode.SqueakAdmin/SubscribeAncestorSqueakDisplays',
                request_serializer=proto_dot_squeak__admin__pb2.SubscribeAncestorSqueakDisplaysRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.GetAncestorSqueakDisplaysReply.FromString,
                )
        self.SubscribeSqueakDisplays = channel.unary_stream(
                '/squeaknode.SqueakAdmin/SubscribeSqueakDisplays',
                request_serializer=proto_dot_squeak__admin__pb2.SubscribeSqueakDisplaysRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.GetSqueakDisplayReply.FromString,
                )
        self.SubscribeTimelineSqueakDisplays = channel.unary_stream(
                '/squeaknode.SqueakAdmin/SubscribeTimelineSqueakDisplays',
                request_serializer=proto_dot_squeak__admin__pb2.SubscribeTimelineSqueakDisplaysRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.GetSqueakDisplayReply.FromString,
                )
        self.GetExternalAddress = channel.unary_unary(
                '/squeaknode.SqueakAdmin/GetExternalAddress',
                request_serializer=proto_dot_squeak__admin__pb2.GetExternalAddressRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.GetExternalAddressReply.FromString,
                )
        self.GetDefaultPeerPort = channel.unary_unary(
                '/squeaknode.SqueakAdmin/GetDefaultPeerPort',
                request_serializer=proto_dot_squeak__admin__pb2.GetDefaultPeerPortRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.GetDefaultPeerPortReply.FromString,
                )
        self.SetSellPrice = channel.unary_unary(
                '/squeaknode.SqueakAdmin/SetSellPrice',
                request_serializer=proto_dot_squeak__admin__pb2.SetSellPriceRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.SetSellPriceReply.FromString,
                )
        self.ClearSellPrice = channel.unary_unary(
                '/squeaknode.SqueakAdmin/ClearSellPrice',
                request_serializer=proto_dot_squeak__admin__pb2.ClearSellPriceRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.ClearSellPriceReply.FromString,
                )
        self.GetSellPrice = channel.unary_unary(
                '/squeaknode.SqueakAdmin/GetSellPrice',
                request_serializer=proto_dot_squeak__admin__pb2.GetSellPriceRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.GetSellPriceReply.FromString,
                )
        self.AddTwitterAccount = channel.unary_unary(
                '/squeaknode.SqueakAdmin/AddTwitterAccount',
                request_serializer=proto_dot_squeak__admin__pb2.AddTwitterAccountRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.AddTwitterAccountReply.FromString,
                )
        self.GetTwitterAccounts = channel.unary_unary(
                '/squeaknode.SqueakAdmin/GetTwitterAccounts',
                request_serializer=proto_dot_squeak__admin__pb2.GetTwitterAccountsRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.GetTwitterAccountsReply.FromString,
                )
        self.DeleteTwitterAccount = channel.unary_unary(
                '/squeaknode.SqueakAdmin/DeleteTwitterAccount',
                request_serializer=proto_dot_squeak__admin__pb2.DeleteTwitterAccountRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.DeleteTwitterAccountReply.FromString,
                )


class SqueakAdminServicer(object):
    """Interface exported by the server.
    """

    def LndGetInfo(self, request, context):
        """* sqkadmin: `lndgetinfo`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LndWalletBalance(self, request, context):
        """* sqkadmin: `lndwalletbalance`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LndNewAddress(self, request, context):
        """* sqkadmin: `lndnewaddress`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LndListChannels(self, request, context):
        """* sqkadmin: `lndlistchannels`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LndPendingChannels(self, request, context):
        """* sqkadmin: `lndpendingchannels`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LndGetTransactions(self, request, context):
        """* sqkadmin: `lndgettransactions`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LndListPeers(self, request, context):
        """* sqkadmin: `lndlistpeers`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LndConnectPeer(self, request, context):
        """* sqkadmin: `lndconnectpeer`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LndDisconnectPeer(self, request, context):
        """* sqkadmin: `lnddisconnectpeer`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LndOpenChannelSync(self, request, context):
        """* sqkadmin: `lndopenchannelsync`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LndCloseChannel(self, request, context):
        """* sqkadmin: `lndclosechannel`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LndSubscribeChannelEvents(self, request, context):
        """* sqkadmin: `lndsubscribechannelevents`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LndSendCoins(self, request, context):
        """* sqkadmin: `lndsendcoins`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateSigningProfile(self, request, context):
        """* sqkadmin: `createsigningprofile`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateContactProfile(self, request, context):
        """* sqkadmin: `createcontactprofile`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ImportSigningProfile(self, request, context):
        """* sqkadmin: `importsigningprofile`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProfiles(self, request, context):
        """* sqkadmin: `getprofiles`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSigningProfiles(self, request, context):
        """* sqkadmin: `getsigningprofiles`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetContactProfiles(self, request, context):
        """* sqkadmin: `getcontactprofiles`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSqueakProfile(self, request, context):
        """* sqkadmin: `getsqueakprofile`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSqueakProfileByPubKey(self, request, context):
        """* sqkadmin: `getsqueakprofilebyaddress`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSqueakProfileByName(self, request, context):
        """* sqkadmin: `getsqueakprofilebyname`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetSqueakProfileFollowing(self, request, context):
        """* sqkadmin: `setsqueakprofilefollowing`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RenameSqueakProfile(self, request, context):
        """* sqkadmin: `renamesqueakprofile`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSqueakProfilePrivateKey(self, request, context):
        """* sqkadmin: `getsqueakprofileprivatekey`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteSqueakProfile(self, request, context):
        """* sqkadmin: `deletesqueakprofile`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetSqueakProfileImage(self, request, context):
        """* sqkadmin: `setsqueakprofileimage`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ClearSqueakProfileImage(self, request, context):
        """* sqkadmin: `clearsqueakprofileimage`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MakeSqueak(self, request, context):
        """* sqkadmin: `makesqueak`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MakeResqueak(self, request, context):
        """* sqkadmin: `makeresqueak`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSqueakDisplay(self, request, context):
        """* sqkadmin: `getsqueakdisplay`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTimelineSqueakDisplays(self, request, context):
        """* sqkadmin: `gettimelinesqueakdisplays`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPubKeySqueakDisplays(self, request, context):
        """* sqkadmin: `getaddresssqueakdisplays`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSearchSqueakDisplays(self, request, context):
        """* sqkadmin: `getsearchsqueakdisplays`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAncestorSqueakDisplays(self, request, context):
        """* sqkadmin: `getancestorsqueakdisplays`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetReplySqueakDisplays(self, request, context):
        """* sqkadmin: `getreplysqueakdisplays`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteSqueak(self, request, context):
        """* sqkadmin: `deletesqueak`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreatePeer(self, request, context):
        """* sqkadmin: `addpeer`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPeer(self, request, context):
        """* sqkadmin: `getpeer`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPeerByAddress(self, request, context):
        """* sqkadmin: `getpeerbyaddress`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPeers(self, request, context):
        """* sqkadmin: `getpeers`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetPeerAutoconnect(self, request, context):
        """* sqkadmin: `setpeerautoconnect`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetPeerShareForFree(self, request, context):
        """* sqkadmin: `setpeershareforfree`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RenamePeer(self, request, context):
        """* sqkadmin: `renamepeer`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeletePeer(self, request, context):
        """* sqkadmin: `deletepeer`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBuyOffers(self, request, context):
        """* sqkadmin: `getbuyoffers`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBuyOffer(self, request, context):
        """* sqkadmin: `getbuyoffer`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DownloadSqueaks(self, request, context):
        """* sqkadmin: `downloadsqueaks`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DownloadSqueak(self, request, context):
        """* sqkadmin: `downloadsqueak`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DownloadSqueakSecretKey(self, request, context):
        """* sqkadmin: `downloadsqueaksecretkey`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DownloadOffers(self, request, context):
        """* sqkadmin: `downloadoffers`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DownloadReplies(self, request, context):
        """* sqkadmin: `downloadreplies`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DownloadPubKeySqueaks(self, request, context):
        """* sqkadmin: `downloadaddresssqueaks`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PayOffer(self, request, context):
        """* sqkadmin: `payoffer`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DecryptSqueak(self, request, context):
        """* sqkadmin: `decryptsqueak`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSentPayments(self, request, context):
        """* sqkadmin: `getsentpayments`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSentPaymentsForSqueak(self, request, context):
        """* sqkadmin: `getsentpaymentsforsqueak`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSentPaymentsForPubkey(self, request, context):
        """* sqkadmin: `getsentpaymentsforpubkey`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSentPaymentsForPeer(self, request, context):
        """* sqkadmin: `getsentpaymentsforpeer`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSentPayment(self, request, context):
        """* sqkadmin: `getsentpayment`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSentOffers(self, request, context):
        """* sqkadmin: `getsentoffers`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetReceivedPayments(self, request, context):
        """* sqkadmin: `getreceivedpayments`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetReceivedPaymentsForSqueak(self, request, context):
        """* sqkadmin: `getreceivedpaymentsforsqueak`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetReceivedPaymentsForPubkey(self, request, context):
        """* sqkadmin: `getreceivedpaymentsforpubkey`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetReceivedPaymentsForPeer(self, request, context):
        """* sqkadmin: `getreceivedpaymentsforpeer`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeReceivedPayments(self, request, context):
        """* sqkadmin: `subscribereceivedpayments`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNetwork(self, request, context):
        """* sqkadmin: `getnetwork`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPaymentSummary(self, request, context):
        """* sqkadmin: `getpaymentsummary`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPaymentSummaryForSqueak(self, request, context):
        """* sqkadmin: `getpaymentsummaryforsqueak`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPaymentSummaryForPubkey(self, request, context):
        """* sqkadmin: `getpaymentsummaryforpubkey`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPaymentSummaryForPeer(self, request, context):
        """* sqkadmin: `getpaymentsummaryforpeer`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReprocessReceivedPayments(self, request, context):
        """* sqkadmin: `reprocessreceivedpayments`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LikeSqueak(self, request, context):
        """* sqkadmin: `likesqueak`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnlikeSqueak(self, request, context):
        """* sqkadmin: `unlikesqueak`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLikedSqueakDisplays(self, request, context):
        """* sqkadmin: `getlikedsqueakdisplays`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConnectPeer(self, request, context):
        """* sqkadmin: `connectpeer`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetConnectedPeers(self, request, context):
        """* sqkadmin: `getconnectedpeers`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetConnectedPeer(self, request, context):
        """* sqkadmin: `getconnectedpeer`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DisconnectPeer(self, request, context):
        """* sqkadmin: `disconnectpeer`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeConnectedPeers(self, request, context):
        """* sqkadmin: `subscribeconnectedpeers`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeConnectedPeer(self, request, context):
        """* sqkadmin: `subscribeconnectedpeer`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeBuyOffers(self, request, context):
        """* sqkadmin: `subscribeconnectedpeer`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeSqueakDisplay(self, request, context):
        """* sqkadmin: `subscribesqueakdisplay`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeReplySqueakDisplays(self, request, context):
        """* sqkadmin: `subscribereplysqueakdisplays`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribePubKeySqueakDisplays(self, request, context):
        """* sqkadmin: `subscribeaddresssqueakdisplays`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeAncestorSqueakDisplays(self, request, context):
        """* sqkadmin: `subscribeancestorsqueakdisplays`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeSqueakDisplays(self, request, context):
        """* sqkadmin: `subscribesqueakdisplays`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeTimelineSqueakDisplays(self, request, context):
        """* sqkadmin: `subscribetimelinesqueakdisplays`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetExternalAddress(self, request, context):
        """* sqkadmin: `getexternaladdress`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDefaultPeerPort(self, request, context):
        """* sqkadmin: `getdefaultpeerport`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetSellPrice(self, request, context):
        """* sqkadmin: `setsellprice`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ClearSellPrice(self, request, context):
        """* sqkadmin: `clearsellprice`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSellPrice(self, request, context):
        """* sqkadmin: `getsellprice`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddTwitterAccount(self, request, context):
        """* sqkadmin: `addtwitteraccount`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTwitterAccounts(self, request, context):
        """* sqkadmin: `gettwitteraccounts`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteTwitterAccount(self, request, context):
        """* sqkadmin: `deletetwitteraccount`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SqueakAdminServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'LndGetInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.LndGetInfo,
                    request_deserializer=proto_dot_lnd__pb2.GetInfoRequest.FromString,
                    response_serializer=proto_dot_lnd__pb2.GetInfoResponse.SerializeToString,
            ),
            'LndWalletBalance': grpc.unary_unary_rpc_method_handler(
                    servicer.LndWalletBalance,
                    request_deserializer=proto_dot_lnd__pb2.WalletBalanceRequest.FromString,
                    response_serializer=proto_dot_lnd__pb2.WalletBalanceResponse.SerializeToString,
            ),
            'LndNewAddress': grpc.unary_unary_rpc_method_handler(
                    servicer.LndNewAddress,
                    request_deserializer=proto_dot_lnd__pb2.NewAddressRequest.FromString,
                    response_serializer=proto_dot_lnd__pb2.NewAddressResponse.SerializeToString,
            ),
            'LndListChannels': grpc.unary_unary_rpc_method_handler(
                    servicer.LndListChannels,
                    request_deserializer=proto_dot_lnd__pb2.ListChannelsRequest.FromString,
                    response_serializer=proto_dot_lnd__pb2.ListChannelsResponse.SerializeToString,
            ),
            'LndPendingChannels': grpc.unary_unary_rpc_method_handler(
                    servicer.LndPendingChannels,
                    request_deserializer=proto_dot_lnd__pb2.PendingChannelsRequest.FromString,
                    response_serializer=proto_dot_lnd__pb2.PendingChannelsResponse.SerializeToString,
            ),
            'LndGetTransactions': grpc.unary_unary_rpc_method_handler(
                    servicer.LndGetTransactions,
                    request_deserializer=proto_dot_lnd__pb2.GetTransactionsRequest.FromString,
                    response_serializer=proto_dot_lnd__pb2.TransactionDetails.SerializeToString,
            ),
            'LndListPeers': grpc.unary_unary_rpc_method_handler(
                    servicer.LndListPeers,
                    request_deserializer=proto_dot_lnd__pb2.ListPeersRequest.FromString,
                    response_serializer=proto_dot_lnd__pb2.ListPeersResponse.SerializeToString,
            ),
            'LndConnectPeer': grpc.unary_unary_rpc_method_handler(
                    servicer.LndConnectPeer,
                    request_deserializer=proto_dot_lnd__pb2.ConnectPeerRequest.FromString,
                    response_serializer=proto_dot_lnd__pb2.ConnectPeerResponse.SerializeToString,
            ),
            'LndDisconnectPeer': grpc.unary_unary_rpc_method_handler(
                    servicer.LndDisconnectPeer,
                    request_deserializer=proto_dot_lnd__pb2.DisconnectPeerRequest.FromString,
                    response_serializer=proto_dot_lnd__pb2.DisconnectPeerResponse.SerializeToString,
            ),
            'LndOpenChannelSync': grpc.unary_unary_rpc_method_handler(
                    servicer.LndOpenChannelSync,
                    request_deserializer=proto_dot_lnd__pb2.OpenChannelRequest.FromString,
                    response_serializer=proto_dot_lnd__pb2.ChannelPoint.SerializeToString,
            ),
            'LndCloseChannel': grpc.unary_stream_rpc_method_handler(
                    servicer.LndCloseChannel,
                    request_deserializer=proto_dot_lnd__pb2.CloseChannelRequest.FromString,
                    response_serializer=proto_dot_lnd__pb2.CloseStatusUpdate.SerializeToString,
            ),
            'LndSubscribeChannelEvents': grpc.unary_stream_rpc_method_handler(
                    servicer.LndSubscribeChannelEvents,
                    request_deserializer=proto_dot_lnd__pb2.ChannelEventSubscription.FromString,
                    response_serializer=proto_dot_lnd__pb2.ChannelEventUpdate.SerializeToString,
            ),
            'LndSendCoins': grpc.unary_unary_rpc_method_handler(
                    servicer.LndSendCoins,
                    request_deserializer=proto_dot_lnd__pb2.SendCoinsRequest.FromString,
                    response_serializer=proto_dot_lnd__pb2.SendCoinsResponse.SerializeToString,
            ),
            'CreateSigningProfile': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateSigningProfile,
                    request_deserializer=proto_dot_squeak__admin__pb2.CreateSigningProfileRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.CreateSigningProfileReply.SerializeToString,
            ),
            'CreateContactProfile': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateContactProfile,
                    request_deserializer=proto_dot_squeak__admin__pb2.CreateContactProfileRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.CreateContactProfileReply.SerializeToString,
            ),
            'ImportSigningProfile': grpc.unary_unary_rpc_method_handler(
                    servicer.ImportSigningProfile,
                    request_deserializer=proto_dot_squeak__admin__pb2.ImportSigningProfileRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.ImportSigningProfileReply.SerializeToString,
            ),
            'GetProfiles': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProfiles,
                    request_deserializer=proto_dot_squeak__admin__pb2.GetProfilesRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.GetProfilesReply.SerializeToString,
            ),
            'GetSigningProfiles': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSigningProfiles,
                    request_deserializer=proto_dot_squeak__admin__pb2.GetSigningProfilesRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.GetSigningProfilesReply.SerializeToString,
            ),
            'GetContactProfiles': grpc.unary_unary_rpc_method_handler(
                    servicer.GetContactProfiles,
                    request_deserializer=proto_dot_squeak__admin__pb2.GetContactProfilesRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.GetContactProfilesReply.SerializeToString,
            ),
            'GetSqueakProfile': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSqueakProfile,
                    request_deserializer=proto_dot_squeak__admin__pb2.GetSqueakProfileRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.GetSqueakProfileReply.SerializeToString,
            ),
            'GetSqueakProfileByPubKey': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSqueakProfileByPubKey,
                    request_deserializer=proto_dot_squeak__admin__pb2.GetSqueakProfileByPubKeyRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.GetSqueakProfileByPubKeyReply.SerializeToString,
            ),
            'GetSqueakProfileByName': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSqueakProfileByName,
                    request_deserializer=proto_dot_squeak__admin__pb2.GetSqueakProfileByNameRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.GetSqueakProfileByNameReply.SerializeToString,
            ),
            'SetSqueakProfileFollowing': grpc.unary_unary_rpc_method_handler(
                    servicer.SetSqueakProfileFollowing,
                    request_deserializer=proto_dot_squeak__admin__pb2.SetSqueakProfileFollowingRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.SetSqueakProfileFollowingReply.SerializeToString,
            ),
            'RenameSqueakProfile': grpc.unary_unary_rpc_method_handler(
                    servicer.RenameSqueakProfile,
                    request_deserializer=proto_dot_squeak__admin__pb2.RenameSqueakProfileRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.RenameSqueakProfileReply.SerializeToString,
            ),
            'GetSqueakProfilePrivateKey': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSqueakProfilePrivateKey,
                    request_deserializer=proto_dot_squeak__admin__pb2.GetSqueakProfilePrivateKeyRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.GetSqueakProfilePrivateKeyReply.SerializeToString,
            ),
            'DeleteSqueakProfile': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteSqueakProfile,
                    request_deserializer=proto_dot_squeak__admin__pb2.DeleteSqueakProfileRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.DeleteSqueakProfileReply.SerializeToString,
            ),
            'SetSqueakProfileImage': grpc.unary_unary_rpc_method_handler(
                    servicer.SetSqueakProfileImage,
                    request_deserializer=proto_dot_squeak__admin__pb2.SetSqueakProfileImageRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.SetSqueakProfileImageReply.SerializeToString,
            ),
            'ClearSqueakProfileImage': grpc.unary_unary_rpc_method_handler(
                    servicer.ClearSqueakProfileImage,
                    request_deserializer=proto_dot_squeak__admin__pb2.ClearSqueakProfileImageRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.ClearSqueakProfileImageReply.SerializeToString,
            ),
            'MakeSqueak': grpc.unary_unary_rpc_method_handler(
                    servicer.MakeSqueak,
                    request_deserializer=proto_dot_squeak__admin__pb2.MakeSqueakRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.MakeSqueakReply.SerializeToString,
            ),
            'MakeResqueak': grpc.unary_unary_rpc_method_handler(
                    servicer.MakeResqueak,
                    request_deserializer=proto_dot_squeak__admin__pb2.MakeResqueakRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.MakeResqueakReply.SerializeToString,
            ),
            'GetSqueakDisplay': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSqueakDisplay,
                    request_deserializer=proto_dot_squeak__admin__pb2.GetSqueakDisplayRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.GetSqueakDisplayReply.SerializeToString,
            ),
            'GetTimelineSqueakDisplays': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTimelineSqueakDisplays,
                    request_deserializer=proto_dot_squeak__admin__pb2.GetTimelineSqueakDisplaysRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.GetTimelineSqueakDisplaysReply.SerializeToString,
            ),
            'GetPubKeySqueakDisplays': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPubKeySqueakDisplays,
                    request_deserializer=proto_dot_squeak__admin__pb2.GetPubKeySqueakDisplaysRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.GetPubKeySqueakDisplaysReply.SerializeToString,
            ),
            'GetSearchSqueakDisplays': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSearchSqueakDisplays,
                    request_deserializer=proto_dot_squeak__admin__pb2.GetSearchSqueakDisplaysRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.GetSearchSqueakDisplaysReply.SerializeToString,
            ),
            'GetAncestorSqueakDisplays': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAncestorSqueakDisplays,
                    request_deserializer=proto_dot_squeak__admin__pb2.GetAncestorSqueakDisplaysRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.GetAncestorSqueakDisplaysReply.SerializeToString,
            ),
            'GetReplySqueakDisplays': grpc.unary_unary_rpc_method_handler(
                    servicer.GetReplySqueakDisplays,
                    request_deserializer=proto_dot_squeak__admin__pb2.GetReplySqueakDisplaysRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.GetReplySqueakDisplaysReply.SerializeToString,
            ),
            'DeleteSqueak': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteSqueak,
                    request_deserializer=proto_dot_squeak__admin__pb2.DeleteSqueakRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.DeleteSqueakReply.SerializeToString,
            ),
            'CreatePeer': grpc.unary_unary_rpc_method_handler(
                    servicer.CreatePeer,
                    request_deserializer=proto_dot_squeak__admin__pb2.CreatePeerRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.CreatePeerReply.SerializeToString,
            ),
            'GetPeer': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPeer,
                    request_deserializer=proto_dot_squeak__admin__pb2.GetPeerRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.GetPeerReply.SerializeToString,
            ),
            'GetPeerByAddress': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPeerByAddress,
                    request_deserializer=proto_dot_squeak__admin__pb2.GetPeerByAddressRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.GetPeerByAddressReply.SerializeToString,
            ),
            'GetPeers': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPeers,
                    request_deserializer=proto_dot_squeak__admin__pb2.GetPeersRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.GetPeersReply.SerializeToString,
            ),
            'SetPeerAutoconnect': grpc.unary_unary_rpc_method_handler(
                    servicer.SetPeerAutoconnect,
                    request_deserializer=proto_dot_squeak__admin__pb2.SetPeerAutoconnectRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.SetPeerAutoconnectReply.SerializeToString,
            ),
            'SetPeerShareForFree': grpc.unary_unary_rpc_method_handler(
                    servicer.SetPeerShareForFree,
                    request_deserializer=proto_dot_squeak__admin__pb2.SetPeerShareForFreeRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.SetPeerShareForFreeReply.SerializeToString,
            ),
            'RenamePeer': grpc.unary_unary_rpc_method_handler(
                    servicer.RenamePeer,
                    request_deserializer=proto_dot_squeak__admin__pb2.RenamePeerRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.RenamePeerReply.SerializeToString,
            ),
            'DeletePeer': grpc.unary_unary_rpc_method_handler(
                    servicer.DeletePeer,
                    request_deserializer=proto_dot_squeak__admin__pb2.DeletePeerRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.DeletePeerReply.SerializeToString,
            ),
            'GetBuyOffers': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBuyOffers,
                    request_deserializer=proto_dot_squeak__admin__pb2.GetBuyOffersRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.GetBuyOffersReply.SerializeToString,
            ),
            'GetBuyOffer': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBuyOffer,
                    request_deserializer=proto_dot_squeak__admin__pb2.GetBuyOfferRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.GetBuyOfferReply.SerializeToString,
            ),
            'DownloadSqueaks': grpc.unary_unary_rpc_method_handler(
                    servicer.DownloadSqueaks,
                    request_deserializer=proto_dot_squeak__admin__pb2.DownloadSqueaksRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.DownloadSqueaksReply.SerializeToString,
            ),
            'DownloadSqueak': grpc.unary_unary_rpc_method_handler(
                    servicer.DownloadSqueak,
                    request_deserializer=proto_dot_squeak__admin__pb2.DownloadSqueakRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.DownloadSqueakReply.SerializeToString,
            ),
            'DownloadSqueakSecretKey': grpc.unary_unary_rpc_method_handler(
                    servicer.DownloadSqueakSecretKey,
                    request_deserializer=proto_dot_squeak__admin__pb2.DownloadSqueakSecretKeyRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.DownloadSqueakSecretKeyReply.SerializeToString,
            ),
            'DownloadOffers': grpc.unary_unary_rpc_method_handler(
                    servicer.DownloadOffers,
                    request_deserializer=proto_dot_squeak__admin__pb2.DownloadOffersRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.DownloadOffersReply.SerializeToString,
            ),
            'DownloadReplies': grpc.unary_unary_rpc_method_handler(
                    servicer.DownloadReplies,
                    request_deserializer=proto_dot_squeak__admin__pb2.DownloadRepliesRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.DownloadRepliesReply.SerializeToString,
            ),
            'DownloadPubKeySqueaks': grpc.unary_unary_rpc_method_handler(
                    servicer.DownloadPubKeySqueaks,
                    request_deserializer=proto_dot_squeak__admin__pb2.DownloadPubKeySqueaksRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.DownloadPubKeySqueaksReply.SerializeToString,
            ),
            'PayOffer': grpc.unary_unary_rpc_method_handler(
                    servicer.PayOffer,
                    request_deserializer=proto_dot_squeak__admin__pb2.PayOfferRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.PayOfferReply.SerializeToString,
            ),
            'DecryptSqueak': grpc.unary_unary_rpc_method_handler(
                    servicer.DecryptSqueak,
                    request_deserializer=proto_dot_squeak__admin__pb2.DecryptSqueakRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.DecryptSqueakReply.SerializeToString,
            ),
            'GetSentPayments': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSentPayments,
                    request_deserializer=proto_dot_squeak__admin__pb2.GetSentPaymentsRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.GetSentPaymentsReply.SerializeToString,
            ),
            'GetSentPaymentsForSqueak': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSentPaymentsForSqueak,
                    request_deserializer=proto_dot_squeak__admin__pb2.GetSentPaymentsForSqueakRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.GetSentPaymentsForSqueakReply.SerializeToString,
            ),
            'GetSentPaymentsForPubkey': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSentPaymentsForPubkey,
                    request_deserializer=proto_dot_squeak__admin__pb2.GetSentPaymentsForPubkeyRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.GetSentPaymentsForPubkeyReply.SerializeToString,
            ),
            'GetSentPaymentsForPeer': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSentPaymentsForPeer,
                    request_deserializer=proto_dot_squeak__admin__pb2.GetSentPaymentsForPeerRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.GetSentPaymentsForPeerReply.SerializeToString,
            ),
            'GetSentPayment': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSentPayment,
                    request_deserializer=proto_dot_squeak__admin__pb2.GetSentPaymentRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.GetSentPaymentReply.SerializeToString,
            ),
            'GetSentOffers': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSentOffers,
                    request_deserializer=proto_dot_squeak__admin__pb2.GetSentOffersRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.GetSentOffersReply.SerializeToString,
            ),
            'GetReceivedPayments': grpc.unary_unary_rpc_method_handler(
                    servicer.GetReceivedPayments,
                    request_deserializer=proto_dot_squeak__admin__pb2.GetReceivedPaymentsRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.GetReceivedPaymentsReply.SerializeToString,
            ),
            'GetReceivedPaymentsForSqueak': grpc.unary_unary_rpc_method_handler(
                    servicer.GetReceivedPaymentsForSqueak,
                    request_deserializer=proto_dot_squeak__admin__pb2.GetReceivedPaymentsForSqueakRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.GetReceivedPaymentsForSqueakReply.SerializeToString,
            ),
            'GetReceivedPaymentsForPubkey': grpc.unary_unary_rpc_method_handler(
                    servicer.GetReceivedPaymentsForPubkey,
                    request_deserializer=proto_dot_squeak__admin__pb2.GetReceivedPaymentsForPubkeyRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.GetReceivedPaymentsForPubkeyReply.SerializeToString,
            ),
            'GetReceivedPaymentsForPeer': grpc.unary_unary_rpc_method_handler(
                    servicer.GetReceivedPaymentsForPeer,
                    request_deserializer=proto_dot_squeak__admin__pb2.GetReceivedPaymentsForPeerRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.GetReceivedPaymentsForPeerReply.SerializeToString,
            ),
            'SubscribeReceivedPayments': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeReceivedPayments,
                    request_deserializer=proto_dot_squeak__admin__pb2.SubscribeReceivedPaymentsRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.ReceivedPayment.SerializeToString,
            ),
            'GetNetwork': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNetwork,
                    request_deserializer=proto_dot_squeak__admin__pb2.GetNetworkRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.GetNetworkReply.SerializeToString,
            ),
            'GetPaymentSummary': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPaymentSummary,
                    request_deserializer=proto_dot_squeak__admin__pb2.GetPaymentSummaryRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.GetPaymentSummaryReply.SerializeToString,
            ),
            'GetPaymentSummaryForSqueak': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPaymentSummaryForSqueak,
                    request_deserializer=proto_dot_squeak__admin__pb2.GetPaymentSummaryForSqueakRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.GetPaymentSummaryForSqueakReply.SerializeToString,
            ),
            'GetPaymentSummaryForPubkey': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPaymentSummaryForPubkey,
                    request_deserializer=proto_dot_squeak__admin__pb2.GetPaymentSummaryForPubkeyRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.GetPaymentSummaryForPubkeyReply.SerializeToString,
            ),
            'GetPaymentSummaryForPeer': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPaymentSummaryForPeer,
                    request_deserializer=proto_dot_squeak__admin__pb2.GetPaymentSummaryForPeerRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.GetPaymentSummaryForPeerReply.SerializeToString,
            ),
            'ReprocessReceivedPayments': grpc.unary_unary_rpc_method_handler(
                    servicer.ReprocessReceivedPayments,
                    request_deserializer=proto_dot_squeak__admin__pb2.ReprocessReceivedPaymentsRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.ReprocessReceivedPaymentsReply.SerializeToString,
            ),
            'LikeSqueak': grpc.unary_unary_rpc_method_handler(
                    servicer.LikeSqueak,
                    request_deserializer=proto_dot_squeak__admin__pb2.LikeSqueakRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.LikeSqueakReply.SerializeToString,
            ),
            'UnlikeSqueak': grpc.unary_unary_rpc_method_handler(
                    servicer.UnlikeSqueak,
                    request_deserializer=proto_dot_squeak__admin__pb2.UnlikeSqueakRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.UnlikeSqueakReply.SerializeToString,
            ),
            'GetLikedSqueakDisplays': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLikedSqueakDisplays,
                    request_deserializer=proto_dot_squeak__admin__pb2.GetLikedSqueakDisplaysRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.GetLikedSqueakDisplaysReply.SerializeToString,
            ),
            'ConnectPeer': grpc.unary_unary_rpc_method_handler(
                    servicer.ConnectPeer,
                    request_deserializer=proto_dot_squeak__admin__pb2.ConnectPeerRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.ConnectPeerReply.SerializeToString,
            ),
            'GetConnectedPeers': grpc.unary_unary_rpc_method_handler(
                    servicer.GetConnectedPeers,
                    request_deserializer=proto_dot_squeak__admin__pb2.GetConnectedPeersRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.GetConnectedPeersReply.SerializeToString,
            ),
            'GetConnectedPeer': grpc.unary_unary_rpc_method_handler(
                    servicer.GetConnectedPeer,
                    request_deserializer=proto_dot_squeak__admin__pb2.GetConnectedPeerRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.GetConnectedPeerReply.SerializeToString,
            ),
            'DisconnectPeer': grpc.unary_unary_rpc_method_handler(
                    servicer.DisconnectPeer,
                    request_deserializer=proto_dot_squeak__admin__pb2.DisconnectPeerRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.DisconnectPeerReply.SerializeToString,
            ),
            'SubscribeConnectedPeers': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeConnectedPeers,
                    request_deserializer=proto_dot_squeak__admin__pb2.SubscribeConnectedPeersRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.GetConnectedPeersReply.SerializeToString,
            ),
            'SubscribeConnectedPeer': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeConnectedPeer,
                    request_deserializer=proto_dot_squeak__admin__pb2.SubscribeConnectedPeerRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.GetConnectedPeerReply.SerializeToString,
            ),
            'SubscribeBuyOffers': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeBuyOffers,
                    request_deserializer=proto_dot_squeak__admin__pb2.SubscribeBuyOffersRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.GetBuyOfferReply.SerializeToString,
            ),
            'SubscribeSqueakDisplay': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeSqueakDisplay,
                    request_deserializer=proto_dot_squeak__admin__pb2.SubscribeSqueakDisplayRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.GetSqueakDisplayReply.SerializeToString,
            ),
            'SubscribeReplySqueakDisplays': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeReplySqueakDisplays,
                    request_deserializer=proto_dot_squeak__admin__pb2.SubscribeReplySqueakDisplaysRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.GetSqueakDisplayReply.SerializeToString,
            ),
            'SubscribePubKeySqueakDisplays': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribePubKeySqueakDisplays,
                    request_deserializer=proto_dot_squeak__admin__pb2.SubscribePubKeySqueakDisplaysRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.GetSqueakDisplayReply.SerializeToString,
            ),
            'SubscribeAncestorSqueakDisplays': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeAncestorSqueakDisplays,
                    request_deserializer=proto_dot_squeak__admin__pb2.SubscribeAncestorSqueakDisplaysRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.GetAncestorSqueakDisplaysReply.SerializeToString,
            ),
            'SubscribeSqueakDisplays': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeSqueakDisplays,
                    request_deserializer=proto_dot_squeak__admin__pb2.SubscribeSqueakDisplaysRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.GetSqueakDisplayReply.SerializeToString,
            ),
            'SubscribeTimelineSqueakDisplays': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeTimelineSqueakDisplays,
                    request_deserializer=proto_dot_squeak__admin__pb2.SubscribeTimelineSqueakDisplaysRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.GetSqueakDisplayReply.SerializeToString,
            ),
            'GetExternalAddress': grpc.unary_unary_rpc_method_handler(
                    servicer.GetExternalAddress,
                    request_deserializer=proto_dot_squeak__admin__pb2.GetExternalAddressRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.GetExternalAddressReply.SerializeToString,
            ),
            'GetDefaultPeerPort': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDefaultPeerPort,
                    request_deserializer=proto_dot_squeak__admin__pb2.GetDefaultPeerPortRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.GetDefaultPeerPortReply.SerializeToString,
            ),
            'SetSellPrice': grpc.unary_unary_rpc_method_handler(
                    servicer.SetSellPrice,
                    request_deserializer=proto_dot_squeak__admin__pb2.SetSellPriceRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.SetSellPriceReply.SerializeToString,
            ),
            'ClearSellPrice': grpc.unary_unary_rpc_method_handler(
                    servicer.ClearSellPrice,
                    request_deserializer=proto_dot_squeak__admin__pb2.ClearSellPriceRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.ClearSellPriceReply.SerializeToString,
            ),
            'GetSellPrice': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSellPrice,
                    request_deserializer=proto_dot_squeak__admin__pb2.GetSellPriceRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.GetSellPriceReply.SerializeToString,
            ),
            'AddTwitterAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.AddTwitterAccount,
                    request_deserializer=proto_dot_squeak__admin__pb2.AddTwitterAccountRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.AddTwitterAccountReply.SerializeToString,
            ),
            'GetTwitterAccounts': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTwitterAccounts,
                    request_deserializer=proto_dot_squeak__admin__pb2.GetTwitterAccountsRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.GetTwitterAccountsReply.SerializeToString,
            ),
            'DeleteTwitterAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteTwitterAccount,
                    request_deserializer=proto_dot_squeak__admin__pb2.DeleteTwitterAccountRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.DeleteTwitterAccountReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squeaknode.SqueakAdmin', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SqueakAdmin(object):
    """Interface exported by the server.
    """

    @staticmethod
    def LndGetInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/LndGetInfo',
            proto_dot_lnd__pb2.GetInfoRequest.SerializeToString,
            proto_dot_lnd__pb2.GetInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LndWalletBalance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/LndWalletBalance',
            proto_dot_lnd__pb2.WalletBalanceRequest.SerializeToString,
            proto_dot_lnd__pb2.WalletBalanceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LndNewAddress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/LndNewAddress',
            proto_dot_lnd__pb2.NewAddressRequest.SerializeToString,
            proto_dot_lnd__pb2.NewAddressResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LndListChannels(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/LndListChannels',
            proto_dot_lnd__pb2.ListChannelsRequest.SerializeToString,
            proto_dot_lnd__pb2.ListChannelsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LndPendingChannels(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/LndPendingChannels',
            proto_dot_lnd__pb2.PendingChannelsRequest.SerializeToString,
            proto_dot_lnd__pb2.PendingChannelsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LndGetTransactions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/LndGetTransactions',
            proto_dot_lnd__pb2.GetTransactionsRequest.SerializeToString,
            proto_dot_lnd__pb2.TransactionDetails.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LndListPeers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/LndListPeers',
            proto_dot_lnd__pb2.ListPeersRequest.SerializeToString,
            proto_dot_lnd__pb2.ListPeersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LndConnectPeer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/LndConnectPeer',
            proto_dot_lnd__pb2.ConnectPeerRequest.SerializeToString,
            proto_dot_lnd__pb2.ConnectPeerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LndDisconnectPeer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/LndDisconnectPeer',
            proto_dot_lnd__pb2.DisconnectPeerRequest.SerializeToString,
            proto_dot_lnd__pb2.DisconnectPeerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LndOpenChannelSync(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/LndOpenChannelSync',
            proto_dot_lnd__pb2.OpenChannelRequest.SerializeToString,
            proto_dot_lnd__pb2.ChannelPoint.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LndCloseChannel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/squeaknode.SqueakAdmin/LndCloseChannel',
            proto_dot_lnd__pb2.CloseChannelRequest.SerializeToString,
            proto_dot_lnd__pb2.CloseStatusUpdate.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LndSubscribeChannelEvents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/squeaknode.SqueakAdmin/LndSubscribeChannelEvents',
            proto_dot_lnd__pb2.ChannelEventSubscription.SerializeToString,
            proto_dot_lnd__pb2.ChannelEventUpdate.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LndSendCoins(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/LndSendCoins',
            proto_dot_lnd__pb2.SendCoinsRequest.SerializeToString,
            proto_dot_lnd__pb2.SendCoinsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateSigningProfile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/CreateSigningProfile',
            proto_dot_squeak__admin__pb2.CreateSigningProfileRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.CreateSigningProfileReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateContactProfile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/CreateContactProfile',
            proto_dot_squeak__admin__pb2.CreateContactProfileRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.CreateContactProfileReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ImportSigningProfile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/ImportSigningProfile',
            proto_dot_squeak__admin__pb2.ImportSigningProfileRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.ImportSigningProfileReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetProfiles(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/GetProfiles',
            proto_dot_squeak__admin__pb2.GetProfilesRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.GetProfilesReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSigningProfiles(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/GetSigningProfiles',
            proto_dot_squeak__admin__pb2.GetSigningProfilesRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.GetSigningProfilesReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetContactProfiles(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/GetContactProfiles',
            proto_dot_squeak__admin__pb2.GetContactProfilesRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.GetContactProfilesReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSqueakProfile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/GetSqueakProfile',
            proto_dot_squeak__admin__pb2.GetSqueakProfileRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.GetSqueakProfileReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSqueakProfileByPubKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/GetSqueakProfileByPubKey',
            proto_dot_squeak__admin__pb2.GetSqueakProfileByPubKeyRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.GetSqueakProfileByPubKeyReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSqueakProfileByName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/GetSqueakProfileByName',
            proto_dot_squeak__admin__pb2.GetSqueakProfileByNameRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.GetSqueakProfileByNameReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetSqueakProfileFollowing(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/SetSqueakProfileFollowing',
            proto_dot_squeak__admin__pb2.SetSqueakProfileFollowingRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.SetSqueakProfileFollowingReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RenameSqueakProfile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/RenameSqueakProfile',
            proto_dot_squeak__admin__pb2.RenameSqueakProfileRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.RenameSqueakProfileReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSqueakProfilePrivateKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/GetSqueakProfilePrivateKey',
            proto_dot_squeak__admin__pb2.GetSqueakProfilePrivateKeyRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.GetSqueakProfilePrivateKeyReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteSqueakProfile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/DeleteSqueakProfile',
            proto_dot_squeak__admin__pb2.DeleteSqueakProfileRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.DeleteSqueakProfileReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetSqueakProfileImage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/SetSqueakProfileImage',
            proto_dot_squeak__admin__pb2.SetSqueakProfileImageRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.SetSqueakProfileImageReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ClearSqueakProfileImage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/ClearSqueakProfileImage',
            proto_dot_squeak__admin__pb2.ClearSqueakProfileImageRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.ClearSqueakProfileImageReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MakeSqueak(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/MakeSqueak',
            proto_dot_squeak__admin__pb2.MakeSqueakRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.MakeSqueakReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MakeResqueak(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/MakeResqueak',
            proto_dot_squeak__admin__pb2.MakeResqueakRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.MakeResqueakReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSqueakDisplay(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/GetSqueakDisplay',
            proto_dot_squeak__admin__pb2.GetSqueakDisplayRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.GetSqueakDisplayReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTimelineSqueakDisplays(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/GetTimelineSqueakDisplays',
            proto_dot_squeak__admin__pb2.GetTimelineSqueakDisplaysRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.GetTimelineSqueakDisplaysReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPubKeySqueakDisplays(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/GetPubKeySqueakDisplays',
            proto_dot_squeak__admin__pb2.GetPubKeySqueakDisplaysRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.GetPubKeySqueakDisplaysReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSearchSqueakDisplays(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/GetSearchSqueakDisplays',
            proto_dot_squeak__admin__pb2.GetSearchSqueakDisplaysRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.GetSearchSqueakDisplaysReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAncestorSqueakDisplays(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/GetAncestorSqueakDisplays',
            proto_dot_squeak__admin__pb2.GetAncestorSqueakDisplaysRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.GetAncestorSqueakDisplaysReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetReplySqueakDisplays(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/GetReplySqueakDisplays',
            proto_dot_squeak__admin__pb2.GetReplySqueakDisplaysRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.GetReplySqueakDisplaysReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteSqueak(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/DeleteSqueak',
            proto_dot_squeak__admin__pb2.DeleteSqueakRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.DeleteSqueakReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreatePeer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/CreatePeer',
            proto_dot_squeak__admin__pb2.CreatePeerRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.CreatePeerReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPeer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/GetPeer',
            proto_dot_squeak__admin__pb2.GetPeerRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.GetPeerReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPeerByAddress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/GetPeerByAddress',
            proto_dot_squeak__admin__pb2.GetPeerByAddressRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.GetPeerByAddressReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPeers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/GetPeers',
            proto_dot_squeak__admin__pb2.GetPeersRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.GetPeersReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetPeerAutoconnect(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/SetPeerAutoconnect',
            proto_dot_squeak__admin__pb2.SetPeerAutoconnectRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.SetPeerAutoconnectReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetPeerShareForFree(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/SetPeerShareForFree',
            proto_dot_squeak__admin__pb2.SetPeerShareForFreeRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.SetPeerShareForFreeReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RenamePeer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/RenamePeer',
            proto_dot_squeak__admin__pb2.RenamePeerRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.RenamePeerReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeletePeer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/DeletePeer',
            proto_dot_squeak__admin__pb2.DeletePeerRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.DeletePeerReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBuyOffers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/GetBuyOffers',
            proto_dot_squeak__admin__pb2.GetBuyOffersRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.GetBuyOffersReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBuyOffer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/GetBuyOffer',
            proto_dot_squeak__admin__pb2.GetBuyOfferRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.GetBuyOfferReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DownloadSqueaks(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/DownloadSqueaks',
            proto_dot_squeak__admin__pb2.DownloadSqueaksRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.DownloadSqueaksReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DownloadSqueak(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/DownloadSqueak',
            proto_dot_squeak__admin__pb2.DownloadSqueakRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.DownloadSqueakReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DownloadSqueakSecretKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/DownloadSqueakSecretKey',
            proto_dot_squeak__admin__pb2.DownloadSqueakSecretKeyRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.DownloadSqueakSecretKeyReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DownloadOffers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/DownloadOffers',
            proto_dot_squeak__admin__pb2.DownloadOffersRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.DownloadOffersReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DownloadReplies(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/DownloadReplies',
            proto_dot_squeak__admin__pb2.DownloadRepliesRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.DownloadRepliesReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DownloadPubKeySqueaks(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/DownloadPubKeySqueaks',
            proto_dot_squeak__admin__pb2.DownloadPubKeySqueaksRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.DownloadPubKeySqueaksReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PayOffer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/PayOffer',
            proto_dot_squeak__admin__pb2.PayOfferRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.PayOfferReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DecryptSqueak(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/DecryptSqueak',
            proto_dot_squeak__admin__pb2.DecryptSqueakRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.DecryptSqueakReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSentPayments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/GetSentPayments',
            proto_dot_squeak__admin__pb2.GetSentPaymentsRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.GetSentPaymentsReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSentPaymentsForSqueak(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/GetSentPaymentsForSqueak',
            proto_dot_squeak__admin__pb2.GetSentPaymentsForSqueakRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.GetSentPaymentsForSqueakReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSentPaymentsForPubkey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/GetSentPaymentsForPubkey',
            proto_dot_squeak__admin__pb2.GetSentPaymentsForPubkeyRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.GetSentPaymentsForPubkeyReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSentPaymentsForPeer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/GetSentPaymentsForPeer',
            proto_dot_squeak__admin__pb2.GetSentPaymentsForPeerRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.GetSentPaymentsForPeerReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSentPayment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/GetSentPayment',
            proto_dot_squeak__admin__pb2.GetSentPaymentRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.GetSentPaymentReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSentOffers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/GetSentOffers',
            proto_dot_squeak__admin__pb2.GetSentOffersRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.GetSentOffersReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetReceivedPayments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/GetReceivedPayments',
            proto_dot_squeak__admin__pb2.GetReceivedPaymentsRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.GetReceivedPaymentsReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetReceivedPaymentsForSqueak(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/GetReceivedPaymentsForSqueak',
            proto_dot_squeak__admin__pb2.GetReceivedPaymentsForSqueakRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.GetReceivedPaymentsForSqueakReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetReceivedPaymentsForPubkey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/GetReceivedPaymentsForPubkey',
            proto_dot_squeak__admin__pb2.GetReceivedPaymentsForPubkeyRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.GetReceivedPaymentsForPubkeyReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetReceivedPaymentsForPeer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/GetReceivedPaymentsForPeer',
            proto_dot_squeak__admin__pb2.GetReceivedPaymentsForPeerRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.GetReceivedPaymentsForPeerReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SubscribeReceivedPayments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/squeaknode.SqueakAdmin/SubscribeReceivedPayments',
            proto_dot_squeak__admin__pb2.SubscribeReceivedPaymentsRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.ReceivedPayment.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetNetwork(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/GetNetwork',
            proto_dot_squeak__admin__pb2.GetNetworkRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.GetNetworkReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPaymentSummary(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/GetPaymentSummary',
            proto_dot_squeak__admin__pb2.GetPaymentSummaryRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.GetPaymentSummaryReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPaymentSummaryForSqueak(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/GetPaymentSummaryForSqueak',
            proto_dot_squeak__admin__pb2.GetPaymentSummaryForSqueakRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.GetPaymentSummaryForSqueakReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPaymentSummaryForPubkey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/GetPaymentSummaryForPubkey',
            proto_dot_squeak__admin__pb2.GetPaymentSummaryForPubkeyRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.GetPaymentSummaryForPubkeyReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPaymentSummaryForPeer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/GetPaymentSummaryForPeer',
            proto_dot_squeak__admin__pb2.GetPaymentSummaryForPeerRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.GetPaymentSummaryForPeerReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReprocessReceivedPayments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/ReprocessReceivedPayments',
            proto_dot_squeak__admin__pb2.ReprocessReceivedPaymentsRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.ReprocessReceivedPaymentsReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LikeSqueak(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/LikeSqueak',
            proto_dot_squeak__admin__pb2.LikeSqueakRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.LikeSqueakReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UnlikeSqueak(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/UnlikeSqueak',
            proto_dot_squeak__admin__pb2.UnlikeSqueakRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.UnlikeSqueakReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLikedSqueakDisplays(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/GetLikedSqueakDisplays',
            proto_dot_squeak__admin__pb2.GetLikedSqueakDisplaysRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.GetLikedSqueakDisplaysReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ConnectPeer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/ConnectPeer',
            proto_dot_squeak__admin__pb2.ConnectPeerRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.ConnectPeerReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetConnectedPeers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/GetConnectedPeers',
            proto_dot_squeak__admin__pb2.GetConnectedPeersRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.GetConnectedPeersReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetConnectedPeer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/GetConnectedPeer',
            proto_dot_squeak__admin__pb2.GetConnectedPeerRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.GetConnectedPeerReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DisconnectPeer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/DisconnectPeer',
            proto_dot_squeak__admin__pb2.DisconnectPeerRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.DisconnectPeerReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SubscribeConnectedPeers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/squeaknode.SqueakAdmin/SubscribeConnectedPeers',
            proto_dot_squeak__admin__pb2.SubscribeConnectedPeersRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.GetConnectedPeersReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SubscribeConnectedPeer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/squeaknode.SqueakAdmin/SubscribeConnectedPeer',
            proto_dot_squeak__admin__pb2.SubscribeConnectedPeerRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.GetConnectedPeerReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SubscribeBuyOffers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/squeaknode.SqueakAdmin/SubscribeBuyOffers',
            proto_dot_squeak__admin__pb2.SubscribeBuyOffersRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.GetBuyOfferReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SubscribeSqueakDisplay(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/squeaknode.SqueakAdmin/SubscribeSqueakDisplay',
            proto_dot_squeak__admin__pb2.SubscribeSqueakDisplayRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.GetSqueakDisplayReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SubscribeReplySqueakDisplays(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/squeaknode.SqueakAdmin/SubscribeReplySqueakDisplays',
            proto_dot_squeak__admin__pb2.SubscribeReplySqueakDisplaysRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.GetSqueakDisplayReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SubscribePubKeySqueakDisplays(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/squeaknode.SqueakAdmin/SubscribePubKeySqueakDisplays',
            proto_dot_squeak__admin__pb2.SubscribePubKeySqueakDisplaysRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.GetSqueakDisplayReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SubscribeAncestorSqueakDisplays(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/squeaknode.SqueakAdmin/SubscribeAncestorSqueakDisplays',
            proto_dot_squeak__admin__pb2.SubscribeAncestorSqueakDisplaysRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.GetAncestorSqueakDisplaysReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SubscribeSqueakDisplays(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/squeaknode.SqueakAdmin/SubscribeSqueakDisplays',
            proto_dot_squeak__admin__pb2.SubscribeSqueakDisplaysRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.GetSqueakDisplayReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SubscribeTimelineSqueakDisplays(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/squeaknode.SqueakAdmin/SubscribeTimelineSqueakDisplays',
            proto_dot_squeak__admin__pb2.SubscribeTimelineSqueakDisplaysRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.GetSqueakDisplayReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetExternalAddress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/GetExternalAddress',
            proto_dot_squeak__admin__pb2.GetExternalAddressRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.GetExternalAddressReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDefaultPeerPort(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/GetDefaultPeerPort',
            proto_dot_squeak__admin__pb2.GetDefaultPeerPortRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.GetDefaultPeerPortReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetSellPrice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/SetSellPrice',
            proto_dot_squeak__admin__pb2.SetSellPriceRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.SetSellPriceReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ClearSellPrice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/ClearSellPrice',
            proto_dot_squeak__admin__pb2.ClearSellPriceRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.ClearSellPriceReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSellPrice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/GetSellPrice',
            proto_dot_squeak__admin__pb2.GetSellPriceRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.GetSellPriceReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddTwitterAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/AddTwitterAccount',
            proto_dot_squeak__admin__pb2.AddTwitterAccountRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.AddTwitterAccountReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTwitterAccounts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/GetTwitterAccounts',
            proto_dot_squeak__admin__pb2.GetTwitterAccountsRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.GetTwitterAccountsReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteTwitterAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/DeleteTwitterAccount',
            proto_dot_squeak__admin__pb2.DeleteTwitterAccountRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.DeleteTwitterAccountReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
