name: Publish Python distribution to PyPI

on: 
  push:
    branches: 
      - 'main'
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-20.04
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')

    steps:
      - name: Checkout source
        uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: install requirements
        run: |
          sudo apt-get update
          sudo apt-get install -y git openmpi-bin libopenmpi-dev gcc-10 g++-10 gcc-10-base libnetcdf-dev libnetcdff-dev libhdf5-openmpi-dev hdf5-tools libgsl-dev libboost-dev doxygen libgoogle-perftools-dev  google-perftools
          sudo apt-get install -y libblas-dev liblapack-dev python3 python3-numpy python3-h5py pgplot5 libncarg-dev libscalapack-openmpi-dev python3-pip libnetcdf-c++4-dev cmake

      - name: Install required python packages
        run: |
          alias pip=pip3
          alias python=python3
          python3 -m pip install --upgrade pip
          pip3 install matplotlib numpy scipy ninja cmake joblib scikit-build pybind11 f90wrap ninja toml
    
      - name: Install simsopt
        run: |
          pip3 install simsopt

      - name: Install pyQSC
        run: |
          cd external
          git clone https://github.com/landreman/pyQSC.git
          cd pyQSC
          pip3 install .

      - name: Install pyQIC
        run: |
          cd external
          git clone https://github.com/rogeriojorge/pyQIC.git
          cd pyQIC
          pip3 install .

      - name: Install NEAT
        run: |
          sed -i -e '7d' cmake_config_file.json
          sed -i -e '7i             "-DCMAKE_CXX_COMPILER=g++-10"\' cmake_config_file.json
          cat cmake_config_file.json
          pip3 install -e .

      - name: Install build dependencies
        run: pip3 install build wheel

      - name: Build distributions
        shell: bash -l {0}
        run: python3 setup.py sdist bdist_wheel

      - name: Publish package to PyPI
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}