# autogenerated
# mypy: ignore-errors
# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: protos/test_run_results/test_run_results.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from rime_sdk.protos.google.api import annotations_pb2 as protos_dot_google_dot_api_dot_annotations__pb2
from rime_sdk.protos.annotations.security import sanitization_pb2 as protos_dot_annotations_dot_security_dot_sanitization__pb2
from rime_sdk.protos.results_upload import results_upload_pb2 as protos_dot_results__upload_dot_results__upload__pb2
from rime_sdk.protos.project import project_pb2 as protos_dot_project_dot_project__pb2
from google.protobuf import any_pb2 as google_dot_protobuf_dot_any__pb2
from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n.protos/test_run_results/test_run_results.proto\x12\x04rime\x1a#protos/google/api/annotations.proto\x1a.protos/annotations/security/sanitization.proto\x1a*protos/results_upload/results_upload.proto\x1a\x1cprotos/project/project.proto\x1a\x19google/protobuf/any.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"_\n\x13ResultSummaryCounts\x12\r\n\x05total\x18\x01 \x01(\x03\x12\x0c\n\x04pass\x18\x02 \x01(\x03\x12\x0f\n\x07warning\x18\x03 \x01(\x03\x12\x0c\n\x04\x66\x61il\x18\x04 \x01(\x03\x12\x0c\n\x04skip\x18\x05 \x01(\x03\"\x14\n\x12\x41\x62normalInputStats\"(\n\tDriftStat\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x01\"\x9a\x0b\n\x07TestRun\x12(\n\x08metadata\x18\x01 \x01(\x0b\x32\x16.rime.TestRun.Metadata\x12\x36\n\x10\x64\x61ta_source_info\x18\x02 \x01(\x0b\x32\x1c.rime.TestRun.DataSourceInfo\x12:\n\x11model_source_info\x18\x03 \x01(\x0b\x32\x1d.rime.TestRun.ModelSourceInfoH\x00\x12&\n\x07metrics\x18\x04 \x01(\x0b\x32\x15.rime.TestRun.Metrics\x1a\xa4\x02\n\x08Metadata\x12\n\n\x02id\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x0e\n\x06job_id\x18\x03 \x01(\t\x12\x12\n\nproject_id\x18\x04 \x01(\t\x12$\n\x0ctesting_type\x18\x05 \x01(\x0e\x32\x0e.rime.TestType\x12!\n\tdata_type\x18\x06 \x01(\x0e\x32\x0e.rime.DataType\x12%\n\nmodel_task\x18\x07 \x01(\x0e\x32\x0f.rime.ModelTaskH\x00\x12/\n\x0bupload_time\x18\x08 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\"\n\x0bweb_app_url\x18\t \x01(\x0b\x32\r.rime.SafeURLB\x15\n\x13optional_model_task\x1a\xb7\x01\n\x0e\x44\x61taSourceInfo\x12\x34\n\x03ref\x18\x01 \x01(\x0b\x32\'.rime.TestRun.DataSourceInfo.DataSource\x12\x35\n\x04\x65val\x18\x02 \x01(\x0b\x32\'.rime.TestRun.DataSourceInfo.DataSource\x1a\x38\n\nDataSource\x12\n\n\x02id\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x10\n\x08\x66\x65\x61tures\x18\x03 \x03(\t\x1a+\n\x0fModelSourceInfo\x12\n\n\x02id\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x1a\x9c\x05\n\x07Metrics\x12\x38\n\nmodel_perf\x18\x01 \x03(\x0b\x32$.rime.TestRun.Metrics.ModelPerfEntry\x12\x1c\n\x12\x61verage_prediction\x18\x02 \x01(\x01H\x00\x12\x12\n\nnum_inputs\x18\x03 \x01(\x03\x12\x1a\n\x12num_failing_inputs\x18\x04 \x01(\x03\x12\x17\n\x0f\x64uration_millis\x18\x05 \x01(\x01\x12=\n\x0fseverity_counts\x18\x06 \x01(\x0b\x32$.rime.TestRun.Metrics.SeverityCounts\x12\x31\n\x0esummary_counts\x18\x07 \x01(\x0b\x32\x19.rime.ResultSummaryCounts\x12\x18\n\x10robustness_score\x18\x08 \x01(\x01\x1a\xa0\x01\n\x0fModelPerfMetric\x12\x14\n\nref_metric\x18\x01 \x01(\x01H\x00\x12\x15\n\x0b\x65val_metric\x18\x02 \x01(\x01H\x01\x12\x17\n\x0fsubset_severity\x18\x03 \x01(\t\x12\x18\n\x10subset_pass_rate\x18\x04 \x01(\tB\x15\n\x13optional_ref_metricB\x16\n\x14optional_eval_metric\x1aI\n\x0eSeverityCounts\x12\x0c\n\x04none\x18\x01 \x01(\x03\x12\x0b\n\x03low\x18\x02 \x01(\x03\x12\x0e\n\x06medium\x18\x03 \x01(\x03\x12\x0c\n\x04high\x18\x04 \x01(\x03\x1aW\n\x0eModelPerfEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x34\n\x05value\x18\x02 \x01(\x0b\x32%.rime.TestRun.Metrics.ModelPerfMetric:\x02\x38\x01\x42\x1d\n\x1boptional_average_predictionB\x1c\n\x1aoptional_model_source_info\"\x92\x01\n\x0fTestRunReadMask\x12;\n\rmetadata_mask\x18\x01 \x01(\x0b\x32\".rime.TestRunReadMask.MetadataMaskH\x00\x1a(\n\x0cMetadataMask\x12\n\n\x02id\x18\x01 \x01(\x08\x12\x0c\n\x04name\x18\x02 \x01(\x08\x42\x18\n\x16optional_metadata_mask\"M\n\x11GetTestRunRequest\x12\x13\n\x0btest_run_id\x18\x01 \x01(\t\x12#\n\x04mask\x18\x02 \x01(\x0b\x32\x15.rime.TestRunReadMask\"5\n\x12GetTestRunResponse\x12\x1f\n\x08test_run\x18\x01 \x01(\x0b\x32\r.rime.TestRun\"C\n\x0fListBatchResult\x12\x30\n\x0c\x62\x61tchResults\x18\x01 \x03(\x0b\x32\x1a.rime.TestBatchResultQuery\"I\n\x11ListFeatureResult\x12\x34\n\x0e\x66\x65\x61tureResults\x18\x01 \x03(\x0b\x32\x1c.rime.TestFeatureResultQuery\"\x8a\x02\n\tTestBatch\x12*\n\x08metadata\x18\x01 \x01(\x0b\x32\x18.rime.TestBatch.Metadata\x12&\n\x06result\x18\x02 \x01(\x0b\x32\x16.rime.TestBatch.Result\x1a-\n\x08Metadata\x12\x13\n\x0btest_run_id\x18\x01 \x01(\t\x12\x0c\n\x04type\x18\x02 \x01(\t\x1az\n\x06Result\x12$\n\x08severity\x18\x01 \x01(\x0e\x32\x12.rime.TestSeverity\x12\x31\n\x0esummary_counts\x18\x02 \x01(\x0b\x32\x19.rime.ResultSummaryCounts\x12\x17\n\x0f\x64uration_millis\x18\x03 \x01(\x01\"\x8d\x02\n\x14TestBatchResultQuery\x12\x13\n\x0btest_run_id\x18\x01 \x01(\t\x12\x11\n\ttest_type\x18\x02 \x01(\t\x12\x11\n\ttest_name\x18\x03 \x01(\t\x12\x19\n\x0b\x64\x65scription\x18\x04 \x01(\tB\x04\x98\xbb\x1c\x03\x12\x10\n\x08\x63\x61tegory\x18\x05 \x01(\t\x12\x1a\n\x12\x64uration_in_millis\x18\x06 \x01(\x03\x12$\n\x08severity\x18\x07 \x01(\x0e\x32\x12.rime.TestSeverity\x12\x31\n\x0esummary_counts\x18\x08 \x01(\x0b\x32\x19.rime.ResultSummaryCounts\x12\x18\n\x10\x66\x61iling_features\x18\t \x03(\t\"\xd3\x02\n\x16TestFeatureResultQuery\x12\x12\n\nfeature_id\x18\x01 \x01(\t\x12\x14\n\x0c\x66\x65\x61ture_name\x18\x02 \x01(\t\x12\'\n\x0c\x66\x65\x61ture_type\x18\x03 \x01(\x0e\x32\x11.rime.FeatureType\x12$\n\x08severity\x18\x04 \x01(\x0e\x32\x12.rime.TestSeverity\x12\x31\n\x0esummary_counts\x18\x05 \x01(\x0b\x32\x19.rime.ResultSummaryCounts\x12\x15\n\rfailing_tests\x18\x06 \x03(\t\x12\x36\n\x14\x61\x62normal_input_stats\x18\x07 \x01(\x0b\x32\x18.rime.AbnormalInputStats\x12(\n\x0f\x64rift_statistic\x18\x08 \x01(\x0b\x32\x0f.rime.DriftStat\x12\x14\n\x0cmodel_impact\x18\t \x01(\x01\"Z\n\x16ListTestBatchesRequest\x12\x13\n\x0btest_run_id\x18\x01 \x01(\t\x12\x18\n\npage_token\x18\x02 \x01(\tB\x04\x98\xbb\x1c\x01\x12\x11\n\tpage_size\x18\x03 \x01(\x03\"_\n\x17ListTestBatchesResponse\x12%\n\x0ctest_batches\x18\x01 \x03(\x0b\x32\x0f.rime.TestBatch\x12\x1d\n\x0fnext_page_token\x18\x02 \x01(\tB\x04\x98\xbb\x1c\x01\"\xd6\x02\n\x08TestCase\x12\x13\n\x0btest_run_id\x18\x02 \x01(\t\x12\x10\n\x08\x66\x65\x61tures\x18\x03 \x03(\t\x12\x17\n\x0ftest_batch_type\x18\x04 \x01(\t\x12$\n\x06status\x18\x05 \x01(\x0e\x32\x14.rime.TestCaseStatus\x12$\n\x08severity\x18\x06 \x01(\x0e\x32\x12.rime.TestSeverity\x12\x18\n\x10importance_score\x18\x07 \x01(\x01\x12\x10\n\x08\x63\x61tegory\x18\x08 \x01(\t\x12\x42\n\x13\x64\x65tailed_table_info\x18\t \x03(\x0b\x32%.rime.TestCase.DetailedTableInfoEntry\x1aN\n\x16\x44\x65tailedTableInfoEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12#\n\x05value\x18\x02 \x01(\x0b\x32\x14.google.protobuf.Any:\x02\x38\x01\"X\n\x14ListTestCasesRequest\x12\x13\n\x0btest_run_id\x18\x01 \x01(\t\x12\x18\n\npage_token\x18\x02 \x01(\tB\x04\x98\xbb\x1c\x01\x12\x11\n\tpage_size\x18\x03 \x01(\x03\"Z\n\x15ListTestCasesResponse\x12\"\n\ntest_cases\x18\x01 \x03(\x0b\x32\x0e.rime.TestCase\x12\x1d\n\x0fnext_page_token\x18\x02 \x01(\tB\x04\x98\xbb\x1c\x01\x32\xbf\x02\n\rResultsReader\x12\x64\n\nGetTestRun\x12\x17.rime.GetTestRunRequest\x1a\x18.rime.GetTestRunResponse\"#\x82\xd3\xe4\x93\x02\x1d\x12\x1b/v1/test-runs/{test_run_id}\x12N\n\x0fListTestBatches\x12\x1c.rime.ListTestBatchesRequest\x1a\x1d.rime.ListTestBatchesResponse\x12x\n\rListTestCases\x12\x1a.rime.ListTestCasesRequest\x1a\x1b.rime.ListTestCasesResponse\".\x82\xd3\xe4\x93\x02(\x12&/v1/test-runs/{test_run_id}/test-casesB\x1fZ\x1dri/_gen/protos/testrunresultsb\x06proto3')



_RESULTSUMMARYCOUNTS = DESCRIPTOR.message_types_by_name['ResultSummaryCounts']
_ABNORMALINPUTSTATS = DESCRIPTOR.message_types_by_name['AbnormalInputStats']
_DRIFTSTAT = DESCRIPTOR.message_types_by_name['DriftStat']
_TESTRUN = DESCRIPTOR.message_types_by_name['TestRun']
_TESTRUN_METADATA = _TESTRUN.nested_types_by_name['Metadata']
_TESTRUN_DATASOURCEINFO = _TESTRUN.nested_types_by_name['DataSourceInfo']
_TESTRUN_DATASOURCEINFO_DATASOURCE = _TESTRUN_DATASOURCEINFO.nested_types_by_name['DataSource']
_TESTRUN_MODELSOURCEINFO = _TESTRUN.nested_types_by_name['ModelSourceInfo']
_TESTRUN_METRICS = _TESTRUN.nested_types_by_name['Metrics']
_TESTRUN_METRICS_MODELPERFMETRIC = _TESTRUN_METRICS.nested_types_by_name['ModelPerfMetric']
_TESTRUN_METRICS_SEVERITYCOUNTS = _TESTRUN_METRICS.nested_types_by_name['SeverityCounts']
_TESTRUN_METRICS_MODELPERFENTRY = _TESTRUN_METRICS.nested_types_by_name['ModelPerfEntry']
_TESTRUNREADMASK = DESCRIPTOR.message_types_by_name['TestRunReadMask']
_TESTRUNREADMASK_METADATAMASK = _TESTRUNREADMASK.nested_types_by_name['MetadataMask']
_GETTESTRUNREQUEST = DESCRIPTOR.message_types_by_name['GetTestRunRequest']
_GETTESTRUNRESPONSE = DESCRIPTOR.message_types_by_name['GetTestRunResponse']
_LISTBATCHRESULT = DESCRIPTOR.message_types_by_name['ListBatchResult']
_LISTFEATURERESULT = DESCRIPTOR.message_types_by_name['ListFeatureResult']
_TESTBATCH = DESCRIPTOR.message_types_by_name['TestBatch']
_TESTBATCH_METADATA = _TESTBATCH.nested_types_by_name['Metadata']
_TESTBATCH_RESULT = _TESTBATCH.nested_types_by_name['Result']
_TESTBATCHRESULTQUERY = DESCRIPTOR.message_types_by_name['TestBatchResultQuery']
_TESTFEATURERESULTQUERY = DESCRIPTOR.message_types_by_name['TestFeatureResultQuery']
_LISTTESTBATCHESREQUEST = DESCRIPTOR.message_types_by_name['ListTestBatchesRequest']
_LISTTESTBATCHESRESPONSE = DESCRIPTOR.message_types_by_name['ListTestBatchesResponse']
_TESTCASE = DESCRIPTOR.message_types_by_name['TestCase']
_TESTCASE_DETAILEDTABLEINFOENTRY = _TESTCASE.nested_types_by_name['DetailedTableInfoEntry']
_LISTTESTCASESREQUEST = DESCRIPTOR.message_types_by_name['ListTestCasesRequest']
_LISTTESTCASESRESPONSE = DESCRIPTOR.message_types_by_name['ListTestCasesResponse']
ResultSummaryCounts = _reflection.GeneratedProtocolMessageType('ResultSummaryCounts', (_message.Message,), {
  'DESCRIPTOR' : _RESULTSUMMARYCOUNTS,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:rime.ResultSummaryCounts)
  })
_sym_db.RegisterMessage(ResultSummaryCounts)

AbnormalInputStats = _reflection.GeneratedProtocolMessageType('AbnormalInputStats', (_message.Message,), {
  'DESCRIPTOR' : _ABNORMALINPUTSTATS,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:rime.AbnormalInputStats)
  })
_sym_db.RegisterMessage(AbnormalInputStats)

DriftStat = _reflection.GeneratedProtocolMessageType('DriftStat', (_message.Message,), {
  'DESCRIPTOR' : _DRIFTSTAT,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:rime.DriftStat)
  })
_sym_db.RegisterMessage(DriftStat)

TestRun = _reflection.GeneratedProtocolMessageType('TestRun', (_message.Message,), {

  'Metadata' : _reflection.GeneratedProtocolMessageType('Metadata', (_message.Message,), {
    'DESCRIPTOR' : _TESTRUN_METADATA,
    '__module__' : 'protos.test_run_results.test_run_results_pb2'
    # @@protoc_insertion_point(class_scope:rime.TestRun.Metadata)
    })
  ,

  'DataSourceInfo' : _reflection.GeneratedProtocolMessageType('DataSourceInfo', (_message.Message,), {

    'DataSource' : _reflection.GeneratedProtocolMessageType('DataSource', (_message.Message,), {
      'DESCRIPTOR' : _TESTRUN_DATASOURCEINFO_DATASOURCE,
      '__module__' : 'protos.test_run_results.test_run_results_pb2'
      # @@protoc_insertion_point(class_scope:rime.TestRun.DataSourceInfo.DataSource)
      })
    ,
    'DESCRIPTOR' : _TESTRUN_DATASOURCEINFO,
    '__module__' : 'protos.test_run_results.test_run_results_pb2'
    # @@protoc_insertion_point(class_scope:rime.TestRun.DataSourceInfo)
    })
  ,

  'ModelSourceInfo' : _reflection.GeneratedProtocolMessageType('ModelSourceInfo', (_message.Message,), {
    'DESCRIPTOR' : _TESTRUN_MODELSOURCEINFO,
    '__module__' : 'protos.test_run_results.test_run_results_pb2'
    # @@protoc_insertion_point(class_scope:rime.TestRun.ModelSourceInfo)
    })
  ,

  'Metrics' : _reflection.GeneratedProtocolMessageType('Metrics', (_message.Message,), {

    'ModelPerfMetric' : _reflection.GeneratedProtocolMessageType('ModelPerfMetric', (_message.Message,), {
      'DESCRIPTOR' : _TESTRUN_METRICS_MODELPERFMETRIC,
      '__module__' : 'protos.test_run_results.test_run_results_pb2'
      # @@protoc_insertion_point(class_scope:rime.TestRun.Metrics.ModelPerfMetric)
      })
    ,

    'SeverityCounts' : _reflection.GeneratedProtocolMessageType('SeverityCounts', (_message.Message,), {
      'DESCRIPTOR' : _TESTRUN_METRICS_SEVERITYCOUNTS,
      '__module__' : 'protos.test_run_results.test_run_results_pb2'
      # @@protoc_insertion_point(class_scope:rime.TestRun.Metrics.SeverityCounts)
      })
    ,

    'ModelPerfEntry' : _reflection.GeneratedProtocolMessageType('ModelPerfEntry', (_message.Message,), {
      'DESCRIPTOR' : _TESTRUN_METRICS_MODELPERFENTRY,
      '__module__' : 'protos.test_run_results.test_run_results_pb2'
      # @@protoc_insertion_point(class_scope:rime.TestRun.Metrics.ModelPerfEntry)
      })
    ,
    'DESCRIPTOR' : _TESTRUN_METRICS,
    '__module__' : 'protos.test_run_results.test_run_results_pb2'
    # @@protoc_insertion_point(class_scope:rime.TestRun.Metrics)
    })
  ,
  'DESCRIPTOR' : _TESTRUN,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:rime.TestRun)
  })
_sym_db.RegisterMessage(TestRun)
_sym_db.RegisterMessage(TestRun.Metadata)
_sym_db.RegisterMessage(TestRun.DataSourceInfo)
_sym_db.RegisterMessage(TestRun.DataSourceInfo.DataSource)
_sym_db.RegisterMessage(TestRun.ModelSourceInfo)
_sym_db.RegisterMessage(TestRun.Metrics)
_sym_db.RegisterMessage(TestRun.Metrics.ModelPerfMetric)
_sym_db.RegisterMessage(TestRun.Metrics.SeverityCounts)
_sym_db.RegisterMessage(TestRun.Metrics.ModelPerfEntry)

TestRunReadMask = _reflection.GeneratedProtocolMessageType('TestRunReadMask', (_message.Message,), {

  'MetadataMask' : _reflection.GeneratedProtocolMessageType('MetadataMask', (_message.Message,), {
    'DESCRIPTOR' : _TESTRUNREADMASK_METADATAMASK,
    '__module__' : 'protos.test_run_results.test_run_results_pb2'
    # @@protoc_insertion_point(class_scope:rime.TestRunReadMask.MetadataMask)
    })
  ,
  'DESCRIPTOR' : _TESTRUNREADMASK,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:rime.TestRunReadMask)
  })
_sym_db.RegisterMessage(TestRunReadMask)
_sym_db.RegisterMessage(TestRunReadMask.MetadataMask)

GetTestRunRequest = _reflection.GeneratedProtocolMessageType('GetTestRunRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETTESTRUNREQUEST,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:rime.GetTestRunRequest)
  })
_sym_db.RegisterMessage(GetTestRunRequest)

GetTestRunResponse = _reflection.GeneratedProtocolMessageType('GetTestRunResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETTESTRUNRESPONSE,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:rime.GetTestRunResponse)
  })
_sym_db.RegisterMessage(GetTestRunResponse)

ListBatchResult = _reflection.GeneratedProtocolMessageType('ListBatchResult', (_message.Message,), {
  'DESCRIPTOR' : _LISTBATCHRESULT,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:rime.ListBatchResult)
  })
_sym_db.RegisterMessage(ListBatchResult)

ListFeatureResult = _reflection.GeneratedProtocolMessageType('ListFeatureResult', (_message.Message,), {
  'DESCRIPTOR' : _LISTFEATURERESULT,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:rime.ListFeatureResult)
  })
_sym_db.RegisterMessage(ListFeatureResult)

TestBatch = _reflection.GeneratedProtocolMessageType('TestBatch', (_message.Message,), {

  'Metadata' : _reflection.GeneratedProtocolMessageType('Metadata', (_message.Message,), {
    'DESCRIPTOR' : _TESTBATCH_METADATA,
    '__module__' : 'protos.test_run_results.test_run_results_pb2'
    # @@protoc_insertion_point(class_scope:rime.TestBatch.Metadata)
    })
  ,

  'Result' : _reflection.GeneratedProtocolMessageType('Result', (_message.Message,), {
    'DESCRIPTOR' : _TESTBATCH_RESULT,
    '__module__' : 'protos.test_run_results.test_run_results_pb2'
    # @@protoc_insertion_point(class_scope:rime.TestBatch.Result)
    })
  ,
  'DESCRIPTOR' : _TESTBATCH,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:rime.TestBatch)
  })
_sym_db.RegisterMessage(TestBatch)
_sym_db.RegisterMessage(TestBatch.Metadata)
_sym_db.RegisterMessage(TestBatch.Result)

TestBatchResultQuery = _reflection.GeneratedProtocolMessageType('TestBatchResultQuery', (_message.Message,), {
  'DESCRIPTOR' : _TESTBATCHRESULTQUERY,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:rime.TestBatchResultQuery)
  })
_sym_db.RegisterMessage(TestBatchResultQuery)

TestFeatureResultQuery = _reflection.GeneratedProtocolMessageType('TestFeatureResultQuery', (_message.Message,), {
  'DESCRIPTOR' : _TESTFEATURERESULTQUERY,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:rime.TestFeatureResultQuery)
  })
_sym_db.RegisterMessage(TestFeatureResultQuery)

ListTestBatchesRequest = _reflection.GeneratedProtocolMessageType('ListTestBatchesRequest', (_message.Message,), {
  'DESCRIPTOR' : _LISTTESTBATCHESREQUEST,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:rime.ListTestBatchesRequest)
  })
_sym_db.RegisterMessage(ListTestBatchesRequest)

ListTestBatchesResponse = _reflection.GeneratedProtocolMessageType('ListTestBatchesResponse', (_message.Message,), {
  'DESCRIPTOR' : _LISTTESTBATCHESRESPONSE,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:rime.ListTestBatchesResponse)
  })
_sym_db.RegisterMessage(ListTestBatchesResponse)

TestCase = _reflection.GeneratedProtocolMessageType('TestCase', (_message.Message,), {

  'DetailedTableInfoEntry' : _reflection.GeneratedProtocolMessageType('DetailedTableInfoEntry', (_message.Message,), {
    'DESCRIPTOR' : _TESTCASE_DETAILEDTABLEINFOENTRY,
    '__module__' : 'protos.test_run_results.test_run_results_pb2'
    # @@protoc_insertion_point(class_scope:rime.TestCase.DetailedTableInfoEntry)
    })
  ,
  'DESCRIPTOR' : _TESTCASE,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:rime.TestCase)
  })
_sym_db.RegisterMessage(TestCase)
_sym_db.RegisterMessage(TestCase.DetailedTableInfoEntry)

ListTestCasesRequest = _reflection.GeneratedProtocolMessageType('ListTestCasesRequest', (_message.Message,), {
  'DESCRIPTOR' : _LISTTESTCASESREQUEST,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:rime.ListTestCasesRequest)
  })
_sym_db.RegisterMessage(ListTestCasesRequest)

ListTestCasesResponse = _reflection.GeneratedProtocolMessageType('ListTestCasesResponse', (_message.Message,), {
  'DESCRIPTOR' : _LISTTESTCASESRESPONSE,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:rime.ListTestCasesResponse)
  })
_sym_db.RegisterMessage(ListTestCasesResponse)

_RESULTSREADER = DESCRIPTOR.services_by_name['ResultsReader']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'Z\035ri/_gen/protos/testrunresults'
  _TESTRUN_METRICS_MODELPERFENTRY._options = None
  _TESTRUN_METRICS_MODELPERFENTRY._serialized_options = b'8\001'
  _TESTBATCHRESULTQUERY.fields_by_name['description']._options = None
  _TESTBATCHRESULTQUERY.fields_by_name['description']._serialized_options = b'\230\273\034\003'
  _LISTTESTBATCHESREQUEST.fields_by_name['page_token']._options = None
  _LISTTESTBATCHESREQUEST.fields_by_name['page_token']._serialized_options = b'\230\273\034\001'
  _LISTTESTBATCHESRESPONSE.fields_by_name['next_page_token']._options = None
  _LISTTESTBATCHESRESPONSE.fields_by_name['next_page_token']._serialized_options = b'\230\273\034\001'
  _TESTCASE_DETAILEDTABLEINFOENTRY._options = None
  _TESTCASE_DETAILEDTABLEINFOENTRY._serialized_options = b'8\001'
  _LISTTESTCASESREQUEST.fields_by_name['page_token']._options = None
  _LISTTESTCASESREQUEST.fields_by_name['page_token']._serialized_options = b'\230\273\034\001'
  _LISTTESTCASESRESPONSE.fields_by_name['next_page_token']._options = None
  _LISTTESTCASESRESPONSE.fields_by_name['next_page_token']._serialized_options = b'\230\273\034\001'
  _RESULTSREADER.methods_by_name['GetTestRun']._options = None
  _RESULTSREADER.methods_by_name['GetTestRun']._serialized_options = b'\202\323\344\223\002\035\022\033/v1/test-runs/{test_run_id}'
  _RESULTSREADER.methods_by_name['ListTestCases']._options = None
  _RESULTSREADER.methods_by_name['ListTestCases']._serialized_options = b'\202\323\344\223\002(\022&/v1/test-runs/{test_run_id}/test-cases'
  _RESULTSUMMARYCOUNTS._serialized_start=275
  _RESULTSUMMARYCOUNTS._serialized_end=370
  _ABNORMALINPUTSTATS._serialized_start=372
  _ABNORMALINPUTSTATS._serialized_end=392
  _DRIFTSTAT._serialized_start=394
  _DRIFTSTAT._serialized_end=434
  _TESTRUN._serialized_start=437
  _TESTRUN._serialized_end=1871
  _TESTRUN_METADATA._serialized_start=647
  _TESTRUN_METADATA._serialized_end=939
  _TESTRUN_DATASOURCEINFO._serialized_start=942
  _TESTRUN_DATASOURCEINFO._serialized_end=1125
  _TESTRUN_DATASOURCEINFO_DATASOURCE._serialized_start=1069
  _TESTRUN_DATASOURCEINFO_DATASOURCE._serialized_end=1125
  _TESTRUN_MODELSOURCEINFO._serialized_start=1127
  _TESTRUN_MODELSOURCEINFO._serialized_end=1170
  _TESTRUN_METRICS._serialized_start=1173
  _TESTRUN_METRICS._serialized_end=1841
  _TESTRUN_METRICS_MODELPERFMETRIC._serialized_start=1486
  _TESTRUN_METRICS_MODELPERFMETRIC._serialized_end=1646
  _TESTRUN_METRICS_SEVERITYCOUNTS._serialized_start=1648
  _TESTRUN_METRICS_SEVERITYCOUNTS._serialized_end=1721
  _TESTRUN_METRICS_MODELPERFENTRY._serialized_start=1723
  _TESTRUN_METRICS_MODELPERFENTRY._serialized_end=1810
  _TESTRUNREADMASK._serialized_start=1874
  _TESTRUNREADMASK._serialized_end=2020
  _TESTRUNREADMASK_METADATAMASK._serialized_start=1954
  _TESTRUNREADMASK_METADATAMASK._serialized_end=1994
  _GETTESTRUNREQUEST._serialized_start=2022
  _GETTESTRUNREQUEST._serialized_end=2099
  _GETTESTRUNRESPONSE._serialized_start=2101
  _GETTESTRUNRESPONSE._serialized_end=2154
  _LISTBATCHRESULT._serialized_start=2156
  _LISTBATCHRESULT._serialized_end=2223
  _LISTFEATURERESULT._serialized_start=2225
  _LISTFEATURERESULT._serialized_end=2298
  _TESTBATCH._serialized_start=2301
  _TESTBATCH._serialized_end=2567
  _TESTBATCH_METADATA._serialized_start=2398
  _TESTBATCH_METADATA._serialized_end=2443
  _TESTBATCH_RESULT._serialized_start=2445
  _TESTBATCH_RESULT._serialized_end=2567
  _TESTBATCHRESULTQUERY._serialized_start=2570
  _TESTBATCHRESULTQUERY._serialized_end=2839
  _TESTFEATURERESULTQUERY._serialized_start=2842
  _TESTFEATURERESULTQUERY._serialized_end=3181
  _LISTTESTBATCHESREQUEST._serialized_start=3183
  _LISTTESTBATCHESREQUEST._serialized_end=3273
  _LISTTESTBATCHESRESPONSE._serialized_start=3275
  _LISTTESTBATCHESRESPONSE._serialized_end=3370
  _TESTCASE._serialized_start=3373
  _TESTCASE._serialized_end=3715
  _TESTCASE_DETAILEDTABLEINFOENTRY._serialized_start=3637
  _TESTCASE_DETAILEDTABLEINFOENTRY._serialized_end=3715
  _LISTTESTCASESREQUEST._serialized_start=3717
  _LISTTESTCASESREQUEST._serialized_end=3805
  _LISTTESTCASESRESPONSE._serialized_start=3807
  _LISTTESTCASESRESPONSE._serialized_end=3897
  _RESULTSREADER._serialized_start=3900
  _RESULTSREADER._serialized_end=4219
# @@protoc_insertion_point(module_scope)
