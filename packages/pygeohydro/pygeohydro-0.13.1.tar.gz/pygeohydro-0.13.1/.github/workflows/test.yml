name: CI

on:
  push:
    branches:
      - "**"
    tags-ignore:
      - "**"
  pull_request:
    branches:
      - "**"
    tags-ignore:
      - "**"

jobs:
  test:
    name: python ${{ matrix.python-version }}, ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env:
      REPO_NAME: ${{ github.event.repository.name }}
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      matrix:
        python-version: [3.8, "3.10"]
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}
      - uses: actions/checkout@v3
      - name: Set environment variables
        run: |-
          echo "CONDA_ENV_FILE=ci/requirements/environment.yml" >> $GITHUB_ENV
          echo "PYTHON_VERSION=${{ matrix.python-version }}" >> $GITHUB_ENV
      - name: Cache conda
        uses: actions/cache@v3
        with:
          path: ~/conda_pkgs_dir
          key:
            ${{ runner.os }}-conda-py${{ matrix.python-version }}-${{
            hashFiles('ci/requirements/environment.yml') }}
      - name: Setup conda
        uses: conda-incubator/setup-miniconda@v2.1.1
        with:
          channel-priority: strict
          miniforge-version: latest
          miniforge-variant: Mambaforge
          environment-file: ci/requirements/environment.yml
          python-version: ${{ matrix.python-version }}
          activate-environment: ${{ github.event.repository.name }}-tests
          use-mamba: true
          use-only-tar-bz2: true
      - name: Install the package
        run: |-
          mamba info -a
          mamba list
          python -m pip install --no-deps .
      - name: Version info
        run: |-
          python -c "import ${REPO_NAME}; ${REPO_NAME}.show_versions()"
      - name: Run pytest
        run: |-
          pytest
      - name: Run typeguard
        run: |-
          mamba install typeguard
          pytest --typeguard-packages=${REPO_NAME}
      - name: Run codecov and upload the report
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          env_vars: RUNNER_OS,PYTHON_VERSION
          name: codecov-umbrella
          fail_ci_if_error: false
