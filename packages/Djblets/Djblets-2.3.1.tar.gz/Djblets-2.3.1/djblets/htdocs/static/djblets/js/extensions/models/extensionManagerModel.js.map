{"version":3,"file":"extensionManagerModel.js","names":["InstalledExtension","Backbone","Model","extend","defaults","author","authorURL","configURL","dbURL","enabled","loadable","loadError","name","summary","version","url","prototype","call","enable","Promise","resolve","reject","save","wait","success","error","model","xhr","set","errorRsp","load_error","canEnable","needs_reload","Error","errorText","disable","toJSON","get","parse","rsp","stat","undefined","extension","configLink","links","dbLink","author_url","canDisable","can_disable","can_enable","href","id","class_name","sync","method","options","_","contentType","data","processData","text","$","parseJSON","responseText","err","msg","e","status","statusText","isFunction","InstalledExtensionCollection","Collection","extensions","Djblets","ExtensionManager","apiRoot","initialize","installedExtensions","load","trigger","fetch"],"sources":["extensionManagerModel.es6.js"],"sourcesContent":["(function() {\n\n\n/**\n * Represents an installed extension listed in the Manage Extensions list.\n *\n * This stores the various information about the extension that we'll display\n * to the user, and offers actions for enabling or disabling the extension.\n */\nconst InstalledExtension = Backbone.Model.extend({\n    defaults: {\n        author: null,\n        authorURL: null,\n        configURL: null,\n        dbURL: null,\n        enabled: false,\n        loadable: true,\n        loadError: null,\n        name: null,\n        summary: null,\n        version: null,\n    },\n\n    /**\n     * Return the URL to the API endpoint representing this extension.\n     *\n     * Returns:\n     *     string:\n     *     The URL to use for making changes to this extension.\n     */\n    url() {\n        return Backbone.Model.prototype.url.call(this) + '/';\n    },\n\n    /**\n     * Enable the extension.\n     *\n     * This will submit a request to the server to enable this extension.\n     *\n     * Returns:\n     *     Promise:\n     *     A promise that will be resolved when the request to enable the\n     *     extension completes.\n     */\n    enable() {\n        return new Promise((resolve, reject) => {\n            this.save({\n                enabled: true\n            }, {\n                wait: true,\n                success: () => resolve(),\n                error: (model, xhr) => {\n                    this.set({\n                        loadable: false,\n                        loadError: xhr.errorRsp.load_error,\n                        canEnable: !xhr.errorRsp.needs_reload,\n                    });\n\n                    reject(new Error(xhr.errorText));\n                },\n            });\n        });\n    },\n\n    /**\n     * Disable the extension.\n     *\n     * This will submit a request to the server to disable this extension.\n     *\n     * Returns:\n     *     Promise:\n     *     A promise that will be resolved when the request to enable the\n     *     extension completes.\n     */\n    disable() {\n        return new Promise((resolve, reject) => {\n            this.save({\n                enabled: false,\n            }, {\n                wait: true,\n                success: () => resolve(),\n                error: xhr => reject(new Error(xhr.errorText)),\n            });\n        });\n    },\n\n    /**\n     * Return a JSON payload for requests sent to the server.\n     *\n     * Returns:\n     *     object:\n     *     A payload that will be serialized for making the API request.\n     */\n    toJSON() {\n        return {\n            enabled: this.get('enabled'),\n        };\n    },\n\n    /**\n     * Parse a JSON payload from the server.\n     *\n     * Args:\n     *     rsp (object):\n     *         The payload from the server.\n     *\n     * Returns:\n     *     object:\n     *     The parsed response.\n     */\n    parse(rsp) {\n        if (rsp.stat !== undefined) {\n            rsp = rsp.extension;\n        }\n\n        const configLink = rsp.links['admin-configure'];\n        const dbLink = rsp.links['admin-database'];\n\n        return {\n            author: rsp.author,\n            authorURL: rsp.author_url,\n            canDisable: rsp.can_disable,\n            canEnable: rsp.can_enable,\n            configURL: configLink ? configLink.href : null,\n            dbURL: dbLink ? dbLink.href : null,\n            enabled: rsp.enabled,\n            loadable: rsp.loadable,\n            loadError: rsp.load_error,\n            id: rsp.class_name,\n            name: rsp.name,\n            summary: rsp.summary,\n            version: rsp.version,\n        };\n    },\n\n    /**\n     * Perform AJAX requests against the server-side API.\n     *\n     * Args:\n     *     method (string):\n     *         The HTTP method to use.\n     *\n     *     model (InstalledExtension):\n     *         The extension object being synced.\n     *\n     *     options (object):\n     *         Options for the sync operation.\n     */\n    sync(method, model, options) {\n        Backbone.sync.call(this, method, model, _.defaults({\n            contentType: 'application/x-www-form-urlencoded',\n            data: model.toJSON(options),\n            processData: true,\n            error: xhr => {\n                let rsp;\n                let text;\n\n                try {\n                    rsp = $.parseJSON(xhr.responseText);\n                    text = rsp.err.msg;\n                } catch (e) {\n                    text = 'HTTP ' + xhr.status + ' ' + xhr.statusText;\n                    rsp = {\n                        loadError: text,\n                        canEnable: false,\n                    };\n                }\n\n                if (_.isFunction(options.error)) {\n                    xhr.errorText = text;\n                    xhr.errorRsp = rsp;\n                    options.error(xhr, options);\n                }\n            },\n        }, options));\n    },\n});\n\n\n/**\n * A collection of installed extensions.\n *\n * This stores the list of installed extensions, and allows fetching from\n * the API.\n */\nconst InstalledExtensionCollection = Backbone.Collection.extend({\n    model: InstalledExtension,\n\n    /**\n     * Parse the response from the server.\n     *\n     * Args:\n     *     rsp (object):\n     *         The response from the server.\n     *\n     * Returns:\n     *     object:\n     *     The parsed data from the response.\n     */\n    parse(rsp) {\n        return rsp.extensions;\n    },\n});\n\n\n/**\n * Manages installed extensions.\n *\n * This stores a collection of installed extensions, and provides\n * functionality for loading the current list from the server.\n *\n * Model Attributes:\n *     apiRoot (string):\n *         The root of the extensions API, used for all lookups.\n */\nDjblets.ExtensionManager = Backbone.Model.extend({\n    defaults: {\n        apiRoot: null,\n    },\n\n    /**\n     * Initialize the manager.\n     */\n    initialize() {\n        this.installedExtensions = new InstalledExtensionCollection();\n        this.installedExtensions.url = this.get('apiRoot');\n    },\n\n    /**\n     * Load the extensions list.\n     */\n    load() {\n        this.trigger('loading');\n\n        this.installedExtensions.fetch({\n            success: () => this.trigger('loaded'),\n        });\n    },\n});\n\n\n})();\n"],"mappings":"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"}