{"version":3,"file":"relatedObjectSelectorView.js","names":["Djblets","RelatedObjectSelectorView","Backbone","View","extend","className","searchPlaceholderText","template","_","initialize","options","_$input","$input","_selectizeOptions","selectizeOptions","_selectedIDs","Map","bindAll","render","self","$el","html","multivalued","_$selected","$","renderItem","renderOption","defaults","copyClassesToDropdown","dropdownParent","preload","item","option","load","query","callback","loadOptions","data","filter","has","id","onChange","selected","_onItemSelected","removeOption","clear","initialOptions","length","items","valueField","selectize","forEach","after","_updateInput","val","Array","from","keys","join","addToInput","$li","$items","children","text","click","_onItemRemoved","appendTo","attached","i","$item","eq","localeCompare","before","set","remove","delete"],"sources":["relatedObjectSelectorView.es6.js"],"sourcesContent":["/**\n * A widget to select related objects using search and autocomplete.\n *\n * This is particularly useful for models where there can be a ton of rows in\n * the database. The built-in admin widgets provide a pretty poor\n * experience--either populating the list with the entire contents of the\n * table, which is super slow, or just listing PKs, which isn't usable.\n */\nDjblets.RelatedObjectSelectorView = Backbone.View.extend({\n    className: 'related-object-selector',\n\n    /**\n     * The search placeholder text.\n     *\n     * Subclasses should override this.\n     */\n    searchPlaceholderText: '',\n\n    /**\n     * The element template.\n     *\n     * Subclasses may override this to change rendering.\n     */\n    template: _.template(dedent`\n        <select placeholder=\"<%- searchPlaceholderText %>\"\n                class=\"related-object-options\"></select>\n        <% if (multivalued) { %>\n        <ul class=\"related-object-selected\"></ul>\n        <% } %>\n    `),\n\n    /**\n     * Initialize the view.\n     *\n     * Args:\n     *     options (object):\n     *         Options for the view.\n     *\n     * Option Args:\n     *     $input (jQuery):\n     *         The ``<input>`` element which should be populated with the list\n     *         of selected item PKs.\n     *\n     *     initialOptions (Array of object):\n     *         The initially selected options.\n     *\n     *     multivalued (boolean):\n     *         Whether or not the widget should allow selecting multiple\n     *         values.\n     *\n     *     selectizeOptions (object):\n     *          Additional options to pass in to $.selectize.\n     */\n    initialize(options) {\n        this.options = options;\n        this._$input = options.$input;\n        this._selectizeOptions = options.selectizeOptions;\n        this._selectedIDs = new Map();\n\n        _.bindAll(this, 'renderOption');\n    },\n\n    /**\n     * Render the view.\n     *\n     * Returns:\n     *     RB.RelatedObjectSelectorView:\n     *     This object, for chaining.\n     */\n    render() {\n        const self = this;\n\n        this.$el.html(this.template({\n            searchPlaceholderText: this.searchPlaceholderText,\n            multivalued: this.options.multivalued,\n        }));\n\n        this._$selected = this.$('.related-object-selected');\n\n        const renderItem = this.options.multivalued\n                           ? () => ''\n                           : this.renderOption;\n\n        const selectizeOptions = _.defaults(this._selectizeOptions, {\n            copyClassesToDropdown: true,\n            dropdownParent: 'body',\n            preload: 'focus',\n            render: {\n                item: renderItem,\n                option: this.renderOption,\n            },\n            load(query, callback) {\n                self.loadOptions(\n                    query,\n                    data => callback(data.filter(\n                        item => !self._selectedIDs.has(item.id)\n                    ))\n                );\n            },\n            onChange(selected) {\n                if (selected) {\n                    self._onItemSelected(this.options[selected], true);\n\n                    if (self.options.multivalued) {\n                        this.removeOption(selected);\n                    }\n                }\n\n                if (self.options.multivalued) {\n                    this.clear();\n                }\n            },\n        });\n\n        if (!this.options.multivalued && this.options.initialOptions.length) {\n            const item = this.options.initialOptions[0];\n            selectizeOptions.options = this.options.initialOptions;\n            selectizeOptions.items = [item[selectizeOptions.valueField]];\n        }\n\n        this.$('select').selectize(selectizeOptions);\n\n        if (this.options.multivalued) {\n            this.options.initialOptions.forEach(\n                item => this._onItemSelected(item, false)\n            );\n        }\n\n        this._$input.after(this.$el);\n        return this;\n    },\n\n    /**\n     * Update the \"official\" ``<input>`` element.\n     *\n     * This copies the list of selected item IDs into the form field which will\n     * be submitted.\n     */\n    _updateInput() {\n        this._$input.val(Array.from(this._selectedIDs.keys()).join(','));\n    },\n\n    /**\n     * Callback for when an item is selected.\n     *\n     * Args:\n     *     item (object):\n     *         The newly-selected item.\n     *\n     *     addToInput (boolean):\n     *         Whether the ID of the item should be added to the ``<input>``\n     *         field.\n     *\n     *         This will be ``false`` when populating the visible list from the\n     *         value of the form field when the page is initially loaded, and\n     *         ``true`` when adding items interactively.\n     */\n    _onItemSelected(item, addToInput) {\n        if (this.options.multivalued) {\n            const $li = $('<li>').html(this.renderOption(item));\n            const $items = this._$selected.children();\n            const text = $li.text();\n\n            $('<span class=\"remove-item fa fa-close\">')\n                .click(() => this._onItemRemoved($li, item))\n                .appendTo($li);\n\n            let attached = false;\n\n            for (let i = 0; i < $items.length; i++) {\n                const $item = $items.eq(i);\n\n                if ($item.text().localeCompare(text) > 0) {\n                    $item.before($li);\n                    attached = true;\n                    break;\n                }\n            }\n\n            if (!attached) {\n                $li.appendTo(this._$selected);\n            }\n\n            this._selectedIDs.set(item.id, item);\n\n            if (addToInput) {\n                this._updateInput();\n            }\n        } else {\n            this._selectedIDs = new Map([[item.id, item]]);\n            this._updateInput();\n        }\n    },\n\n    /**\n     * Callback for when an item is removed from the list.\n     *\n     * Args:\n     *     $li (jQuery):\n     *         The element representing the item in the selected list.\n     *\n     *     item (object):\n     *         The item being removed.\n     */\n    _onItemRemoved($li, item) {\n        $li.remove();\n        this._selectedIDs.delete(item.id);\n        this._updateInput();\n    },\n\n    /**\n     * Render an option in the drop-down menu.\n     *\n     * This should be overridden in order to render type-specific data.\n     *\n     * Args:\n     *     item (object):\n     *         The item to render.\n     *\n     * Returns:\n     *     string:\n     *     HTML to insert into the drop-down menu.\n     */\n    renderOption(/* item */) {\n        return '';\n    },\n\n    /**\n     * Load options from the server.\n     *\n     * This should be overridden in order to make necessary API requests.\n     *\n     * Args:\n     *     query (string):\n     *         The string typed in by the user.\n     *\n     *     callback (function):\n     *         A callback to be called once data has been loaded. This should\n     *         be passed an array of objects, each representing an option in\n     *         the drop-down.\n     */\n    loadOptions(query, callback) {\n        callback();\n    },\n});\n"],"mappings":"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"}