(function(){Djblets.Avatars={};"use strict";Djblets.Avatars.Settings=Backbone.Model.extend({defaults:function defaults(){return{configuration:{},serviceID:null,services:{}}}});"use strict";Djblets.Avatars.ServiceSettingsFormView=Backbone.View.extend({validate:function validate(){return true}});"use strict";function _createForOfIteratorHelper(o,allowArrayLike){var it=typeof Symbol!=="undefined"&&o[Symbol.iterator]||o["@@iterator"];if(!it){if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&typeof o.length==="number"){if(it)o=it;var i=0;var F=function F(){};return{s:F,n:function n(){if(i>=o.length)return{done:true};return{done:false,value:o[i++]}},e:function e(_e2){throw _e2},f:F}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var normalCompletion=true,didErr=false,err;return{s:function s(){it=it.call(o)},n:function n(){var step=it.next();normalCompletion=step.done;return step},e:function e(_e3){didErr=true;err=_e3},f:function f(){try{if(!normalCompletion&&it.return!=null)it.return()}finally{if(didErr)throw err}}}}function _slicedToArray(arr,i){return _arrayWithHoles(arr)||_iterableToArrayLimit(arr,i)||_unsupportedIterableToArray(arr,i)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o==="string")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n==="Object"&&o.constructor)n=o.constructor.name;if(n==="Map"||n==="Set")return Array.from(o);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++){arr2[i]=arr[i]}return arr2}function _iterableToArrayLimit(arr,i){var _i=arr==null?null:typeof Symbol!=="undefined"&&arr[Symbol.iterator]||arr["@@iterator"];if(_i==null)return;var _arr=[];var _n=true;var _d=false;var _s,_e;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break}}catch(err){_d=true;_e=err}finally{try{if(!_n&&_i["return"]!=null)_i["return"]()}finally{if(_d)throw _e}}return _arr}function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(function(){var _Promise$withResolver=Promise.withResolver(),_Promise$withResolver2=_slicedToArray(_Promise$withResolver,2),readyPromise=_Promise$withResolver2[0],resolve=_Promise$withResolver2[1];Djblets.Avatars.SettingsFormView=Backbone.View.extend({events:{"change #id_avatar_service_id":"_onServiceChanged",submit:"_onSubmit"},initialize:function initialize(){var _this=this;console.assert(Djblets.Avatars.SettingsFormView.instance===null);Djblets.Avatars.SettingsFormView.instance=this;this._configForms=new Map;this._$config=this.$(".avatar-service-configuration");var services=this.model.get("services");this.listenTo(this.model,"change:serviceID",function(){return _this._showHideForms()});resolve()},_onSubmit:function _onSubmit(e){var serviceID=this.model.get("serviceID");var currentForm=this._configForms.get(serviceID);if(currentForm&&!currentForm.validate()){e.preventDefault()}},renderForms:function renderForms(){var _iterator=_createForOfIteratorHelper(this._configForms.values()),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var form=_step.value;form.render()}}catch(err){_iterator.e(err)}finally{_iterator.f()}this.$("#id_avatar_service_id").change();this._showHideForms(true);return this},_showHideForms:function _showHideForms(){var services=this.model.get("services");var serviceID=this.model.get("serviceID");var currentForm=this._configForms.get(serviceID);var previousID=this.model.previous("serviceID");var previousForm=previousID?this._configForms.get(previousID):undefined;if(previousForm&&currentForm){previousForm.$el.hide();currentForm.$el.show()}else if(previousForm){previousForm.$el.hide();this._$config.hide()}else if(currentForm){currentForm.$el.show();this._$config.show()}},_onServiceChanged:function _onServiceChanged(e){var $target=$(e.target);this.model.set("serviceID",$target.val())}},{instance:null,addConfigForm:function addConfigForm(serviceID,formClass){Djblets.Avatars.SettingsFormView.instance._configForms.set(serviceID,new formClass({el:$('[data-avatar-service-id="'.concat(serviceID,'"]')),model:Djblets.Avatars.SettingsFormView.instance.model}))},ready:readyPromise})})();"use strict";(function(){var allowedMimeTypes=["image/png","image/jpeg","image/gif"];var ParentView=Djblets.Avatars.ServiceSettingsFormView;Djblets.Avatars.FileUploadSettingsFormView=ParentView.extend({events:{"change #id_file-upload-avatar_upload":"_onFileChanged","click .avatar-file-upload-browse":"_onBrowseClicked","click .avatar-preview":"_onBrowseClicked","dragenter .avatar-file-upload-config":"_onDragEnter","dragover .avatar-file-upload-config":"_onDragOver","dragleave .avatar-file-upload-config":"_onDragLeave","drop .avatar-file-upload-config":"_onDrop"},validate:function validate(){var file=this._$fileInput[0].files[0];if(!file){alert(gettext("You must choose a file."));return false}if(!allowedMimeTypes.some(function(el){return el===file.type})){alert(gettext("This wasn't a valid image file format. Please provide a PNG, JPEG, or GIF file."));return false}return true},render:function render(){this._$box=this.$(".avatar-file-upload-config");this._$preview=this.$(".avatar-preview");this._$fileInput=this.$("#id_file-upload-avatar_upload");return this},_onBrowseClicked:function _onBrowseClicked(e){e.preventDefault();e.stopPropagation();this.$("#avatar-file-upload-browse-label").click()},_onDragEnter:function _onDragEnter(e){e.preventDefault();e.stopPropagation();if(e.target===this._$box[0]){this._$box.width(this._$box.width()).addClass("drag-hover")}},_onDragOver:function _onDragOver(e){e.preventDefault();e.stopPropagation();if(e.target===this._$box[0]){var dt=e.originalEvent.dataTransfer;if(dt){dt.dropEffect="copy"}}},_onDragLeave:function _onDragLeave(e){e.preventDefault();e.stopPropagation();if(e.target===this._$box[0]){this._$box.removeClass("drag-hover").width("auto");var dt=e.originalEvent.dataTransfer;if(dt){dt.dropEffect="none"}}},_onDrop:function _onDrop(e){e.preventDefault();e.stopPropagation();this._$box.removeClass("drag-hover");var dt=e.originalEvent.dataTransfer;var files=dt&&dt.files;if(!files||files.length===0){return}if(files.length>1){alert(gettext("You can only set one file as your avatar. Please drag and drop a single file."));return}var fileType=files[0].type;if(fileType!=="image/png"&&fileType!=="image/jpeg"&&fileType!=="image/gif"){alert(gettext("This doesn't appear to be a compatible image file for avatars. Please upload a PNG, JPEG, or GIF file."));return}try{this._$fileInput[0].files=files}catch(exc){alert(gettext("Looks like dragging to upload a file isn't going to work with your browser. Try browsing for a file instead."));return}this._setAvatarFromFile(files[0])},_onFileChanged:function _onFileChanged(e){var file=e.target.files[0];if(file){this._setAvatarFromFile(file)}},_setAvatarFromFile:function _setAvatarFromFile(file){var _this=this;var reader=new FileReader;reader.addEventListener("load",function(){_this._$preview.empty().removeClass("avatar-preview-unset").append($("<img />").attr({src:reader.result,alt:gettext("Your new avatar")}))});reader.readAsDataURL(file)}})})()}).call(this);
