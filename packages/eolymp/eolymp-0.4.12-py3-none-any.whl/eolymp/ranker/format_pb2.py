# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: eolymp/ranker/format.proto

from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='eolymp/ranker/format.proto',
  package='eolymp.ranker',
  syntax='proto3',
  serialized_options=b'Z3github.com/eolymp/contracts/go/eolymp/ranker;ranker',
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x1a\x65olymp/ranker/format.proto\x12\reolymp.ranker*%\n\x06\x46ormat\x12\x08\n\x04NONE\x10\x00\x12\x07\n\x03IOI\x10\x01\x12\x08\n\x04ICPC\x10\x02\x42\x35Z3github.com/eolymp/contracts/go/eolymp/ranker;rankerb\x06proto3'
)

_FORMAT = _descriptor.EnumDescriptor(
  name='Format',
  full_name='eolymp.ranker.Format',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='NONE', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='IOI', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ICPC', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=45,
  serialized_end=82,
)
_sym_db.RegisterEnumDescriptor(_FORMAT)

Format = enum_type_wrapper.EnumTypeWrapper(_FORMAT)
NONE = 0
IOI = 1
ICPC = 2


DESCRIPTOR.enum_types_by_name['Format'] = _FORMAT
_sym_db.RegisterFileDescriptor(DESCRIPTOR)


DESCRIPTOR._options = None
# @@protoc_insertion_point(module_scope)
