Metadata-Version: 2.1
Name: shell-command-logger
Version: 0.4.0
Summary: Logs the output of commands, so that it can be replayed later
Home-page: https://github.com/six-two/shell-command-logger
Author: six-two
Author-email: pip@six-two.dev
License: MIT License
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: POSIX :: Linux
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Requires-Python: >=3.9
Description-Content-Type: text/markdown
License-File: LICENSE
Provides-Extra: full
Requires-Dist: termcolor (>=1.1.0) ; extra == 'full'
Requires-Dist: python-dateutil (>=2.8.0) ; extra == 'full'

# Shell command logger (scl)
[![PyPI version](https://img.shields.io/pypi/v/shell_command_logger)](https://pypi.org/project/shell_command_logger/)
![License](https://img.shields.io/pypi/l/shell_command_logger)
![Python versions](https://img.shields.io/pypi/pyversions/shell_command_logger)

This program uses the linux `script` and `scriptreplay` commands to record and replay the output of any desired commands.

## Documentation

This README just contains basic usage information.
For more please consult the [documentation](https://shell-command-logger.six-two.dev/).
It is also provided in the `docs` folder and can be locally viewed by following these steps:

1. Install development dependencies (only required once):
    ```bash
    python3 -m pip install -r requirements-dev.txt
    ```
2. Building the documentation and starting a local webserver:
    ```bash
    mkdocs serve
    ```
3. Open [localhost:8000](http://localhost:8000)


## Installation

Install via `pip`:
```bash
pip install shell-command-logger[full]
```

## Usage

To record a command, you just prefix it with `scl log`:

```bash
scl log ls -1 /
```

You can use `scl replay` to interactively choose and replay a file.
With `scl search` you can search logged commands.
For more information see the [documentation](https://shell-command-logger.six-two.dev/) or run `scl --help`.

