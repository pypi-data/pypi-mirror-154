(function(){"use strict";function _slicedToArray(arr,i){return _arrayWithHoles(arr)||_iterableToArrayLimit(arr,i)||_unsupportedIterableToArray(arr,i)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o==="string")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n==="Object"&&o.constructor)n=o.constructor.name;if(n==="Map"||n==="Set")return Array.from(o);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++){arr2[i]=arr[i]}return arr2}function _iterableToArrayLimit(arr,i){var _i=arr==null?null:typeof Symbol!=="undefined"&&arr[Symbol.iterator]||arr["@@iterator"];if(_i==null)return;var _arr=[];var _n=true;var _d=false;var _s,_e;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break}}catch(err){_d=true;_e=err}finally{try{if(!_n&&_i["return"]!=null)_i["return"]()}finally{if(_d)throw _e}}return _arr}function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}(function(){var _POLICY_LABELS;var POLICY_READ_WRITE="rw";var POLICY_READ_ONLY="ro";var POLICY_CUSTOM="custom";var POLICY_LABELS=(_POLICY_LABELS={},_defineProperty(_POLICY_LABELS,POLICY_READ_WRITE,gettext("Full access")),_defineProperty(_POLICY_LABELS,POLICY_READ_ONLY,gettext("Read-only")),_defineProperty(_POLICY_LABELS,POLICY_CUSTOM,gettext("Custom")),_POLICY_LABELS);var APITokenItem=RB.Config.ResourceListItem.extend({defaults:_.defaults({policyType:POLICY_READ_WRITE,localSiteName:null,showRemove:true},RB.Config.ResourceListItem.prototype.defaults),syncAttrs:["id","note","policy","tokenValue"],initialize:function initialize(){_super(this).initialize.apply(this,arguments);this.on("change:policyType",this._onPolicyTypeChanged,this);var policy=this.get("policy")||{};var policyType=this._guessPolicyType(policy);this._policyMenuAction={id:"policy",label:POLICY_LABELS[policyType],children:[this._makePolicyAction(POLICY_READ_WRITE),this._makePolicyAction(POLICY_READ_ONLY),this._makePolicyAction(POLICY_CUSTOM,{id:"policy-custom",dispatchOnClick:true})]};this.actions.unshift(this._policyMenuAction);this.set("policyType",policyType)},createResource:function createResource(attrs){return new RB.APIToken(_.defaults({userName:RB.UserSession.instance.get("username"),localSitePrefix:this.collection.localSitePrefix},attrs))},saveNote:function saveNote(note){this._saveAttribute("note",note)},savePolicy:function savePolicy(policy,options){this._saveAttribute("policy",policy,options)},_saveAttribute:function _saveAttribute(attr,value,options){var _this=this;this.resource.ready({ready:function ready(){_this.resource.set(attr,value);_this.resource.save(options)}})},_guessPolicyType:function _guessPolicyType(policy){if(_.isEqual(policy,RB.APIToken.defaultPolicies.readOnly)){return POLICY_READ_ONLY}else if(_.isEqual(policy,RB.APIToken.defaultPolicies.readWrite)){return POLICY_READ_WRITE}else{return POLICY_CUSTOM}},_makePolicyAction:function _makePolicyAction(policyType,options){return _.defaults({label:POLICY_LABELS[policyType],type:"radio",name:"policy-type",propName:"policyType",radioValue:policyType},options)},_onPolicyTypeChanged:function _onPolicyTypeChanged(){var policyType=this.get("policyType");this._policyMenuAction.label=POLICY_LABELS[policyType];this.trigger("actionsChanged");var newPolicy=null;if(policyType===POLICY_READ_ONLY){newPolicy=RB.APIToken.defaultPolicies.readOnly}else if(policyType===POLICY_READ_WRITE){newPolicy=RB.APIToken.defaultPolicies.readWrite}else{return}console.assert(newPolicy!==null);if(!_.isEqual(newPolicy,this.get("policy"))){this.savePolicy(newPolicy)}}});var APITokenItemCollection=Backbone.Collection.extend({model:APITokenItem,initialize:function initialize(models,options){this.localSitePrefix=options.localSitePrefix}});var PolicyEditorView=Backbone.View.extend({id:"custom_policy_editor",template:_.template(["<p><%= instructions %></p>","<textarea/>"].join("")),initialize:function initialize(options){this.prevPolicyType=options.prevPolicyType;this._codeMirror=null;this._$policy=null;this._$saveButtons=null},render:function render(){var _this2=this;var policy=this.model.get("policy");if(_.isEmpty(policy)){policy=RB.APIToken.defaultPolicies.custom}this.$el.html(this.template({instructions:interpolate(gettext('You can limit access to the API through a custom policy. See the <a href="%s" target="_blank">documentation</a> on how to write policies.'),[MANUAL_URL+"webapi/2.0/api-token-policy/"])}));this._$policy=this.$("textarea").val(JSON.stringify(policy,null,"  "));this.$el.modalBox({title:gettext("Custom Token Access Policy"),buttons:[$('<input type="button"/>').val(gettext("Cancel")).click(_.bind(this.cancel,this)),$('<input type="button" class="save-button"/>').val(gettext("Save and continue editing")).click(function(){_this2.save();return false}),$('<input type="button" class="btn primary save-button"/>').val(gettext("Save")).click(function(){_this2.save(true);return false})]});this._$saveButtons=this.$el.modalBox("buttons").find(".save-button");this._codeMirror=CodeMirror.fromTextArea(this._$policy[0],{mode:"application/json",lineNumbers:true,lineWrapping:true,matchBrackets:true,lint:{onUpdateLinting:_.bind(this._onUpdateLinting,this)},gutters:["CodeMirror-lint-markers"]});this._codeMirror.focus()},remove:function remove(){this.$el.modalBox("destroy")},cancel:function cancel(){this.model.set("policyType",this.prevPolicyType)},save:function save(closeOnSave){var _this3=this;var policyStr=this._codeMirror.getValue().strip();try{var policy=JSON.parse(policyStr);this.model.savePolicy(policy,{success:function success(){_this3.model.set("policyType",POLICY_CUSTOM);if(closeOnSave){_this3.remove()}},error:function error(model,xhr){if(xhr.errorPayload.err.code===105&&xhr.errorPayload.fields.policy){alert(xhr.errorPayload.fields.policy)}else{alert(xhr.errorPayload.err.msg)}}})}catch(e){if(e instanceof SyntaxError){alert(interpolate(gettext("There is a syntax error in your policy: %s"),[e]))}else{throw e}}return false},_onUpdateLinting:function _onUpdateLinting(annotationsNotSorted){this._$saveButtons.prop("disabled",annotationsNotSorted.length>0)}});var APITokenItemView=Djblets.Config.ListItemView.extend({EMPTY_NOTE_PLACEHOLDER:gettext("Click to describe this token"),template:_.template(['<div class="config-api-token-value"><%- tokenValue %></div>','<span class="config-api-token-note"></span>'].join("")),actionHandlers:{delete:"_onRemoveClicked","policy-custom":"_onCustomPolicyClicked"},initialize:function initialize(){_super(this).initialize.apply(this,arguments);this._$note=null;this.listenTo(this.model.resource,"change:note",this._updateNote)},render:function render(){var _this4=this;_super(this).render.call(this);this._$note=this.$(".config-api-token-note").inlineEditor({editIconClass:"rb-icon rb-icon-edit"}).on({beginEdit:function beginEdit(){return _this4._$note.inlineEditor("setValue",_this4.model.get("note"))},complete:function complete(e,value){return _this4.model.saveNote(value)}});this._updateNote();return this},_updateNote:function _updateNote(){var note=this.model.resource.get("note");this._$note.toggleClass("empty",!note).text(note?note:this.EMPTY_NOTE_PLACEHOLDER)},_onCustomPolicyClicked:function _onCustomPolicyClicked(){var view=new PolicyEditorView({model:this.model,prevPolicyType:this.model.previous("policyType")});view.render();return false},_onRemoveClicked:function _onRemoveClicked(){var _this5=this;$("<p/>").html(gettext("This will prevent clients using this token when authenticating.")).modalBox({title:gettext("Are you sure you want to remove this token?"),buttons:[$('<input type="button"/>').val(gettext("Cancel")),$('<input type="button" class="danger" />').val(gettext("Remove")).click(function(){return _this5.model.resource.destroy()})]})}});var SiteAPITokensView=Backbone.View.extend({className:"config-site-api-tokens",template:_.template('<% if (name) { %>\n <div class="djblets-l-config-forms-container">\n  <h3><%- name %></h3>\n </div>\n<% } %>\n<div class="api-tokens">\n</div>'),generateTokenTemplate:_.template('<li class="generate-api-token djblets-c-config-forms-list__item">\n <a href="#"><%- generateText %></a>\n</li>'),events:{"click .generate-api-token":"_onGenerateClicked"},initialize:function initialize(options){this.localSiteName=options.localSiteName;this.localSitePrefix=options.localSitePrefix;this.collection=new APITokenItemCollection(options.apiTokens,{localSitePrefix:this.localSitePrefix});this.apiTokensList=new Djblets.Config.List({},{collection:this.collection});this._listView=null},render:function render(){this._listView=new Djblets.Config.ListView({ItemView:APITokenItemView,animateItems:true,model:this.apiTokensList});this.$el.html(this.template({name:this.localSiteName}));this._listView.render().$el.prependTo(this.$(".api-tokens"));this._$generateTokenItem=$(this.generateTokenTemplate({generateText:gettext("Generate a new API token")})).appendTo(this._listView.getBody());return this},_onGenerateClicked:function _onGenerateClicked(){var _this6=this;var apiToken=new RB.APIToken({localSitePrefix:this.localSitePrefix,userName:RB.UserSession.instance.get("username")});apiToken.save({success:function success(){_this6.collection.add({resource:apiToken});_this6._$generateTokenItem.detach().appendTo(_this6._listView.getBody())}});return false}});RB.APITokensView=Backbone.View.extend({template:_.template('<div class="api-tokens-list djblets-l-config-forms-container\n            -is-recessed -is-top-flush">\n</div>'),initialize:function initialize(options){this.apiTokens=options.apiTokens;this._$listsContainer=null;this._apiTokenViews=[]},render:function render(){this.$el.html(this.template());this._$listsContainer=this.$(".api-tokens-list");for(var _i=0,_Object$entries=Object.entries(this.apiTokens);_i<_Object$entries.length;_i++){var _Object$entries$_i=_slicedToArray(_Object$entries[_i],2),localSiteName=_Object$entries$_i[0],info=_Object$entries$_i[1];var view=new SiteAPITokensView({localSiteName:localSiteName,localSitePrefix:info.localSitePrefix,apiTokens:info.tokens});view.$el.appendTo(this._$listsContainer);view.render();this._apiTokenViews.push(view)}return this}})})();"use strict";function _slicedToArray(arr,i){return _arrayWithHoles(arr)||_iterableToArrayLimit(arr,i)||_unsupportedIterableToArray(arr,i)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o==="string")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n==="Object"&&o.constructor)n=o.constructor.name;if(n==="Map"||n==="Set")return Array.from(o);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++){arr2[i]=arr[i]}return arr2}function _iterableToArrayLimit(arr,i){var _i=arr==null?null:typeof Symbol!=="undefined"&&arr[Symbol.iterator]||arr["@@iterator"];if(_i==null)return;var _arr=[];var _n=true;var _d=false;var _s,_e;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break}}catch(err){_d=true;_e=err}finally{try{if(!_n&&_i["return"]!=null)_i["return"]()}finally{if(_d)throw _e}}return _arr}function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(function(){var GroupMembershipItem=Djblets.Config.ListItem.extend({defaults:_.defaults({localSiteName:null,displayName:null,groupName:null,joined:false,showRemove:false,url:null},Djblets.Config.ListItem.prototype.defaults),initialize:function initialize(){Djblets.Config.ListItem.prototype.initialize.apply(this,arguments);var name=this.get("name");var localSiteName=this.get("localSiteName");this.set({text:name,editURL:this.get("url")});this.group=new RB.ReviewGroup({id:this.get("reviewGroupID"),name:name,localSitePrefix:localSiteName?"s/"+localSiteName+"/":""});this.on("change:joined",this._updateActions,this);this._updateActions()},joinGroup:function joinGroup(){var _this=this;this.group.addUser(RB.UserSession.instance.get("username"),{success:function success(){return _this.set("joined",true)}})},leaveGroup:function leaveGroup(){var _this2=this;this.group.removeUser(RB.UserSession.instance.get("username"),{success:function success(){return _this2.set("joined",false)}})},_updateActions:function _updateActions(){if(this.get("joined")){this.actions=[{id:"leave",label:gettext("Leave")}]}else{this.actions=[{id:"join",label:gettext("Join")}]}this.trigger("actionsChanged")}});var GroupMembershipItemView=Djblets.Config.ListItemView.extend({actionHandlers:{join:"_onJoinClicked",leave:"_onLeaveClicked"},template:_.template(['<span class="config-group-name">',' <a href="<%- editURL %>"><%- text %></a>',"</span>",'<span class="config-group-display-name"><%- displayName %></span>'].join("")),_onJoinClicked:function _onJoinClicked(){this.model.joinGroup()},_onLeaveClicked:function _onLeaveClicked(){this.model.leaveGroup()}});var SiteGroupsView=Backbone.View.extend({template:_.template('<% if (name) { %>\n <div class="djblets-l-config-forms-container">\n  <h3><%- name %></h3>\n </div>\n<% } %>\n<div class="groups"></div>'),initialize:function initialize(options){this.name=options.name;this.collection=new RB.FilteredCollection(null,{collection:new Backbone.Collection(options.groups,{model:GroupMembershipItem})});this.groupList=new Djblets.Config.List({},{collection:this.collection})},render:function render(){this._listView=new Djblets.Config.ListView({ItemView:GroupMembershipItemView,model:this.groupList});this.$el.html(this.template({name:this.name}));this._listView.render();this._listView.$el.appendTo(this.$(".groups"));return this},filterBy:function filterBy(name){this.collection.setFilters({name:name});this.$el.setVisible(this.collection.length>0)}});RB.JoinedGroupsView=Backbone.View.extend({template:_.template('<div class="djblets-l-config-forms-container">\n <div class="rb-c-search-field">\n  <span class="fa fa-search"></span>\n  <input class="rb-c-search-field__input" type="search">\n </div>\n</div>\n<div class="group-lists"></div>'),events:{submit:"_onSubmit","keyup .rb-c-search-field__input":"_onGroupSearchChanged","change .rb-c-search-field__input":"_onGroupSearchChanged"},initialize:function initialize(options){this.groups=options.groups;this._$listsContainer=null;this._$search=null;this._searchText=null;this._groupViews=[]},render:function render(){this.$el.html(this.template());this._$listsContainer=this.$(".group-lists");this._$search=this.$(".rb-c-search-field__input");for(var _i=0,_Object$entries=Object.entries(this.groups);_i<_Object$entries.length;_i++){var _Object$entries$_i=_slicedToArray(_Object$entries[_i],2),localSiteName=_Object$entries$_i[0],groups=_Object$entries$_i[1];if(groups.length>0){var view=new SiteGroupsView({name:localSiteName,groups:groups});view.$el.appendTo(this._$listsContainer);view.render();this._groupViews.push(view)}}return this},_onGroupSearchChanged:function _onGroupSearchChanged(){var _this3=this;var text=this._$search.val();if(text!==this._searchText){this._searchText=text;this._groupViews.forEach(function(view){return view.filterBy(_this3._searchText)})}},_onSubmit:function _onSubmit(e){e.preventDefault()}})})();"use strict";function _slicedToArray(arr,i){return _arrayWithHoles(arr)||_iterableToArrayLimit(arr,i)||_unsupportedIterableToArray(arr,i)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o==="string")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n==="Object"&&o.constructor)n=o.constructor.name;if(n==="Map"||n==="Set")return Array.from(o);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++){arr2[i]=arr[i]}return arr2}function _iterableToArrayLimit(arr,i){var _i=arr==null?null:typeof Symbol!=="undefined"&&arr[Symbol.iterator]||arr["@@iterator"];if(_i==null)return;var _arr=[];var _n=true;var _d=false;var _s,_e;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break}}catch(err){_d=true;_e=err}finally{try{if(!_n&&_i["return"]!=null)_i["return"]()}finally{if(_d)throw _e}}return _arr}function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(function(){var addApplicationText=gettext("Add application");var disabledForSecurityText=gettext("Disabled for security.");var disabledWarningTemplate=gettext('This application has been disabled because the user "%s" has been removed from the Local Site.');var emptyText=gettext("You have not registered any OAuth2 applications.");var localSiteEmptyText=gettext("You have not registered any OAuth2 applications on %s.");var OAuthAppItem=Djblets.Config.ListItem.extend({defaults:_.defaults({apiURL:"",editURL:"",enabled:true,isDisabledForSecurity:false,localSiteName:"",name:"",originalUser:null,showRemove:true},Djblets.Config.ListItem.prototype.defaults),parse:function parse(rsp,options){var baseEditURL=options.baseEditURL,baseURL=options.baseURL;var localSiteName=rsp.localSiteName;return _.defaults(rsp,{apiURL:localSiteName?"/s/".concat(localSiteName).concat(baseURL).concat(rsp.id,"/"):"".concat(baseURL).concat(rsp.id,"/"),editURL:"".concat(baseEditURL,"/").concat(rsp.id,"/")})}});var OAuthAppItemView=Djblets.Config.ListItemView.extend({template:_.template('<div class="app-entry-wrapper">\n <span class="config-app-name<% if (!enabled) {%> disabled<% } %>">\n  <% if (isDisabledForSecurity) { %>\n    <span class="rb-icon rb-icon-warning"\n          title="'.concat(disabledForSecurityText,'"></span>\n  <% } %>\n  <a href="<%- editURL %>"><%- name %></a>\n </span>\n <% if (isDisabledForSecurity) { %>\n   <p class="disabled-warning"><%- disabledWarning %></p>\n  <% } %>\n </div>')),actionHandlers:{delete:"_onDeleteClicked"},getRenderContext:function getRenderContext(){return{disabledWarning:interpolate(disabledWarningTemplate,[this.model.get("originalUser")])}},_onDeleteClicked:function _onDeleteClicked(){var _this=this;RB.apiCall({url:this.model.get("apiURL"),method:"DELETE",success:function success(){return _this.model.trigger("destroy")},error:function error(xhr){return alert(xhr.errorText)}})}});RB.OAuthApplicationsView=Backbone.View.extend({template:_.template('<div class="app-lists"></div>\n<div class="oauth-form-buttons djblets-l-config-forms-container">\n <a class="btn oauth-add-app" href="<%- editURL %>">\n  '.concat(addApplicationText,"\n </a>\n</div>")),listTemplate:_.template('<div>\n <% if (localSiteName) { %>\n  <div class="djblets-l-config-forms-container">\n   <h2><%- localSiteName %></h2>\n  </div>\n <% } %>\n <div class="app-list">\n  <div class="djblets-l-config-forms-container">\n   <%- emptyText %>\n  </div>\n </div>\n</div>'),initialize:function initialize(options){this.collections=new Map(Object.entries(options.apps).map(function(_ref){var _ref2=_slicedToArray(_ref,2),localSiteName=_ref2[0],apps=_ref2[1];return[localSiteName||null,new Backbone.Collection(apps,{model:OAuthAppItem,parse:true,baseEditURL:options.editURL,baseURL:options.baseURL})]}));this._editURL=options.editURL;window.view=this},_renderAppList:function _renderAppList(localSiteName,collection){var $entry=$(this.listTemplate({emptyText:localSiteName?interpolate(localSiteEmptyText,[localSiteName]):emptyText,localSiteName:localSiteName}));var listView=new Djblets.Config.ListView({ItemView:OAuthAppItemView,model:new Djblets.Config.List({},{collection:collection})});listView.render().$el.prependTo($entry.find(".app-list"));return $entry},render:function render(){var _this2=this;this.$el.html(this.template({editURL:this._editURL}));var $lists=this.$(".app-lists");this.collections.forEach(function(collection,localSiteName){var $entry=_this2._renderAppList(localSiteName,collection);if(localSiteName){$lists.append($entry)}else{$lists.prepend($entry)}});return this}})})();"use strict";(function(){var xhrUnknownErrorText=gettext("An unexpected error occurred. Could not delete OAuth2 token.");var OAuthTokenItem=Djblets.Config.ListItem.extend({defaults:_.defaults({apiURL:"",application:"",showRemove:true},Djblets.Config.ListItem.prototype.defaults)});var OAuthTokenItemView=Djblets.Config.ListItemView.extend({template:_.template('<span class="config-token-name"><%- application %></span>'),actionHandlers:{delete:"_onDeleteClicked"},_onDeleteClicked:function _onDeleteClicked(){var _this=this;RB.apiCall({url:this.model.get("apiURL"),method:"DELETE",success:function success(){return _this.model.trigger("destroy")},error:function error(xhr){return alert(xhr.errorText||xhrUnknownErrorText)}})}});RB.OAuthTokensView=Backbone.View.extend({template:_.template('<div class="oauth-token-list">\n <div class="djblets-l-config-forms-container -is-top-flush">\n  <%- emptyText %>\n </div>\n</div>'),initialize:function initialize(options){this.collection=new Backbone.Collection(options.tokens,{model:OAuthTokenItem})},render:function render(){this.$el.html(this.template({emptyText:gettext("You do not have any OAuth2 tokens.")}));this._$list=this.$(".oauth-token-list");this._listView=new Djblets.Config.ListView({ItemView:OAuthTokenItemView,model:new Djblets.Config.List({},{collection:this.collection})});this._listView.render().$el.prependTo(this._$list);return this}})})()}).call(this);
