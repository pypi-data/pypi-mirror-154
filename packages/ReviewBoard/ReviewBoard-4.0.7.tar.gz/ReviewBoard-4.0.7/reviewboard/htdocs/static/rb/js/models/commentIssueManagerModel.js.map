{"version":3,"file":"commentIssueManagerModel.js","names":["RB","CommentIssueManager","Backbone","Model","extend","defaults","reviewRequest","initialize","_comments","setCommentState","reviewID","commentID","commentType","state","comment","getComment","_requestState","get","createReview","createDiffComment","id","createScreenshotComment","createFileAttachmentComment","createGeneralComment","console","error","ready","oldIssueStatus","set","save","attrs","success","rsp","rspComment","diff_comment","file_attachment_comment","screenshot_comment","general_comment","trigger","timestamp"],"sources":["commentIssueManagerModel.es6.js"],"sourcesContent":["/**\n * CommentIssueManager takes care of setting the state of a particular\n * comment issue, and also takes care of notifying callbacks whenever\n * the state is successfully changed.\n */\nRB.CommentIssueManager = Backbone.Model.extend({\n    defaults: {\n        reviewRequest: null,\n    },\n\n    /**\n     * Initialize the model.\n     */\n    initialize() {\n        this._comments = {};\n    },\n\n    /**\n     * Set the state for a comment.\n     *\n     * Args:\n     *     reviewID (number):\n     *         The ID of the review the comment belongs to.\n     *\n     *     commentID (number):\n     *         The ID of the comment.\n     *\n     *     commentType (string):\n     *         The type of the comment.\n     *\n     *     state (string):\n     *          The new state for the comment's issue. This will be one of\n     *          ``open``, ``resolved``, ``dropped``, or ``verify``.\n     */\n    setCommentState(reviewID, commentID, commentType, state) {\n        const comment = this.getComment(reviewID, commentID, commentType);\n        this._requestState(comment, state);\n    },\n\n    /**\n     * Retrieve the model for a given comment.\n     *\n     * This will either generate the appropriate comment object based on\n     * ``commentType``, or grab the comment from a cache if it's been generated\n     * before.\n     *\n     * Args:\n     *     reviewID (number):\n     *         The ID of the review the comment belongs to.\n     *\n     *     commentID (number):\n     *         The ID of the comment.\n     *\n     *     commentType (string):\n     *         The type of the comment.\n     *\n     * Returns:\n     *     RB.BaseComment:\n     *     The comment model.\n     */\n    getComment(reviewID, commentID, commentType) {\n        if (!this._comments[commentID]) {\n            const reviewRequest = this.get('reviewRequest');\n            let comment = null;\n\n            switch (commentType) {\n                case 'diff_comments':\n                    comment = reviewRequest\n                        .createReview(reviewID)\n                        .createDiffComment({id: commentID});\n                    break;\n\n                case 'screenshot_comments':\n                    comment = reviewRequest\n                        .createReview(reviewID)\n                        .createScreenshotComment(commentID);\n                    break;\n\n                case 'file_attachment_comments':\n                    comment = reviewRequest\n                        .createReview(reviewID)\n                        .createFileAttachmentComment(commentID);\n                    break;\n\n                case 'general_comments':\n                    comment = reviewRequest\n                        .createReview(reviewID)\n                        .createGeneralComment(commentID);\n                    break;\n\n                default:\n                    console.error(\n                        'getComment received unexpected comment type \"%s\"',\n                        commentType);\n            }\n\n            this._comments[commentID] = comment;\n        }\n\n        return this._comments[commentID];\n    },\n\n    /**\n     * Set the state of a comment.\n     *\n     * Args:\n     *     comment (RB.BaseComment):\n     *         The comment to set the state of.\n     *\n     *     state (string):\n     *         The new issue state for the comment.\n     */\n    _requestState(comment, state) {\n        comment.ready({\n            ready: () => {\n                const oldIssueStatus = comment.get('issueStatus');\n\n                comment.set('issueStatus', state);\n                comment.save({\n                    attrs: ['issueStatus'],\n                    success: (comment, rsp) => {\n                        const rspComment = (rsp.diff_comment ||\n                                            rsp.file_attachment_comment ||\n                                            rsp.screenshot_comment ||\n                                            rsp.general_comment);\n                        this.trigger('issueStatusUpdated', comment,\n                                     oldIssueStatus, rspComment.timestamp);\n                    },\n                });\n            },\n        });\n    },\n});\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACAA,EAAE,CAACC,mBAAH,GAAyBC,QAAQ,CAACC,KAAT,CAAeC,MAAf,CAAsB;EAC3CC,QAAQ,EAAE;IACNC,aAAa,EAAE;EADT,CADiC;;EAK3C;AACJ;AACA;EACIC,UAR2C,wBAQ9B;IACT,KAAKC,SAAL,GAAiB,EAAjB;EACH,CAV0C;;EAY3C;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,eA7B2C,2BA6B3BC,QA7B2B,EA6BjBC,SA7BiB,EA6BNC,WA7BM,EA6BOC,KA7BP,EA6Bc;IACrD,IAAMC,OAAO,GAAG,KAAKC,UAAL,CAAgBL,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,CAAhB;;IACA,KAAKI,aAAL,CAAmBF,OAAnB,EAA4BD,KAA5B;EACH,CAhC0C;;EAkC3C;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIE,UAvD2C,sBAuDhCL,QAvDgC,EAuDtBC,SAvDsB,EAuDXC,WAvDW,EAuDE;IACzC,IAAI,CAAC,KAAKJ,SAAL,CAAeG,SAAf,CAAL,EAAgC;MAC5B,IAAML,aAAa,GAAG,KAAKW,GAAL,CAAS,eAAT,CAAtB;MACA,IAAIH,OAAO,GAAG,IAAd;;MAEA,QAAQF,WAAR;QACI,KAAK,eAAL;UACIE,OAAO,GAAGR,aAAa,CAClBY,YADK,CACQR,QADR,EAELS,iBAFK,CAEa;YAACC,EAAE,EAAET;UAAL,CAFb,CAAV;UAGA;;QAEJ,KAAK,qBAAL;UACIG,OAAO,GAAGR,aAAa,CAClBY,YADK,CACQR,QADR,EAELW,uBAFK,CAEmBV,SAFnB,CAAV;UAGA;;QAEJ,KAAK,0BAAL;UACIG,OAAO,GAAGR,aAAa,CAClBY,YADK,CACQR,QADR,EAELY,2BAFK,CAEuBX,SAFvB,CAAV;UAGA;;QAEJ,KAAK,kBAAL;UACIG,OAAO,GAAGR,aAAa,CAClBY,YADK,CACQR,QADR,EAELa,oBAFK,CAEgBZ,SAFhB,CAAV;UAGA;;QAEJ;UACIa,OAAO,CAACC,KAAR,CACI,kDADJ,EAEIb,WAFJ;MA1BR;;MA+BA,KAAKJ,SAAL,CAAeG,SAAf,IAA4BG,OAA5B;IACH;;IAED,OAAO,KAAKN,SAAL,CAAeG,SAAf,CAAP;EACH,CA/F0C;;EAiG3C;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIK,aA3G2C,yBA2G7BF,OA3G6B,EA2GpBD,KA3GoB,EA2Gb;IAAA;;IAC1BC,OAAO,CAACY,KAAR,CAAc;MACVA,KAAK,EAAE,iBAAM;QACT,IAAMC,cAAc,GAAGb,OAAO,CAACG,GAAR,CAAY,aAAZ,CAAvB;QAEAH,OAAO,CAACc,GAAR,CAAY,aAAZ,EAA2Bf,KAA3B;QACAC,OAAO,CAACe,IAAR,CAAa;UACTC,KAAK,EAAE,CAAC,aAAD,CADE;UAETC,OAAO,EAAE,iBAACjB,OAAD,EAAUkB,GAAV,EAAkB;YACvB,IAAMC,UAAU,GAAID,GAAG,CAACE,YAAJ,IACAF,GAAG,CAACG,uBADJ,IAEAH,GAAG,CAACI,kBAFJ,IAGAJ,GAAG,CAACK,eAHxB;;YAIA,KAAI,CAACC,OAAL,CAAa,oBAAb,EAAmCxB,OAAnC,EACaa,cADb,EAC6BM,UAAU,CAACM,SADxC;UAEH;QATQ,CAAb;MAWH;IAhBS,CAAd;EAkBH;AA9H0C,CAAtB,CAAzB"}