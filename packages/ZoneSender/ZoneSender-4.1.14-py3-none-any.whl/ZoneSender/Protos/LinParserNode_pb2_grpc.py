# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import Common_pb2 as Common__pb2
from . import LinParserNode_pb2 as LinParserNode__pb2


class LinParserNodeStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AddDbfile = channel.unary_unary(
                '/LinParserNode.LinParserNode/AddDbfile',
                request_serializer=Common__pb2.file_path.SerializeToString,
                response_deserializer=Common__pb2.result.FromString,
                )
        self.ClearDbfile = channel.unary_unary(
                '/LinParserNode.LinParserNode/ClearDbfile',
                request_serializer=Common__pb2.empty.SerializeToString,
                response_deserializer=Common__pb2.result.FromString,
                )
        self.GetStatus = channel.unary_unary(
                '/LinParserNode.LinParserNode/GetStatus',
                request_serializer=Common__pb2.empty.SerializeToString,
                response_deserializer=LinParserNode__pb2.lin_parser_status.FromString,
                )


class LinParserNodeServicer(object):
    """Missing associated documentation comment in .proto file."""

    def AddDbfile(self, request, context):
        """添加一个 DB 文件
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ClearDbfile(self, request, context):
        """清空所有 DB 文件
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStatus(self, request, context):
        """获取状态
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_LinParserNodeServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AddDbfile': grpc.unary_unary_rpc_method_handler(
                    servicer.AddDbfile,
                    request_deserializer=Common__pb2.file_path.FromString,
                    response_serializer=Common__pb2.result.SerializeToString,
            ),
            'ClearDbfile': grpc.unary_unary_rpc_method_handler(
                    servicer.ClearDbfile,
                    request_deserializer=Common__pb2.empty.FromString,
                    response_serializer=Common__pb2.result.SerializeToString,
            ),
            'GetStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStatus,
                    request_deserializer=Common__pb2.empty.FromString,
                    response_serializer=LinParserNode__pb2.lin_parser_status.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'LinParserNode.LinParserNode', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class LinParserNode(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def AddDbfile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/LinParserNode.LinParserNode/AddDbfile',
            Common__pb2.file_path.SerializeToString,
            Common__pb2.result.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ClearDbfile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/LinParserNode.LinParserNode/ClearDbfile',
            Common__pb2.empty.SerializeToString,
            Common__pb2.result.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/LinParserNode.LinParserNode/GetStatus',
            Common__pb2.empty.SerializeToString,
            LinParserNode__pb2.lin_parser_status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
