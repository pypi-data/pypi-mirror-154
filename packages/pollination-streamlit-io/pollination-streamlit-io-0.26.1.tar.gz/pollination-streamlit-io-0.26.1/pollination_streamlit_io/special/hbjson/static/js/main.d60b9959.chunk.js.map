{"version":3,"sources":["style.module.scss","SpecialHBJSON.tsx","index.tsx"],"names":["module","exports","SpecialHBJSON","props","render","className","styles","poButton","onClick","_onClicked","disabled","onFocus","_onFocus","onBlur","_onBlur","style","margin","src","process","alt","_readHBJSON","ms","d","state","delay","Promise","resolve","reject","setTimeout","sync_token","window","parent","chrome","webview","hostObjects","sync","hbjson","PassHBJSON","then","result","Streamlit","setComponentValue","setState","isFocused","initialState","args","readHBJSON","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,SAAW,0B,4KCsBvBC,E,kDAEJ,WAAmBC,GAAwB,IAAD,uBACxC,cAAMA,IAgBDC,OAAS,WAKd,OACE,8BACE,4BACEC,UAAWC,IAAOC,SAClBC,QAAS,EAAKC,WACdC,SAAU,EAAKP,MAAMO,SACrBC,QAAS,EAAKC,SACdC,OAAQ,EAAKC,SAEb,8BACE,yBAAKC,MAdI,CACfC,OAAQ,mBAaoBC,IAAKC,wBAAiDC,IAAI,UARpF,eAxBoC,EAwClCV,WAAa,WACnB,EAAKW,eAzCmC,EA4ClCA,YAAc,WACpB,IAAmBC,EAYbC,EAAI,EAAKC,MAAMC,OAZFH,EAaTC,EAZM,IAAIG,SAAQ,SAACC,EAASC,GAAV,OAC1BC,YAAW,WACP,IAAIC,EAAaC,OAAOC,OAAOC,OAAOC,QAAQC,YAC3CC,KAAKC,OAAOC,aAEfX,EADaG,KAEZR,OAMMiB,MAAK,SAAAC,GACdC,IAAUC,kBAAkBF,OA3DQ,EA+DlC3B,SAAW,WACjB,EAAK8B,SAAS,CAAEC,WAAW,KAhEa,EAmElC7B,QAAU,WAChB,EAAK4B,SAAS,CAAEC,WAAW,KAhE3B,IAEMC,EAAe,CACnBpB,MAHY,EAAKrB,MAAM0C,KAAX,OAJ0B,OAUxC,EAAKtB,MAAL,eACKqB,GAGLd,OAAOC,OAAOe,WAAa,EAAK1B,YAdQ,E,uBAFhB2B,KA0EbC,cAAwB9C,GC7FvC+C,IAAS7C,OACP,kBAAC,IAAM8C,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.d60b9959.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"poButton\":\"style_poButton__3x8Ka\"};","import {\n  ComponentProps,\n  withStreamlitConnection,\n  StreamlitComponentBase,\n  Streamlit,\n} from 'streamlit-component-lib'\nimport React, { \n  ReactNode } from 'react'\n\nimport styles from './style.module.scss';\n\ninterface State {\n  delay: number,\n  isFocused: boolean\n}\n\ndeclare global {\n  interface Window {\n    chrome: any\n    readHBJSON: any\n  }\n}\n\nclass SpecialHBJSON extends StreamlitComponentBase<State> {\n\n  public constructor(props: ComponentProps) {\n    super(props)\n\n    // Values from user input\n    const delay = this.props.args['delay'] as number\n\n    const initialState = {\n      delay: delay\n    } as State\n\n    this.state = {\n      ...initialState\n    };\n    \n    window.parent.readHBJSON = this._readHBJSON;\n  }\n\n  public render = (): ReactNode => {\n    const imgStyle = {\n      margin: '0px 3px 2px 0px'\n    }\n\n    return (\n      <span>\n        <button\n          className={styles.poButton}\n          onClick={this._onClicked}\n          disabled={this.props.disabled}\n          onFocus={this._onFocus}\n          onBlur={this._onBlur}\n        >\n          <span>\n            <img style={imgStyle} src={process.env.PUBLIC_URL + '/img/pollination.png'} alt='logo' />\n          </span>\n          Get Model\n        </button>\n      </span>\n    )\n  }\n\n  private _onClicked = (): void => {\n    this._readHBJSON();\n  }\n\n  private _readHBJSON = () : void => {\n    const getResult = (ms: number) => {\n      var promise = new Promise((resolve, reject) => \n      setTimeout(() => {\n          var sync_token = window.parent.chrome.webview.hostObjects\n            .sync.hbjson.PassHBJSON();\n          let result = sync_token;\n          resolve(result);\n        }, ms)\n      );\n\n      return promise;\n    };\n    const d = this.state.delay;\n    getResult(d).then(result => {\n        Streamlit.setComponentValue(result);\n      });\n  }\n\n  private _onFocus = (): void => {\n    this.setState({ isFocused: true })\n  }\n\n  private _onBlur = (): void => {\n    this.setState({ isFocused: false })\n  }\n}\n\nexport default withStreamlitConnection(SpecialHBJSON)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport SpecialHBJSON from \"./SpecialHBJSON\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <SpecialHBJSON />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}