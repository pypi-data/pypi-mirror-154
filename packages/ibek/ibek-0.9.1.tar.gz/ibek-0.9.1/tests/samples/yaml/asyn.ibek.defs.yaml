# yaml-language-server: $schema=file://schemas/ibek.defs.schema.json
module: asyn
defs:
  - name: AsynSerial
    args:
      - type: str
        name: port
        description: The port name for this asyn object
      - type: str
        name: input_eos
        description: Input end of string (terminator)
        default: null
      - type: str
        name: output_eos
        description: Output end of string (terminator)
        default: null
      - type: int
        name: priority
        description: Priority
        default: 100
      - type: bool
        name: noAutoConnect
        description: Set to stop auto connect
        default:
      - type: bool
        name: noProcessEos
        description: Set to avoid processing end of string
        default: null
      - type: str
        name: simulation
        description: IP port to connect to if in simulation mode
        default: null
      - type: int
        name: baud
        description: Baud Rate
        default: null
      - type: int
        name: bits
        # TODO we should add enums to ibek's allowed data types
        # TODO this would require we define the enum values int 'type:' too
        description: Bits [8,7,6,5]
        default: null
      - type: str
        name: parity
        description: Parity [null,even,odd]
        default: null
      - type: int
        name: stop
        description: Stop Bits [1,2]
        default: null
        # note the Asyn API uses Y, N but we will tidy anomalies like this and
        # hide them in the Jinja instead
      - type: bool
        name: crtscts
        description: Set hardware flow control on
        default: null
    script:
      - TODO provide Jinja to generate Startup Entries
      - note this is interesting because builder.py has a few if clauses
      - for generating the necessary script

  # TODO potentially we could break out the common arguments into another object
  # TODO like AsynPort in builder.py. This would require a change that allows
  # TODO us to embed definition of one object within another
  - name: AsynIP
    args:
      - type: str
        name: port
        description: Serial port tty name / IP address optionally followed by protocol
      - type: str
        name: name
        description: Name for the Asyn Port
      - type: str
        name: input_eos
        description: Input end of string (terminator)
        default: null
      - type: str
        name: output_eos
        description: Output end of string (terminator)
        default: null
      - type: int
        name: priority
        description: Priority
        default: 100
      - type: bool
        name: noAutoConnect
        description: Set to stop auto connect
        default:
      - type: bool
        name: noProcessEos
        description: Set to avoid processing end of string
        default: null
      - type: str
        name: simulation
        description: IP port to connect to if in simulation mode
        default: null
    script:
      - TODO provide Jinja to generate Startup Entries
      - note this is interesting because builder.py has a few if clauses
      - for generating the necessary script